

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Dec 11 21:32:03 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F458
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           	psect	smallconst
    56  000600                     __psmallconst:
    57                           	opt stack 0
    58  000600  00                 	db	0
    59  000601                     exp@coeff:
    60                           	opt stack 0
    61  000601  00                 	db	0
    62  000602  80                 	db	128
    63  000603  3F                 	db	63
    64  000604  72                 	db	114
    65  000605  31                 	db	49
    66  000606  3F                 	db	63
    67  000607  FE                 	db	254
    68  000608  75                 	db	117
    69  000609  3E                 	db	62
    70  00060A  58                 	db	88
    71  00060B  63                 	db	99
    72  00060C  3D                 	db	61
    73  00060D  95                 	db	149
    74  00060E  1D                 	db	29
    75  00060F  3C                 	db	60
    76  000610  C5                 	db	197
    77  000611  AE                 	db	174
    78  000612  3A                 	db	58
    79  000613  79                 	db	121
    80  000614  21                 	db	33
    81  000615  39                 	db	57
    82  000616  94                 	db	148
    83  000617  80                 	db	128
    84  000618  37                 	db	55
    85  000619  93                 	db	147
    86  00061A  A7                 	db	167
    87  00061B  35                 	db	53
    88  00061C  56                 	db	86
    89  00061D  15                 	db	21
    90  00061E  34                 	db	52
    91  00061F                     __end_ofexp@coeff:
    92                           	opt stack 0
    93  00061F                     log@coeff:
    94                           	opt stack 0
    95  00061F  00                 	db	0
    96  000620  00                 	db	0
    97  000621  00                 	db	0
    98  000622  00                 	db	0
    99  000623  80                 	db	128
   100  000624  3F                 	db	63
   101  000625  F0                 	db	240
   102  000626  FF                 	db	255
   103  000627  BE                 	db	190
   104  000628  E2                 	db	226
   105  000629  A9                 	db	169
   106  00062A  3E                 	db	62
   107  00062B  83                 	db	131
   108  00062C  76                 	db	118
   109  00062D  BE                 	db	190
   110  00062E  AE                 	db	174
   111  00062F  2B                 	db	43
   112  000630  3E                 	db	62
   113  000631  3C                 	db	60
   114  000632  C3                 	db	195
   115  000633  BD                 	db	189
   116  000634  D2                 	db	210
   117  000635  13                 	db	19
   118  000636  3D                 	db	61
   119  000637  78                 	db	120
   120  000638  D3                 	db	211
   121  000639  BB                 	db	187
   122  00063A                     __end_oflog@coeff:
   123                           	opt stack 0
   124  0000                     _ADCON0	set	4034
   125  0000                     _ADCON0bits	set	4034
   126  0000                     _ADCON1	set	4033
   127  0000                     _BRGCON1	set	3952
   128  0000                     _BRGCON2	set	3953
   129  0000                     _BRGCON3	set	3954
   130  0000                     _CANCON	set	3951
   131  0000                     _CANSTAT	set	3950
   132  0000                     _INTCONbits	set	4082
   133  0000                     _LATBbits	set	3978
   134  0000                     _PIE1bits	set	3997
   135  0000                     _PIR1bits	set	3998
   136  0000                     _RCSTA	set	4011
   137  0000                     _RCSTAbits	set	4011
   138  0000                     _RXB0CON	set	3936
   139  0000                     _RXB0D0	set	3942
   140  0000                     _RXB0D1	set	3943
   141  0000                     _RXB0D2	set	3944
   142  0000                     _RXB0D3	set	3945
   143  0000                     _RXB0D4	set	3946
   144  0000                     _RXB0D5	set	3947
   145  0000                     _RXB0D6	set	3948
   146  0000                     _RXB0D7	set	3949
   147  0000                     _RXB0SIDH	set	3937
   148  0000                     _RXB0SIDL	set	3938
   149  0000                     _RXB1CON	set	3920
   150  0000                     _RXF0SIDL	set	3841
   151  0000                     _RXF1SIDL	set	3845
   152  0000                     _RXF2SIDL	set	3849
   153  0000                     _RXF3SIDL	set	3853
   154  0000                     _RXF4SIDL	set	3857
   155  0000                     _RXF5SIDL	set	3861
   156  0000                     _RXM0SIDH	set	3864
   157  0000                     _RXM0SIDL	set	3865
   158  0000                     _RXM1SIDH	set	3868
   159  0000                     _RXM1SIDL	set	3869
   160  0000                     _SPBRG	set	4015
   161  0000                     _SSPADD	set	4040
   162  0000                     _SSPBUF	set	4041
   163  0000                     _SSPCON1	set	4038
   164  0000                     _SSPCON1bits	set	4038
   165  0000                     _SSPCON2	set	4037
   166  0000                     _SSPCON2bits	set	4037
   167  0000                     _SSPSTAT	set	4039
   168  0000                     _SSPSTATbits	set	4039
   169  0000                     _TRISB	set	3987
   170  0000                     _TRISBbits	set	3987
   171  0000                     _TRISCbits	set	3988
   172  0000                     _TXB0CON	set	3904
   173  0000                     _TXB0D0	set	3910
   174  0000                     _TXB0D1	set	3911
   175  0000                     _TXB0D2	set	3912
   176  0000                     _TXB0D3	set	3913
   177  0000                     _TXB0D4	set	3914
   178  0000                     _TXB0D5	set	3915
   179  0000                     _TXB0D6	set	3916
   180  0000                     _TXB0D7	set	3917
   181  0000                     _TXB0DLC	set	3909
   182  0000                     _TXB0SIDH	set	3905
   183  0000                     _TXB0SIDL	set	3906
   184  0000                     _TXSTA	set	4012
   185  0000                     _TXSTAbits	set	4012
   186                           
   187                           ; #config settings
   188  00063A  00                 	db	0	; dummy byte at the end
   189  0000                     
   190                           	psect	cinit
   191  002358                     __pcinit:
   192                           	opt stack 0
   193  002358                     start_initialization:
   194                           	opt stack 0
   195  002358                     __initialization:
   196                           	opt stack 0
   197                           
   198                           ; Clear objects allocated to BANK1 (52 bytes)
   199  002358  EE01  F000         	lfsr	0,__pbssBANK1
   200  00235C  0E34               	movlw	52
   201  00235E                     clear_0:
   202  00235E  6AEE               	clrf	postinc0,c
   203  002360  06E8               	decf	wreg,f,c
   204  002362  E1FD               	bnz	clear_0
   205                           
   206                           ; Clear objects allocated to BANK0 (115 bytes)
   207  002364  EE00  F060         	lfsr	0,__pbssBANK0
   208  002368  0E73               	movlw	115
   209  00236A                     clear_1:
   210  00236A  6AEE               	clrf	postinc0,c
   211  00236C  06E8               	decf	wreg,f,c
   212  00236E  E1FD               	bnz	clear_1
   213  002370                     end_of_initialization:
   214                           	opt stack 0
   215  002370                     __end_of__initialization:
   216                           	opt stack 0
   217  002370  0E00               	movlw	low (__Lmediumconst shr (0+16))
   218  002372  6EF8               	movwf	tblptru,c
   219  002374  0100               	movlb	0
   220  002376  EF02  F00E         	goto	_main	;jump to C main() function
   221                           tblptru	equ	0xFF8
   222                           postinc0	equ	0xFEE
   223                           wreg	equ	0xFE8
   224                           
   225                           	psect	bssBANK0
   226  000060                     __pbssBANK0:
   227                           	opt stack 0
   228  000060                     _sendData:
   229                           	opt stack 0
   230  000060                     	ds	8
   231  000068                     _Offset:
   232                           	opt stack 0
   233  000068                     	ds	4
   234  00006C                     _Sens2:
   235                           	opt stack 0
   236  00006C                     	ds	4
   237  000070                     _Sensitivity:
   238                           	opt stack 0
   239  000070                     	ds	4
   240  000074                     _dT:
   241                           	opt stack 0
   242  000074                     	ds	4
   243  000078                     _c5:
   244                           	opt stack 0
   245  000078                     	ds	3
   246  00007B                     _c6:
   247                           	opt stack 0
   248  00007B                     	ds	3
   249  00007E                     _mc:
   250                           	opt stack 0
   251  00007E                     	ds	3
   252  000081                     _md:
   253                           	opt stack 0
   254  000081                     	ds	3
   255  000084                     _p0:
   256                           	opt stack 0
   257  000084                     	ds	3
   258  000087                     _p1:
   259                           	opt stack 0
   260  000087                     	ds	3
   261  00008A                     _p2:
   262                           	opt stack 0
   263  00008A                     	ds	3
   264  00008D                     _x0:
   265                           	opt stack 0
   266  00008D                     	ds	3
   267  000090                     _x1:
   268                           	opt stack 0
   269  000090                     	ds	3
   270  000093                     _x2:
   271                           	opt stack 0
   272  000093                     	ds	3
   273  000096                     _y0:
   274                           	opt stack 0
   275  000096                     	ds	3
   276  000099                     _y1:
   277                           	opt stack 0
   278  000099                     	ds	3
   279  00009C                     _y2:
   280                           	opt stack 0
   281  00009C                     	ds	3
   282  00009F                     _AC1:
   283                           	opt stack 0
   284  00009F                     	ds	2
   285  0000A1                     _AC2:
   286                           	opt stack 0
   287  0000A1                     	ds	2
   288  0000A3                     _AC3:
   289                           	opt stack 0
   290  0000A3                     	ds	2
   291  0000A5                     _AC4:
   292                           	opt stack 0
   293  0000A5                     	ds	2
   294  0000A7                     _AC5:
   295                           	opt stack 0
   296  0000A7                     	ds	2
   297  0000A9                     _AC6:
   298                           	opt stack 0
   299  0000A9                     	ds	2
   300  0000AB                     _MB:
   301                           	opt stack 0
   302  0000AB                     	ds	2
   303  0000AD                     _MC:
   304                           	opt stack 0
   305  0000AD                     	ds	2
   306  0000AF                     _MD:
   307                           	opt stack 0
   308  0000AF                     	ds	2
   309  0000B1                     _Resolution:
   310                           	opt stack 0
   311  0000B1                     	ds	2
   312  0000B3                     _VB1:
   313                           	opt stack 0
   314  0000B3                     	ds	2
   315  0000B5                     _VB2:
   316                           	opt stack 0
   317  0000B5                     	ds	2
   318  0000B7                     _HighByte:
   319                           	opt stack 0
   320  0000B7                     	ds	1
   321  0000B8                     _LowByte:
   322                           	opt stack 0
   323  0000B8                     	ds	1
   324  0000B9                     _MidByte:
   325                           	opt stack 0
   326  0000B9                     	ds	1
   327  0000BA                     __error:
   328                           	opt stack 0
   329  0000BA                     	ds	1
   330  0000BB                     _mpu6050:
   331                           	opt stack 0
   332  0000BB                     	ds	15
   333  0000CA                     _TEMP:
   334                           	opt stack 0
   335  0000CA                     	ds	4
   336  0000CE                     _I2C_Bytes:
   337                           	opt stack 0
   338  0000CE                     	ds	3
   339  0000D1                     convertFrom16To8@arrayData:
   340                           	opt stack 0
   341  0000D1                     	ds	2
   342                           tblptru	equ	0xFF8
   343                           postinc0	equ	0xFEE
   344                           wreg	equ	0xFE8
   345                           
   346                           	psect	bssBANK1
   347  000100                     __pbssBANK1:
   348                           	opt stack 0
   349  000100                     _receivedData:
   350                           	opt stack 0
   351  000100                     	ds	8
   352  000108                     _D1:
   353                           	opt stack 0
   354  000108                     	ds	4
   355  00010C                     _D2:
   356                           	opt stack 0
   357  00010C                     	ds	4
   358  000110                     _OFF2:
   359                           	opt stack 0
   360  000110                     	ds	4
   361  000114                     _T2:
   362                           	opt stack 0
   363  000114                     	ds	4
   364  000118                     _mbarInt:
   365                           	opt stack 0
   366  000118                     	ds	4
   367  00011C                     _mbar:
   368                           	opt stack 0
   369  00011C                     	ds	3
   370  00011F                     _tempC:
   371                           	opt stack 0
   372  00011F                     	ds	3
   373  000122                     _errno:
   374                           	opt stack 0
   375  000122                     	ds	2
   376  000124                     _sensorCoeffs:
   377                           	opt stack 0
   378  000124                     	ds	16
   379                           tblptru	equ	0xFF8
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           
   383                           	psect	cstackBANK0
   384  0000D3                     __pcstackBANK0:
   385                           	opt stack 0
   386  0000D3                     _pow$3541:
   387                           	opt stack 0
   388                           
   389                           ; 3 bytes @ 0x0
   390  0000D3                     	ds	3
   391  0000D6                     _pow$3542:
   392                           	opt stack 0
   393                           
   394                           ; 3 bytes @ 0x3
   395  0000D6                     	ds	3
   396  0000D9                     pow@sign:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x6
   400  0000D9                     	ds	1
   401  0000DA                     pow@yi:
   402                           	opt stack 0
   403                           
   404                           ; 4 bytes @ 0x7
   405  0000DA                     	ds	4
   406  0000DE                     ?_BMP180_init:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0xB
   410  0000DE                     	ds	2
   411  0000E0                     BMP180_init@c3:
   412                           	opt stack 0
   413                           
   414                           ; 3 bytes @ 0xD
   415  0000E0                     	ds	3
   416  0000E3                     BMP180_init@b1:
   417                           	opt stack 0
   418                           
   419                           ; 3 bytes @ 0x10
   420  0000E3                     	ds	3
   421  0000E6                     _BMP180_init$3532:
   422                           	opt stack 0
   423                           
   424                           ; 3 bytes @ 0x13
   425  0000E6                     	ds	3
   426  0000E9                     _BMP180_init$3528:
   427                           	opt stack 0
   428                           
   429                           ; 3 bytes @ 0x16
   430  0000E9                     	ds	3
   431  0000EC                     _BMP180_init$3531:
   432                           	opt stack 0
   433                           
   434                           ; 3 bytes @ 0x19
   435  0000EC                     	ds	3
   436  0000EF                     BMP180_init@c4:
   437                           	opt stack 0
   438                           
   439                           ; 3 bytes @ 0x1C
   440  0000EF                     	ds	3
   441  0000F2                     _BMP180_init$3529:
   442                           	opt stack 0
   443                           
   444                           ; 3 bytes @ 0x1F
   445  0000F2                     	ds	3
   446  0000F5                     _BMP180_init$3530:
   447                           	opt stack 0
   448                           
   449                           ; 3 bytes @ 0x22
   450  0000F5                     	ds	3
   451  0000F8                     _BMP180_init$3527:
   452                           	opt stack 0
   453                           
   454                           ; 3 bytes @ 0x25
   455  0000F8                     	ds	3
   456  0000FB                     ??_main:
   457                           
   458                           ; 0 bytes @ 0x28
   459  0000FB                     	ds	1
   460  0000FC                     main@temp:
   461                           	opt stack 0
   462                           
   463                           ; 3 bytes @ 0x29
   464  0000FC                     	ds	3
   465                           tblptru	equ	0xFF8
   466                           postinc0	equ	0xFEE
   467                           wreg	equ	0xFE8
   468                           
   469                           	psect	cstackCOMRAM
   470  000001                     __pcstackCOMRAM:
   471                           	opt stack 0
   472  000001                     ??_IdleI2C:
   473  000001                     ??_ReadI2C:
   474  000001                     ??_Delay10KTCYx:
   475  000001                     ??_CAN_Transmit:
   476  000001                     ?___wmul:
   477                           	opt stack 0
   478  000001                     ?___ftpack:
   479                           	opt stack 0
   480  000001                     ?_frexp:
   481                           	opt stack 0
   482  000001                     ?___fttol:
   483                           	opt stack 0
   484  000001                     CAN_SetMode@canMode:
   485                           	opt stack 0
   486  000001                     OpenI2C@slew:
   487                           	opt stack 0
   488  000001                     delayzz@i:
   489                           	opt stack 0
   490  000001                     OpenUSART@spbrg:
   491                           	opt stack 0
   492  000001                     ___wmul@multiplier:
   493                           	opt stack 0
   494  000001                     ___ftpack@arg:
   495                           	opt stack 0
   496  000001                     ___ftge@ff1:
   497                           	opt stack 0
   498  000001                     ___fttol@f1:
   499                           	opt stack 0
   500  000001                     frexp@value:
   501                           	opt stack 0
   502                           
   503                           ; 3 bytes @ 0x0
   504  000001                     	ds	1
   505  000002                     ??_WriteI2C:
   506  000002                     OpenI2C@sync_mode:
   507                           	opt stack 0
   508  000002                     Delay10KTCYx@unit:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x1
   512  000002                     	ds	1
   513  000003                     OpenUSART@config:
   514                           	opt stack 0
   515  000003                     WriteI2C@data_out:
   516                           	opt stack 0
   517  000003                     delayzz@j:
   518                           	opt stack 0
   519  000003                     ___wmul@multiplicand:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x2
   523  000003                     	ds	1
   524  000004                     I2Cdev_writeBytes@regAddr:
   525                           	opt stack 0
   526  000004                     ___ftpack@exp:
   527                           	opt stack 0
   528  000004                     CAN_Transmit@canId:
   529                           	opt stack 0
   530  000004                     frexp@eptr:
   531                           	opt stack 0
   532  000004                     ___ftge@ff2:
   533                           	opt stack 0
   534                           
   535                           ; 3 bytes @ 0x3
   536  000004                     	ds	1
   537  000005                     ??___fttol:
   538  000005                     I2Cdev_writeBytes@length:
   539                           	opt stack 0
   540  000005                     ___ftpack@sign:
   541                           	opt stack 0
   542  000005                     flashLED@count:
   543                           	opt stack 0
   544  000005                     ___wmul@product:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x4
   548  000005                     	ds	1
   549  000006                     ??___ftpack:
   550  000006                     ??_frexp:
   551  000006                     I2Cdev_writeBytes@data:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x5
   555  000006                     	ds	1
   556  000007                     ??___ftge:
   557  000007                     I2Cdev_readBytes@regAddr:
   558                           	opt stack 0
   559                           
   560                           ; 1 bytes @ 0x6
   561  000007                     	ds	1
   562  000008                     I2Cdev_readBytes@length:
   563                           	opt stack 0
   564  000008                     I2Cdev_writeBytes@devAddr:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x7
   568  000008                     	ds	1
   569  000009                     ?___awtoft:
   570                           	opt stack 0
   571  000009                     ?___lbtoft:
   572                           	opt stack 0
   573  000009                     ?___lltoft:
   574                           	opt stack 0
   575  000009                     ?___lwtoft:
   576                           	opt stack 0
   577  000009                     I2Cdev_writeBytes@i:
   578                           	opt stack 0
   579  000009                     I2Cdev_readBytes@data:
   580                           	opt stack 0
   581  000009                     ___awtoft@c:
   582                           	opt stack 0
   583  000009                     ___lwtoft@c:
   584                           	opt stack 0
   585  000009                     ___lltoft@c:
   586                           	opt stack 0
   587                           
   588                           ; 4 bytes @ 0x8
   589  000009                     	ds	1
   590  00000A                     ?_BMP180_startTemperature:
   591                           	opt stack 0
   592  00000A                     ___fttol@sign1:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x9
   596  00000A                     	ds	1
   597  00000B                     ??_I2Cdev_readBytes:
   598  00000B                     ___fttol@lval:
   599                           	opt stack 0
   600                           
   601                           ; 4 bytes @ 0xA
   602  00000B                     	ds	1
   603  00000C                     ___awtoft@sign:
   604                           	opt stack 0
   605  00000C                     ___lbtoft@c:
   606                           	opt stack 0
   607  00000C                     BMP180_startTemperature@data:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0xB
   611  00000C                     	ds	1
   612  00000D                     ??___lltoft:
   613  00000D                     ?___ftdiv:
   614                           	opt stack 0
   615  00000D                     ___ftdiv@f1:
   616                           	opt stack 0
   617                           
   618                           ; 3 bytes @ 0xC
   619  00000D                     	ds	1
   620  00000E                     BMP180_startTemperature@resultBool:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0xD
   624  00000E                     	ds	1
   625  00000F                     ___fttol@exp1:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0xE
   629  00000F                     	ds	1
   630  000010                     ?___altoft:
   631                           	opt stack 0
   632  000010                     ___ftdiv@f2:
   633                           	opt stack 0
   634  000010                     ___altoft@c:
   635                           	opt stack 0
   636                           
   637                           ; 4 bytes @ 0xF
   638  000010                     	ds	1
   639  000011                     I2Cdev_readBytes@devAddr:
   640                           	opt stack 0
   641  000011                     ___lltoft@exp:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x10
   645  000011                     	ds	1
   646  000012                     I2Cdev_readBytes@count:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x11
   650  000012                     	ds	1
   651  000013                     ??___ftdiv:
   652  000013                     ?_BMP180_readInt:
   653                           	opt stack 0
   654  000013                     BMP180_readInt@value:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x12
   658  000013                     	ds	1
   659  000014                     ??___altoft:
   660                           
   661                           ; 0 bytes @ 0x13
   662  000014                     	ds	1
   663  000015                     ??_BMP180_readInt:
   664                           
   665                           ; 0 bytes @ 0x14
   666  000015                     	ds	1
   667  000016                     ___ftdiv@cntr:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x15
   671  000016                     	ds	1
   672  000017                     BMP180_readInt@address:
   673                           	opt stack 0
   674  000017                     ___ftdiv@f3:
   675                           	opt stack 0
   676                           
   677                           ; 3 bytes @ 0x16
   678  000017                     	ds	1
   679  000018                     ___altoft@exp:
   680                           	opt stack 0
   681  000018                     BMP180_readInt@data:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x17
   685  000018                     	ds	1
   686  000019                     ___altoft@sign:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x18
   690  000019                     	ds	1
   691  00001A                     ___ftdiv@exp:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x19
   695  00001A                     	ds	1
   696  00001B                     ___ftdiv@sign:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x1A
   700  00001B                     	ds	1
   701  00001C                     ?___ftmul:
   702                           	opt stack 0
   703  00001C                     ___ftmul@f1:
   704                           	opt stack 0
   705                           
   706                           ; 3 bytes @ 0x1B
   707  00001C                     	ds	3
   708  00001F                     ___ftmul@f2:
   709                           	opt stack 0
   710                           
   711                           ; 3 bytes @ 0x1E
   712  00001F                     	ds	3
   713  000022                     ??___ftmul:
   714                           
   715                           ; 0 bytes @ 0x21
   716  000022                     	ds	3
   717  000025                     ___ftmul@exp:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0x24
   721  000025                     	ds	1
   722  000026                     ___ftmul@f3_as_product:
   723                           	opt stack 0
   724                           
   725                           ; 3 bytes @ 0x25
   726  000026                     	ds	3
   727  000029                     ___ftmul@cntr:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x28
   731  000029                     	ds	1
   732  00002A                     ___ftmul@sign:
   733                           	opt stack 0
   734                           
   735                           ; 1 bytes @ 0x29
   736  00002A                     	ds	1
   737  00002B                     ?___ftneg:
   738                           	opt stack 0
   739  00002B                     ___ftneg@f1:
   740                           	opt stack 0
   741                           
   742                           ; 3 bytes @ 0x2A
   743  00002B                     	ds	3
   744  00002E                     ?___ftadd:
   745                           	opt stack 0
   746  00002E                     ___ftadd@f1:
   747                           	opt stack 0
   748                           
   749                           ; 3 bytes @ 0x2D
   750  00002E                     	ds	3
   751  000031                     ___ftadd@f2:
   752                           	opt stack 0
   753                           
   754                           ; 3 bytes @ 0x30
   755  000031                     	ds	3
   756  000034                     ??___ftadd:
   757                           
   758                           ; 0 bytes @ 0x33
   759  000034                     	ds	3
   760  000037                     ___ftadd@sign:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x36
   764  000037                     	ds	1
   765  000038                     ___ftadd@exp2:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0x37
   769  000038                     	ds	1
   770  000039                     ___ftadd@exp1:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x38
   774  000039                     	ds	1
   775  00003A                     ?_BMP180_getTemperature:
   776                           	opt stack 0
   777  00003A                     ?___ftsub:
   778                           	opt stack 0
   779  00003A                     ?_floor:
   780                           	opt stack 0
   781  00003A                     ?_eval_poly:
   782                           	opt stack 0
   783  00003A                     BMP180_getTemperature@T:
   784                           	opt stack 0
   785  00003A                     ___ftsub@f1:
   786                           	opt stack 0
   787  00003A                     floor@x:
   788                           	opt stack 0
   789  00003A                     eval_poly@x:
   790                           	opt stack 0
   791                           
   792                           ; 3 bytes @ 0x39
   793  00003A                     	ds	3
   794  00003D                     eval_poly@d:
   795                           	opt stack 0
   796  00003D                     BMP180_getTemperature@tu:
   797                           	opt stack 0
   798  00003D                     ___ftsub@f2:
   799                           	opt stack 0
   800  00003D                     floor@i:
   801                           	opt stack 0
   802                           
   803                           ; 3 bytes @ 0x3C
   804  00003D                     	ds	2
   805  00003F                     eval_poly@n:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x3E
   809  00003F                     	ds	1
   810  000040                     floor@expon:
   811                           	opt stack 0
   812  000040                     _BMP180_getTemperature$3533:
   813                           	opt stack 0
   814                           
   815                           ; 3 bytes @ 0x3F
   816  000040                     	ds	1
   817  000041                     ??_eval_poly:
   818                           
   819                           ; 0 bytes @ 0x40
   820  000041                     	ds	2
   821  000043                     BMP180_getTemperature@result:
   822                           	opt stack 0
   823  000043                     eval_poly@res:
   824                           	opt stack 0
   825                           
   826                           ; 3 bytes @ 0x42
   827  000043                     	ds	2
   828  000045                     BMP180_getTemperature@data:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x44
   832  000045                     	ds	1
   833  000046                     ?_log:
   834                           	opt stack 0
   835  000046                     ?_ldexp:
   836                           	opt stack 0
   837  000046                     ldexp@value:
   838                           	opt stack 0
   839  000046                     log@x:
   840                           	opt stack 0
   841                           
   842                           ; 3 bytes @ 0x45
   843  000046                     	ds	1
   844  000047                     BMP180_getTemperature@a:
   845                           	opt stack 0
   846                           
   847                           ; 3 bytes @ 0x46
   848  000047                     	ds	2
   849  000049                     ldexp@newexp:
   850                           	opt stack 0
   851  000049                     log@exponent:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x48
   855  000049                     	ds	2
   856  00004B                     ??_ldexp:
   857                           
   858                           ; 0 bytes @ 0x4A
   859  00004B                     	ds	2
   860  00004D                     ?_exp:
   861                           	opt stack 0
   862  00004D                     exp@x:
   863                           	opt stack 0
   864                           
   865                           ; 3 bytes @ 0x4C
   866  00004D                     	ds	3
   867  000050                     ??_exp:
   868                           
   869                           ; 0 bytes @ 0x4F
   870  000050                     	ds	4
   871  000054                     _exp$3543:
   872                           	opt stack 0
   873                           
   874                           ; 3 bytes @ 0x53
   875  000054                     	ds	3
   876  000057                     exp@exponent:
   877                           	opt stack 0
   878                           
   879                           ; 2 bytes @ 0x56
   880  000057                     	ds	2
   881  000059                     exp@sign:
   882                           	opt stack 0
   883                           
   884                           ; 1 bytes @ 0x58
   885  000059                     	ds	1
   886  00005A                     ?_pow:
   887                           	opt stack 0
   888  00005A                     pow@x:
   889                           	opt stack 0
   890                           
   891                           ; 3 bytes @ 0x59
   892  00005A                     	ds	3
   893  00005D                     pow@y:
   894                           	opt stack 0
   895                           
   896                           ; 3 bytes @ 0x5C
   897  00005D                     	ds	3
   898  000060                     tblptru	equ	0xFF8
   899                           postinc0	equ	0xFEE
   900                           wreg	equ	0xFE8
   901                           
   902                           ; 0 bytes @ 0x5F
   903 ;;
   904 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   905 ;;
   906 ;; *************** function _main *****************
   907 ;; Defined at:
   908 ;;		line 105 in file "main.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  temp            3   41[BANK0 ] struct doubleAndChar
   913 ;; Return value:  Size  Location     Type
   914 ;;		None               void
   915 ;; Registers used:
   916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   922 ;;      Params:         0       0       0       0       0       0       0
   923 ;;      Locals:         0       3       0       0       0       0       0
   924 ;;      Temps:          0       1       0       0       0       0       0
   925 ;;      Totals:         0       4       0       0       0       0       0
   926 ;;Total ram usage:        4 bytes
   927 ;; Hardware stack levels required when called:    6
   928 ;; This function calls:
   929 ;;		_BMP180_getTemperature
   930 ;;		_BMP180_init
   931 ;;		_BMP180_startTemperature
   932 ;;		_CAN_Transmit
   933 ;;		___lwtoft
   934 ;;		_flashLED
   935 ;;		_initI2C_USART
   936 ;;		_setupCANTxRx
   937 ;; This function is called by:
   938 ;;		Startup code after reset
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text0
   943  001C04                     __ptext0:
   944                           	opt stack 0
   945  001C04                     _main:
   946                           	opt stack 25
   947                           
   948                           ;incstack = 0
   949  001C04  FFFF               	dw	65535
   950                           
   951                           ;main.c: 108: initI2C_USART();
   952  001C06  EC19  F011         	call	_initI2C_USART	;wreg free
   953                           
   954                           ;main.c: 109: setupCANTxRx();
   955  001C0A  ECE8  F011         	call	_setupCANTxRx	;wreg free
   956                           
   957                           ;main.c: 110: LATBbits.LATB0 = 1;
   958  001C0E  808A               	bsf	3978,0,c	;volatile
   959                           
   960                           ;main.c: 113: TRISBbits.TRISB0 = 0;
   961  001C10  9093               	bcf	3987,0,c	;volatile
   962                           
   963                           ;main.c: 114: flashLED();
   964  001C12  EC45  F011         	call	_flashLED	;wreg free
   965                           
   966                           ;main.c: 115: if (BMP180_init() != 1) {
   967  001C16  EC1E  F003         	call	_BMP180_init	;wreg free
   968  001C1A  0100               	movlb	0	; () banked
   969  001C1C  05DE               	decf	?_BMP180_init& (0+255),w,b
   970  001C1E  0100               	movlb	0	; () banked
   971  001C20  11DF               	iorwf	(?_BMP180_init+1)& (0+255),w,b
   972  001C22  A4D8               	btfss	status,2,c
   973                           
   974                           ; BSR set to: 0
   975                           ;main.c: 116: LATBbits.LATB0 = 1;
   976  001C24  808A               	bsf	3978,0,c	;volatile
   977  001C26                     l6753:
   978                           
   979                           ;main.c: 119: {
   980                           ;main.c: 120: union doubleAndChar temp;
   981                           ;main.c: 121: sendData[0] = 1;
   982  001C26  0E01               	movlw	1
   983  001C28  0100               	movlb	0	; () banked
   984  001C2A  6F60               	movwf	_sendData& (0+255),b	;volatile
   985                           
   986                           ;main.c: 122: sendData[1] = 1;
   987  001C2C  0E01               	movlw	1
   988  001C2E  0100               	movlb	0	; () banked
   989  001C30  6F61               	movwf	(_sendData+1)& (0+255),b	;volatile
   990                           
   991                           ; BSR set to: 0
   992                           ;main.c: 123: if (BMP180_startTemperature() != 5)
   993  001C32  ECDE  F010         	call	_BMP180_startTemperature	;wreg free
   994  001C36  500A               	movf	?_BMP180_startTemperature,w,c
   995  001C38  0A05               	xorlw	5
   996  001C3A  100B               	iorwf	?_BMP180_startTemperature+1,w,c
   997  001C3C  A4D8               	btfss	status,2,c
   998                           
   999                           ;main.c: 124: {
  1000                           ;main.c: 125: LATBbits.LATB0 = 1;
  1001  001C3E  808A               	bsf	3978,0,c	;volatile
  1002                           
  1003                           ;main.c: 126: }
  1004                           ;main.c: 127: _delay((unsigned long)((5)*(20000000/4000.0)));
  1005  001C40  0E19               	movlw	25
  1006  001C42  0100               	movlb	0	; () banked
  1007  001C44  6FFB               	movwf	??_main& (0+255),b
  1008  001C46  0E5D               	movlw	93
  1009  001C48                     u4497:
  1010  001C48  2EE8               	decfsz	wreg,f,c
  1011  001C4A  D7FE               	goto	u4497
  1012  001C4C  2FFB               	decfsz	??_main& (0+255),f,b
  1013  001C4E  D7FC               	goto	u4497
  1014                           
  1015                           ;main.c: 129: if (BMP180_getTemperature((double)temp.d) == 1)
  1016  001C50  0100               	movlb	0	; () banked
  1017  001C52  0E00               	movlw	high main@temp
  1018  001C54  6E0A               	movwf	___lwtoft@c+1,c
  1019  001C56  0100               	movlb	0	; () banked
  1020  001C58  0EFC               	movlw	low main@temp
  1021  001C5A  6E09               	movwf	___lwtoft@c,c
  1022  001C5C  EC84  F011         	call	___lwtoft	;wreg free
  1023  001C60  C009  F03A         	movff	?___lwtoft,BMP180_getTemperature@T
  1024  001C64  C00A  F03B         	movff	?___lwtoft+1,BMP180_getTemperature@T+1
  1025  001C68  C00B  F03C         	movff	?___lwtoft+2,BMP180_getTemperature@T+2
  1026  001C6C  EC45  F009         	call	_BMP180_getTemperature	;wreg free
  1027  001C70  043A               	decf	?_BMP180_getTemperature,w,c
  1028  001C72  103B               	iorwf	?_BMP180_getTemperature+1,w,c
  1029  001C74  A4D8               	btfss	status,2,c
  1030  001C76  D00C               	goto	l6769
  1031                           
  1032                           ;main.c: 130: {
  1033                           ;main.c: 131: sendData[1] = (char)temp.b[0];
  1034  001C78  C0FC  F061         	movff	main@temp,_sendData+1	;volatile
  1035                           
  1036                           ;main.c: 139: LATBbits.LATB0 ^= 1;
  1037  001C7C  708A               	btg	3978,0,c	;volatile
  1038                           
  1039                           ;main.c: 140: _delay((unsigned long)((25)*(20000000/4000.0)));
  1040  001C7E  0E7A               	movlw	122
  1041  001C80  0100               	movlb	0	; () banked
  1042  001C82  6FFB               	movwf	??_main& (0+255),b
  1043  001C84  0ED4               	movlw	212
  1044  001C86                     u4507:
  1045  001C86  2EE8               	decfsz	wreg,f,c
  1046  001C88  D7FE               	goto	u4507
  1047  001C8A  2FFB               	decfsz	??_main& (0+255),f,b
  1048  001C8C  D7FC               	goto	u4507
  1049  001C8E  D000               	nop2	
  1050  001C90                     l6769:
  1051                           
  1052                           ;main.c: 141: }
  1053                           ;main.c: 171: CAN_Transmit();
  1054  001C90  EC33  F00F         	call	_CAN_Transmit	;wreg free
  1055                           
  1056                           ;main.c: 173: _delay((unsigned long)((25)*(20000000/4000.0)));
  1057  001C94  0E7A               	movlw	122
  1058  001C96  0100               	movlb	0	; () banked
  1059  001C98  6FFB               	movwf	??_main& (0+255),b
  1060  001C9A  0ED4               	movlw	212
  1061  001C9C                     u4517:
  1062  001C9C  2EE8               	decfsz	wreg,f,c
  1063  001C9E  D7FE               	goto	u4517
  1064  001CA0  2FFB               	decfsz	??_main& (0+255),f,b
  1065  001CA2  D7FC               	goto	u4517
  1066  001CA4  D000               	nop2	
  1067  001CA6  D7BF               	goto	l6753
  1068  001CA8                     __end_of_main:
  1069                           	opt stack 0
  1070                           tblptru	equ	0xFF8
  1071                           postinc0	equ	0xFEE
  1072                           wreg	equ	0xFE8
  1073                           status	equ	0xFD8
  1074                           
  1075 ;; *************** function _setupCANTxRx *****************
  1076 ;; Defined at:
  1077 ;;		line 211 in file "../../C_Library/pic18f458_badgerloop.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;		None               void
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1091 ;;      Params:         0       0       0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0
  1094 ;;      Totals:         0       0       0       0       0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    2
  1098 ;; This function calls:
  1099 ;;		_CAN_Init
  1100 ;;		_Delay10KTCYx
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text1
  1107  0023D0                     __ptext1:
  1108                           	opt stack 0
  1109  0023D0                     _setupCANTxRx:
  1110                           	opt stack 28
  1111                           
  1112                           ;incstack = 0
  1113  0023D0  FFFF               	dw	65535
  1114                           
  1115                           ;pic18f458_badgerloop.c: 214: TRISBbits.TRISB2 = 0;
  1116  0023D2  9493               	bcf	3987,2,c	;volatile
  1117                           
  1118                           ;pic18f458_badgerloop.c: 216: TRISBbits.TRISB3 = 1;
  1119  0023D4  8693               	bsf	3987,3,c	;volatile
  1120                           
  1121                           ;pic18f458_badgerloop.c: 219: CAN_Init();
  1122  0023D6  EC77  F00F         	call	_CAN_Init	;wreg free
  1123                           
  1124                           ;pic18f458_badgerloop.c: 222: Delay10KTCYx(50);
  1125  0023DA  0E32               	movlw	50
  1126  0023DC  ECCE  F011         	call	_Delay10KTCYx
  1127  0023E0  0012               	return	
  1128  0023E2  FFFF               	dw	65535	; errata NOP
  1129  0023E4                     __end_of_setupCANTxRx:
  1130                           	opt stack 0
  1131                           tblptru	equ	0xFF8
  1132                           postinc0	equ	0xFEE
  1133                           wreg	equ	0xFE8
  1134                           status	equ	0xFD8
  1135                           
  1136 ;; *************** function _CAN_Init *****************
  1137 ;; Defined at:
  1138 ;;		line 171 in file "../../C_Library/pic18f458_badgerloop.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;		None               void
  1145 ;; Registers used:
  1146 ;;		wreg, status,2, status,0, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1152 ;;      Params:         0       0       0       0       0       0       0
  1153 ;;      Locals:         0       0       0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0       0       0
  1155 ;;      Totals:         0       0       0       0       0       0       0
  1156 ;;Total ram usage:        0 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    1
  1159 ;; This function calls:
  1160 ;;		_CAN_SetMode
  1161 ;; This function is called by:
  1162 ;;		_setupCANTxRx
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text2
  1167  001EEE                     __ptext2:
  1168                           	opt stack 0
  1169  001EEE                     _CAN_Init:
  1170                           	opt stack 28
  1171                           
  1172                           ;incstack = 0
  1173  001EEE  FFFF               	dw	65535
  1174                           
  1175                           ;pic18f458_badgerloop.c: 173: TRISB = (1<<3);
  1176  001EF0  0E08               	movlw	8
  1177  001EF2  6E93               	movwf	3987,c	;volatile
  1178                           
  1179                           ;pic18f458_badgerloop.c: 176: CAN_SetMode((0x80));
  1180  001EF4  0E80               	movlw	128
  1181  001EF6  ECDC  F011         	call	_CAN_SetMode
  1182                           
  1183                           ;pic18f458_badgerloop.c: 185: BRGCON1 = 0x00;
  1184  001EFA  0E00               	movlw	0
  1185  001EFC  6E70               	movwf	3952,c	;volatile
  1186                           
  1187                           ;pic18f458_badgerloop.c: 186: BRGCON2 = 0xBA;
  1188  001EFE  0EBA               	movlw	186
  1189  001F00  6E71               	movwf	3953,c	;volatile
  1190                           
  1191                           ;pic18f458_badgerloop.c: 187: BRGCON3 = 0x07;
  1192  001F02  0E07               	movlw	7
  1193  001F04  6E72               	movwf	3954,c	;volatile
  1194                           
  1195                           ;pic18f458_badgerloop.c: 190: RXM0SIDH = 0; RXM0SIDL = 0;
  1196  001F06  0E00               	movlw	0
  1197  001F08  CFE8 FF18          	movff	wreg,3864
  1198  001F0C  0E00               	movlw	0
  1199  001F0E  CFE8 FF19          	movff	wreg,3865
  1200                           
  1201                           ;pic18f458_badgerloop.c: 191: RXM1SIDH = 0; RXM1SIDL = 0;
  1202  001F12  0E00               	movlw	0
  1203  001F14  CFE8 FF1C          	movff	wreg,3868
  1204  001F18  0E00               	movlw	0
  1205  001F1A  CFE8 FF1D          	movff	wreg,3869
  1206                           
  1207                           ;pic18f458_badgerloop.c: 192: RXF0SIDL = 0;
  1208  001F1E  0E00               	movlw	0
  1209  001F20  CFE8 FF01          	movff	wreg,3841
  1210                           
  1211                           ;pic18f458_badgerloop.c: 193: RXF1SIDL = 0;
  1212  001F24  0E00               	movlw	0
  1213  001F26  CFE8 FF05          	movff	wreg,3845
  1214                           
  1215                           ;pic18f458_badgerloop.c: 194: RXF2SIDL = 0;
  1216  001F2A  0E00               	movlw	0
  1217  001F2C  CFE8 FF09          	movff	wreg,3849
  1218                           
  1219                           ;pic18f458_badgerloop.c: 195: RXF3SIDL = 0;
  1220  001F30  0E00               	movlw	0
  1221  001F32  CFE8 FF0D          	movff	wreg,3853
  1222                           
  1223                           ;pic18f458_badgerloop.c: 196: RXF4SIDL = 0;
  1224  001F36  0E00               	movlw	0
  1225  001F38  CFE8 FF11          	movff	wreg,3857
  1226                           
  1227                           ;pic18f458_badgerloop.c: 197: RXF5SIDL = 0;
  1228  001F3C  0E00               	movlw	0
  1229  001F3E  CFE8 FF15          	movff	wreg,3861
  1230                           
  1231                           ;pic18f458_badgerloop.c: 199: RXB0CON = 0;
  1232  001F42  0E00               	movlw	0
  1233  001F44  6E60               	movwf	3936,c	;volatile
  1234                           
  1235                           ;pic18f458_badgerloop.c: 200: RXB1CON = 0;
  1236  001F46  0E00               	movlw	0
  1237  001F48  CFE8 FF50          	movff	wreg,3920
  1238                           
  1239                           ;pic18f458_badgerloop.c: 208: CAN_SetMode((0x00));
  1240  001F4C  0E00               	movlw	0
  1241  001F4E  ECDC  F011         	call	_CAN_SetMode
  1242  001F52  0012               	return	
  1243  001F54  FFFF               	dw	65535	; errata NOP
  1244  001F56                     __end_of_CAN_Init:
  1245                           	opt stack 0
  1246                           tblptru	equ	0xFF8
  1247                           postinc0	equ	0xFEE
  1248                           wreg	equ	0xFE8
  1249                           status	equ	0xFD8
  1250                           
  1251 ;; *************** function _CAN_SetMode *****************
  1252 ;; Defined at:
  1253 ;;		line 162 in file "../../C_Library/pic18f458_badgerloop.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  canMode         1    wreg     unsigned char 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  canMode         1    0[COMRAM] unsigned char 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;		None               void
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1267 ;;      Params:         0       0       0       0       0       0       0
  1268 ;;      Locals:         1       0       0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0
  1270 ;;      Totals:         1       0       0       0       0       0       0
  1271 ;;Total ram usage:        1 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_CAN_Init
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text3
  1281  0023B8                     __ptext3:
  1282                           	opt stack 0
  1283  0023B8                     _CAN_SetMode:
  1284                           	opt stack 28
  1285                           
  1286                           ;incstack = 0
  1287  0023B8  FFFF               	dw	65535
  1288                           
  1289                           ;CAN_SetMode@canMode stored from wreg
  1290  0023BA  6E01               	movwf	CAN_SetMode@canMode,c
  1291                           
  1292                           ;pic18f458_badgerloop.c: 165: CANCON = canMode;
  1293  0023BC  C001  FF6F         	movff	CAN_SetMode@canMode,3951	;volatile
  1294  0023C0                     l4969:
  1295  0023C0  506E               	movf	3950,w,c	;volatile
  1296  0023C2  0BE0               	andlw	224
  1297  0023C4  1801               	xorwf	CAN_SetMode@canMode,w,c
  1298  0023C6  B4D8               	btfsc	status,2,c
  1299  0023C8  0012               	return	
  1300  0023CA  FFFF               	dw	65535	; assembler added errata NOP
  1301  0023CC  D7F9               	goto	l4969
  1302  0023CE  FFFF               	dw	65535	; errata NOP
  1303  0023D0                     __end_of_CAN_SetMode:
  1304                           	opt stack 0
  1305                           tblptru	equ	0xFF8
  1306                           postinc0	equ	0xFEE
  1307                           wreg	equ	0xFE8
  1308                           status	equ	0xFD8
  1309                           
  1310 ;; *************** function _initI2C_USART *****************
  1311 ;; Defined at:
  1312 ;;		line 230 in file "../../C_Library/pic18f458_badgerloop.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;		None               void
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1326 ;;      Params:         0       0       0       0       0       0       0
  1327 ;;      Locals:         0       0       0       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0       0       0
  1329 ;;      Totals:         0       0       0       0       0       0       0
  1330 ;;Total ram usage:        0 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    1
  1333 ;; This function calls:
  1334 ;;		_Delay10KTCYx
  1335 ;;		_OpenI2C
  1336 ;;		_OpenUSART
  1337 ;; This function is called by:
  1338 ;;		_main
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text4
  1343  002232                     __ptext4:
  1344                           	opt stack 0
  1345  002232                     _initI2C_USART:
  1346                           	opt stack 29
  1347                           
  1348                           ;incstack = 0
  1349  002232  FFFF               	dw	65535
  1350                           
  1351                           ;pic18f458_badgerloop.c: 232: TRISCbits.RC6 = 0;
  1352  002234  9C94               	bcf	3988,6,c	;volatile
  1353                           
  1354                           ;pic18f458_badgerloop.c: 233: TRISCbits.RC7 = 1;
  1355  002236  8E94               	bsf	3988,7,c	;volatile
  1356                           
  1357                           ;pic18f458_badgerloop.c: 239: OpenUSART (0b01111111 &
  1358                           ;pic18f458_badgerloop.c: 240: 0b10111111 &
  1359                           ;pic18f458_badgerloop.c: 241: 0b11111110 &
  1360                           ;pic18f458_badgerloop.c: 242: 0b11111101 &
  1361                           ;pic18f458_badgerloop.c: 243: 0b11111111 &
  1362                           ;pic18f458_badgerloop.c: 244: 0b11111111, 129);
  1363  002238  0E00               	movlw	0
  1364  00223A  6E02               	movwf	OpenUSART@spbrg+1,c
  1365  00223C  0E81               	movlw	129
  1366  00223E  6E01               	movwf	OpenUSART@spbrg,c
  1367  002240  0E3C               	movlw	60
  1368  002242  ECDF  F00F         	call	_OpenUSART
  1369                           
  1370                           ;pic18f458_badgerloop.c: 247: OpenI2C(0b00001000, 0b10000000);
  1371  002246  0E80               	movlw	128
  1372  002248  6E01               	movwf	OpenI2C@slew,c
  1373  00224A  0E08               	movlw	8
  1374  00224C  ECBD  F011         	call	_OpenI2C
  1375                           
  1376                           ;pic18f458_badgerloop.c: 248: SSPADD = ( ( 20000000 / ( 4 * 400000 ) ) - 1 );
  1377  002250  0E0B               	movlw	11
  1378  002252  6EC8               	movwf	4040,c	;volatile
  1379                           
  1380                           ;pic18f458_badgerloop.c: 251: Delay10KTCYx(50);
  1381  002254  0E32               	movlw	50
  1382  002256  ECCE  F011         	call	_Delay10KTCYx
  1383  00225A  0012               	return	
  1384  00225C  FFFF               	dw	65535	; errata NOP
  1385  00225E                     __end_of_initI2C_USART:
  1386                           	opt stack 0
  1387                           tblptru	equ	0xFF8
  1388                           postinc0	equ	0xFEE
  1389                           wreg	equ	0xFE8
  1390                           status	equ	0xFD8
  1391                           
  1392 ;; *************** function _OpenUSART *****************
  1393 ;; Defined at:
  1394 ;;		line 21 in file "/Applications/microchip/xc8/v1.32/sources/pic18/plib/USART/uopen.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  config          1    wreg     unsigned char 
  1397 ;;  spbrg           2    0[COMRAM] unsigned int 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  config          1    2[COMRAM] unsigned char 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;		None               void
  1402 ;; Registers used:
  1403 ;;		wreg, status,2
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1409 ;;      Params:         2       0       0       0       0       0       0
  1410 ;;      Locals:         1       0       0       0       0       0       0
  1411 ;;      Temps:          0       0       0       0       0       0       0
  1412 ;;      Totals:         3       0       0       0       0       0       0
  1413 ;;Total ram usage:        3 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; This function calls:
  1416 ;;		Nothing
  1417 ;; This function is called by:
  1418 ;;		_initI2C_USART
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text5
  1423  001FBE                     __ptext5:
  1424                           	opt stack 0
  1425  001FBE                     _OpenUSART:
  1426                           	opt stack 29
  1427                           
  1428                           ;incstack = 0
  1429  001FBE  FFFF               	dw	65535
  1430                           
  1431                           ;OpenUSART@config stored from wreg
  1432  001FC0  6E03               	movwf	OpenUSART@config,c
  1433  001FC2  0E00               	movlw	0
  1434  001FC4  6EAC               	movwf	4012,c	;volatile
  1435  001FC6  0E00               	movlw	0
  1436  001FC8  6EAB               	movwf	4011,c	;volatile
  1437  001FCA  B003               	btfsc	OpenUSART@config,0,c
  1438  001FCC  88AC               	bsf	4012,4,c	;volatile
  1439  001FCE  A203               	btfss	OpenUSART@config,1,c
  1440  001FD0  D002               	goto	l5281
  1441  001FD2  8CAC               	bsf	4012,6,c	;volatile
  1442  001FD4  8CAB               	bsf	4011,6,c	;volatile
  1443  001FD6                     l5281:
  1444  001FD6  B403               	btfsc	OpenUSART@config,2,c
  1445  001FD8  8EAC               	bsf	4012,7,c	;volatile
  1446  001FDA  A603               	btfss	OpenUSART@config,3,c
  1447  001FDC  D002               	goto	l1347
  1448  001FDE  88AB               	bsf	4011,4,c	;volatile
  1449  001FE0  D001               	goto	l5289
  1450  001FE2                     l1347:
  1451  001FE2  8AAB               	bsf	4011,5,c	;volatile
  1452  001FE4                     l5289:
  1453  001FE4  A803               	btfss	OpenUSART@config,4,c
  1454  001FE6  D002               	goto	l1349
  1455  001FE8  84AC               	bsf	4012,2,c	;volatile
  1456  001FEA  D001               	goto	l1350
  1457  001FEC                     l1349:
  1458  001FEC  94AC               	bcf	4012,2,c	;volatile
  1459  001FEE                     l1350:
  1460  001FEE  989E               	bcf	3998,4,c	;volatile
  1461  001FF0  AC03               	btfss	OpenUSART@config,6,c
  1462  001FF2  D002               	goto	l1351
  1463  001FF4  8A9D               	bsf	3997,5,c	;volatile
  1464  001FF6  D001               	goto	l1352
  1465  001FF8                     l1351:
  1466  001FF8  9A9D               	bcf	3997,5,c	;volatile
  1467  001FFA                     l1352:
  1468  001FFA  9A9E               	bcf	3998,5,c	;volatile
  1469  001FFC  AE03               	btfss	OpenUSART@config,7,c
  1470  001FFE  D002               	goto	l1353
  1471  002000  889D               	bsf	3997,4,c	;volatile
  1472  002002  D001               	goto	l1354
  1473  002004                     l1353:
  1474  002004  989D               	bcf	3997,4,c	;volatile
  1475  002006                     l1354:
  1476  002006  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1477  00200A  8AAC               	bsf	4012,5,c	;volatile
  1478  00200C  8EAB               	bsf	4011,7,c	;volatile
  1479  00200E  9C94               	bcf	3988,6,c	;volatile
  1480  002010  8E94               	bsf	3988,7,c	;volatile
  1481  002012  B8AC               	btfsc	4012,4,c	;volatile
  1482  002014  BEAC               	btfsc	4012,7,c	;volatile
  1483  002016  D001               	goto	l1356
  1484  002018  8C94               	bsf	3988,6,c	;volatile
  1485  00201A                     l1356:
  1486  00201A  0012               	return	
  1487  00201C  FFFF               	dw	65535	; errata NOP
  1488  00201E                     __end_of_OpenUSART:
  1489                           	opt stack 0
  1490                           tblptru	equ	0xFF8
  1491                           postinc0	equ	0xFEE
  1492                           wreg	equ	0xFE8
  1493                           status	equ	0xFD8
  1494                           
  1495 ;; *************** function _OpenI2C *****************
  1496 ;; Defined at:
  1497 ;;		line 14 in file "/Applications/microchip/xc8/v1.32/sources/pic18/plib/i2c/i2c_open.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  sync_mode       1    wreg     unsigned char 
  1500 ;;  slew            1    0[COMRAM] unsigned char 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  sync_mode       1    1[COMRAM] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;		None               void
  1505 ;; Registers used:
  1506 ;;		wreg, status,2, status,0
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1512 ;;      Params:         1       0       0       0       0       0       0
  1513 ;;      Locals:         1       0       0       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0       0       0
  1515 ;;      Totals:         2       0       0       0       0       0       0
  1516 ;;Total ram usage:        2 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_initI2C_USART
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text6
  1526  00237A                     __ptext6:
  1527                           	opt stack 0
  1528  00237A                     _OpenI2C:
  1529                           	opt stack 29
  1530                           
  1531                           ;incstack = 0
  1532  00237A  FFFF               	dw	65535
  1533                           
  1534                           ;OpenI2C@sync_mode stored from wreg
  1535  00237C  6E02               	movwf	OpenI2C@sync_mode,c
  1536  00237E  0E3F               	movlw	63
  1537  002380  16C7               	andwf	4039,f,c	;volatile
  1538  002382  0E00               	movlw	0
  1539  002384  6EC6               	movwf	4038,c	;volatile
  1540  002386  0E00               	movlw	0
  1541  002388  6EC5               	movwf	4037,c	;volatile
  1542  00238A  5002               	movf	OpenI2C@sync_mode,w,c
  1543  00238C  12C6               	iorwf	4038,f,c	;volatile
  1544  00238E  5001               	movf	OpenI2C@slew,w,c
  1545  002390  12C7               	iorwf	4039,f,c	;volatile
  1546  002392  8694               	bsf	3988,3,c	;volatile
  1547  002394  8894               	bsf	3988,4,c	;volatile
  1548  002396  8AC6               	bsf	4038,5,c	;volatile
  1549  002398  0012               	return	
  1550  00239A  FFFF               	dw	65535	; errata NOP
  1551  00239C                     __end_of_OpenI2C:
  1552                           	opt stack 0
  1553                           tblptru	equ	0xFF8
  1554                           postinc0	equ	0xFEE
  1555                           wreg	equ	0xFE8
  1556                           status	equ	0xFD8
  1557                           
  1558 ;; *************** function _Delay10KTCYx *****************
  1559 ;; Defined at:
  1560 ;;		line 8 in file "/Applications/microchip/xc8/v1.32/sources/pic18/d10ktcyx.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  unit            1    wreg     unsigned char 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;  unit            1    1[COMRAM] unsigned char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;		None               void
  1567 ;; Registers used:
  1568 ;;		wreg
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1574 ;;      Params:         0       0       0       0       0       0       0
  1575 ;;      Locals:         1       0       0       0       0       0       0
  1576 ;;      Temps:          1       0       0       0       0       0       0
  1577 ;;      Totals:         2       0       0       0       0       0       0
  1578 ;;Total ram usage:        2 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_setupCANTxRx
  1584 ;;		_initI2C_USART
  1585 ;;		_initMPU6050
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           	psect	text7
  1590  00239C                     __ptext7:
  1591                           	opt stack 0
  1592  00239C                     _Delay10KTCYx:
  1593                           	opt stack 29
  1594                           
  1595                           ;incstack = 0
  1596  00239C  FFFF               	dw	65535
  1597                           
  1598                           ;Delay10KTCYx@unit stored from wreg
  1599  00239E  6E02               	movwf	Delay10KTCYx@unit,c
  1600  0023A0                     l1661:
  1601  0023A0  0E0A               	movlw	10
  1602  0023A2  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  1603  0023A4  0EBE               	movlw	190
  1604  0023A6                     u4527:
  1605  0023A6  2EE8               	decfsz	wreg,f,c
  1606  0023A8  D7FE               	goto	u4527
  1607  0023AA  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1608  0023AC  D7FC               	goto	u4527
  1609  0023AE  D000               	nop2	
  1610  0023B0  2E02               	decfsz	Delay10KTCYx@unit,f,c
  1611  0023B2  D7F6               	goto	l1661
  1612  0023B4  0012               	return	
  1613  0023B6  FFFF               	dw	65535	; errata NOP
  1614  0023B8                     __end_of_Delay10KTCYx:
  1615                           	opt stack 0
  1616                           tblptru	equ	0xFF8
  1617                           postinc0	equ	0xFEE
  1618                           wreg	equ	0xFE8
  1619                           status	equ	0xFD8
  1620                           
  1621 ;; *************** function _flashLED *****************
  1622 ;; Defined at:
  1623 ;;		line 84 in file "main.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  count           2    4[COMRAM] int 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;		None               void
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, status,0, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1637 ;;      Params:         0       0       0       0       0       0       0
  1638 ;;      Locals:         2       0       0       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0
  1640 ;;      Totals:         2       0       0       0       0       0       0
  1641 ;;Total ram usage:        2 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    1
  1644 ;; This function calls:
  1645 ;;		_delayzz
  1646 ;; This function is called by:
  1647 ;;		_main
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           	psect	text8
  1652  00228A                     __ptext8:
  1653                           	opt stack 0
  1654  00228A                     _flashLED:
  1655                           	opt stack 29
  1656                           
  1657                           ;incstack = 0
  1658  00228A  FFFF               	dw	65535
  1659                           
  1660                           ;main.c: 85: int count;
  1661                           ;main.c: 86: count = 10;
  1662  00228C  0E00               	movlw	0
  1663  00228E  6E06               	movwf	flashLED@count+1,c
  1664  002290  0E0A               	movlw	10
  1665  002292  6E05               	movwf	flashLED@count,c
  1666  002294                     l5611:
  1667                           
  1668                           ;main.c: 88: LATBbits.LATB0 = 1;
  1669  002294  808A               	bsf	3978,0,c	;volatile
  1670                           
  1671                           ;main.c: 89: delayzz();
  1672  002296  ECBD  F010         	call	_delayzz	;wreg free
  1673                           
  1674                           ;main.c: 90: LATBbits.LATB0 = 0;
  1675  00229A  908A               	bcf	3978,0,c	;volatile
  1676                           
  1677                           ;main.c: 91: delayzz();
  1678  00229C  ECBD  F010         	call	_delayzz	;wreg free
  1679                           
  1680                           ;main.c: 92: count--;
  1681  0022A0  0605               	decf	flashLED@count,f,c
  1682  0022A2  A0D8               	btfss	status,0,c
  1683  0022A4  0606               	decf	flashLED@count+1,f,c
  1684                           
  1685                           ;main.c: 93: if (count == 0)
  1686  0022A6  5006               	movf	flashLED@count+1,w,c
  1687  0022A8  1005               	iorwf	flashLED@count,w,c
  1688  0022AA  B4D8               	btfsc	status,2,c
  1689                           
  1690                           ;main.c: 94: {
  1691                           ;main.c: 95: break;
  1692  0022AC  0012               	return	
  1693  0022AE  FFFF               	dw	65535	; assembler added errata NOP
  1694  0022B0  D7F1               	goto	l5611
  1695  0022B2  FFFF               	dw	65535	; errata NOP
  1696  0022B4                     __end_of_flashLED:
  1697                           	opt stack 0
  1698                           tblptru	equ	0xFF8
  1699                           postinc0	equ	0xFEE
  1700                           wreg	equ	0xFE8
  1701                           status	equ	0xFD8
  1702                           
  1703 ;; *************** function _delayzz *****************
  1704 ;; Defined at:
  1705 ;;		line 128 in file "../../C_Library/pic18f458_badgerloop.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;		None
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  j               2    2[COMRAM] int 
  1710 ;;  i               2    0[COMRAM] int 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;		None               void
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, status,0
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1720 ;;      Params:         0       0       0       0       0       0       0
  1721 ;;      Locals:         4       0       0       0       0       0       0
  1722 ;;      Temps:          0       0       0       0       0       0       0
  1723 ;;      Totals:         4       0       0       0       0       0       0
  1724 ;;Total ram usage:        4 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; This function calls:
  1727 ;;		Nothing
  1728 ;; This function is called by:
  1729 ;;		_flashLED
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text9
  1734  00217A                     __ptext9:
  1735                           	opt stack 0
  1736  00217A                     _delayzz:
  1737                           	opt stack 29
  1738                           
  1739                           ;incstack = 0
  1740  00217A  FFFF               	dw	65535
  1741                           
  1742                           ;pic18f458_badgerloop.c: 129: int i, j;
  1743                           ;pic18f458_badgerloop.c: 130: for(i=0;i<5000;i++)
  1744  00217C  0E00               	movlw	0
  1745  00217E  6E02               	movwf	delayzz@i+1,c
  1746  002180  0E00               	movlw	0
  1747  002182  6E01               	movwf	delayzz@i,c
  1748  002184  5002               	movf	delayzz@i+1,w,c
  1749  002186  0A80               	xorlw	128
  1750  002188  0F6D               	addlw	-147
  1751  00218A  0E88               	movlw	136
  1752  00218C  B4D8               	btfsc	status,2,c
  1753  00218E  5C01               	subwf	delayzz@i,w,c
  1754  002190  B0D8               	btfsc	status,0,c
  1755  002192  D012               	goto	l1248
  1756                           
  1757                           ;pic18f458_badgerloop.c: 131: {
  1758                           ;pic18f458_badgerloop.c: 132: for(j=0;j<2;j++)
  1759  002194  0E00               	movlw	0
  1760  002196  6E04               	movwf	delayzz@j+1,c
  1761  002198  0E00               	movlw	0
  1762  00219A  6E03               	movwf	delayzz@j,c
  1763  00219C  5004               	movf	delayzz@j+1,w,c
  1764  00219E  0A80               	xorlw	128
  1765  0021A0  0F80               	addlw	-128
  1766  0021A2  0E02               	movlw	2
  1767  0021A4  B4D8               	btfsc	status,2,c
  1768  0021A6  5C03               	subwf	delayzz@j,w,c
  1769  0021A8  B0D8               	btfsc	status,0,c
  1770  0021AA  D003               	goto	l5227
  1771                           
  1772                           ;pic18f458_badgerloop.c: 133: {
  1773  0021AC  4A03               	infsnz	delayzz@j,f,c
  1774  0021AE  2A04               	incf	delayzz@j+1,f,c
  1775  0021B0  D7F5               	goto	L1
  1776  0021B2                     l5227:
  1777  0021B2  4A01               	infsnz	delayzz@i,f,c
  1778  0021B4  2A02               	incf	delayzz@i+1,f,c
  1779  0021B6  D7E6               	goto	L2
  1780  0021B8                     l1248:
  1781  0021B8  0012               	return	
  1782  0021BA  FFFF               	dw	65535	; errata NOP
  1783  0021BC                     __end_of_delayzz:
  1784                           	opt stack 0
  1785                           tblptru	equ	0xFF8
  1786                           postinc0	equ	0xFEE
  1787                           wreg	equ	0xFE8
  1788                           status	equ	0xFD8
  1789                           
  1790 ;; *************** function _CAN_Transmit *****************
  1791 ;; Defined at:
  1792 ;;		line 18 in file "main.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;		None
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  canId           2    3[COMRAM] unsigned int 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;		None               void
  1799 ;; Registers used:
  1800 ;;		wreg, status,2, status,0
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1806 ;;      Params:         0       0       0       0       0       0       0
  1807 ;;      Locals:         2       0       0       0       0       0       0
  1808 ;;      Temps:          3       0       0       0       0       0       0
  1809 ;;      Totals:         5       0       0       0       0       0       0
  1810 ;;Total ram usage:        5 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_main
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text10
  1820  001E66                     __ptext10:
  1821                           	opt stack 0
  1822  001E66                     _CAN_Transmit:
  1823                           	opt stack 30
  1824                           
  1825                           ;incstack = 0
  1826  001E66  FFFF               	dw	65535
  1827                           
  1828                           ;main.c: 20: uint16_t canId = (1);
  1829  001E68  0E00               	movlw	0
  1830  001E6A  6E05               	movwf	CAN_Transmit@canId+1,c
  1831  001E6C  0E01               	movlw	1
  1832  001E6E  6E04               	movwf	CAN_Transmit@canId,c
  1833                           
  1834                           ;main.c: 21: canId = (canId<<5);
  1835  001E70  C004  F001         	movff	CAN_Transmit@canId,??_CAN_Transmit
  1836  001E74  C005  F002         	movff	CAN_Transmit@canId+1,??_CAN_Transmit+1
  1837  001E78  0E05               	movlw	5
  1838  001E7A                     u3855:
  1839  001E7A  90D8               	bcf	status,0,c
  1840  001E7C  3601               	rlcf	??_CAN_Transmit,f,c
  1841  001E7E  3602               	rlcf	??_CAN_Transmit+1,f,c
  1842  001E80  2EE8               	decfsz	wreg,f,c
  1843  001E82  D7FB               	goto	u3855
  1844  001E84  C001  F004         	movff	??_CAN_Transmit,CAN_Transmit@canId
  1845  001E88  C002  F005         	movff	??_CAN_Transmit+1,CAN_Transmit@canId+1
  1846  001E8C                     l1284:
  1847  001E8C  CF40 F001          	movff	3904,??_CAN_Transmit
  1848  001E90  B601               	btfsc	??_CAN_Transmit,3,c
  1849  001E92  D7FC               	goto	l1284
  1850                           
  1851                           ;main.c: 26: TXB0SIDL = (uint8_t)(canId & 0x00E0);
  1852  001E94  C004  F001         	movff	CAN_Transmit@canId,??_CAN_Transmit
  1853  001E98  0EE0               	movlw	224
  1854  001E9A  1601               	andwf	??_CAN_Transmit,f,c
  1855  001E9C  C001  FF42         	movff	??_CAN_Transmit,3906
  1856                           
  1857                           ;main.c: 27: TXB0SIDH = (uint8_t)((canId>>8)& 0x00FF);
  1858  001EA0  C005  F001         	movff	CAN_Transmit@canId+1,??_CAN_Transmit
  1859  001EA4  C001  F002         	movff	??_CAN_Transmit,??_CAN_Transmit+1
  1860  001EA8  6A03               	clrf	(??_CAN_Transmit+2)& (0+255),c
  1861  001EAA  C002  FF41         	movff	??_CAN_Transmit+1,3905
  1862                           
  1863                           ;main.c: 31: TXB0DLC = 0x08;
  1864  001EAE  0E08               	movlw	8
  1865  001EB0  CFE8 FF45          	movff	wreg,3909
  1866                           
  1867                           ;main.c: 34: TXB0D0 = sendData[0];
  1868  001EB4  0100               	movlb	0	; () banked
  1869  001EB6  C060  FF46         	movff	_sendData,3910	;volatile
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;main.c: 35: TXB0D1 = sendData[1];
  1873  001EBA  0100               	movlb	0	; () banked
  1874  001EBC  C061  FF47         	movff	_sendData+1,3911	;volatile
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;main.c: 36: TXB0D2 = sendData[2];
  1878  001EC0  0100               	movlb	0	; () banked
  1879  001EC2  C062  FF48         	movff	_sendData+2,3912	;volatile
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;main.c: 37: TXB0D3 = sendData[3];
  1883  001EC6  0100               	movlb	0	; () banked
  1884  001EC8  C063  FF49         	movff	_sendData+3,3913	;volatile
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;main.c: 38: TXB0D4 = sendData[4];
  1888  001ECC  0100               	movlb	0	; () banked
  1889  001ECE  C064  FF4A         	movff	_sendData+4,3914	;volatile
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;main.c: 39: TXB0D5 = sendData[5];
  1893  001ED2  0100               	movlb	0	; () banked
  1894  001ED4  C065  FF4B         	movff	_sendData+5,3915	;volatile
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;main.c: 40: TXB0D6 = sendData[6];
  1898  001ED8  0100               	movlb	0	; () banked
  1899  001EDA  C066  FF4C         	movff	_sendData+6,3916	;volatile
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;main.c: 41: TXB0D7 = sendData[7];
  1903  001EDE  0100               	movlb	0	; () banked
  1904  001EE0  C067  FF4D         	movff	_sendData+7,3917	;volatile
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;main.c: 44: TXB0CON = (1<<3);
  1908  001EE4  0E08               	movlw	8
  1909  001EE6  CFE8 FF40          	movff	wreg,3904
  1910                           
  1911                           ; BSR set to: 0
  1912  001EEA  0012               	return	
  1913  001EEC  FFFF               	dw	65535	; errata NOP
  1914  001EEE                     __end_of_CAN_Transmit:
  1915                           	opt stack 0
  1916                           tblptru	equ	0xFF8
  1917                           postinc0	equ	0xFEE
  1918                           wreg	equ	0xFE8
  1919                           status	equ	0xFD8
  1920                           
  1921 ;; *************** function _BMP180_startTemperature *****************
  1922 ;; Defined at:
  1923 ;;		line 223 in file "../../C_Library/SFE_BMP180.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  data            2   11[COMRAM] unsigned char [2]
  1928 ;;  resultBool      1   13[COMRAM] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  2    9[COMRAM] int 
  1931 ;; Registers used:
  1932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1938 ;;      Params:         2       0       0       0       0       0       0
  1939 ;;      Locals:         3       0       0       0       0       0       0
  1940 ;;      Temps:          0       0       0       0       0       0       0
  1941 ;;      Totals:         5       0       0       0       0       0       0
  1942 ;;Total ram usage:        5 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    3
  1945 ;; This function calls:
  1946 ;;		_I2Cdev_writeBytes
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text11
  1953  0021BC                     __ptext11:
  1954                           	opt stack 0
  1955  0021BC                     _BMP180_startTemperature:
  1956                           	opt stack 27
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;incstack = 0
  1960  0021BC  FFFF               	dw	65535
  1961                           
  1962                           ;SFE_BMP180.c: 227: unsigned char data[2];
  1963                           ;SFE_BMP180.c: 229: data[0] = 0xF4;
  1964  0021BE  0EF4               	movlw	244
  1965  0021C0  6E0C               	movwf	BMP180_startTemperature@data,c
  1966                           
  1967                           ;SFE_BMP180.c: 230: data[1] = 0x2E;
  1968  0021C2  0E2E               	movlw	46
  1969  0021C4  6E0D               	movwf	BMP180_startTemperature@data+1,c
  1970                           
  1971                           ;SFE_BMP180.c: 231: bool resultBool = I2Cdev_writeBytes(0x77, (uint8_t)0xF4, 1, (uint8_t
      +                          *)(data + 1));
  1972  0021C6  0EF4               	movlw	244
  1973  0021C8  6E04               	movwf	I2Cdev_writeBytes@regAddr,c
  1974  0021CA  0E01               	movlw	1
  1975  0021CC  6E05               	movwf	I2Cdev_writeBytes@length,c
  1976  0021CE  0E00               	movlw	high (BMP180_startTemperature@data+1)
  1977  0021D0  6E07               	movwf	I2Cdev_writeBytes@data+1,c
  1978  0021D2  0E0D               	movlw	low (BMP180_startTemperature@data+1)
  1979  0021D4  6E06               	movwf	I2Cdev_writeBytes@data,c
  1980  0021D6  0E77               	movlw	119
  1981  0021D8  EC3F  F010         	call	_I2Cdev_writeBytes
  1982  0021DC  6E0E               	movwf	BMP180_startTemperature@resultBool,c
  1983                           
  1984                           ;SFE_BMP180.c: 233: if (resultBool)
  1985  0021DE  500E               	movf	BMP180_startTemperature@resultBool,w,c
  1986  0021E0  B4D8               	btfsc	status,2,c
  1987  0021E2  D004               	goto	l5543
  1988                           
  1989                           ;SFE_BMP180.c: 234: return 5;
  1990  0021E4  0E00               	movlw	0
  1991  0021E6  6E0B               	movwf	?_BMP180_startTemperature+1,c
  1992  0021E8  0E05               	movlw	5
  1993  0021EA  D003               	goto	L3
  1994  0021EC                     l5543:
  1995                           
  1996                           ;SFE_BMP180.c: 235: else
  1997                           ;SFE_BMP180.c: 236: return 0;
  1998  0021EC  0E00               	movlw	0
  1999  0021EE  6E0B               	movwf	?_BMP180_startTemperature+1,c
  2000  0021F0  0E00               	movlw	0
  2001  0021F2                     L3:
  2002  0021F2  6E0A               	movwf	?_BMP180_startTemperature,c
  2003  0021F4  0012               	return	
  2004  0021F6  FFFF               	dw	65535	; errata NOP
  2005  0021F8                     __end_of_BMP180_startTemperature:
  2006                           	opt stack 0
  2007                           tblptru	equ	0xFF8
  2008                           postinc0	equ	0xFEE
  2009                           wreg	equ	0xFE8
  2010                           status	equ	0xFD8
  2011                           
  2012 ;; *************** function _I2Cdev_writeBytes *****************
  2013 ;; Defined at:
  2014 ;;		line 254 in file "../../C_Library/I2Cdev.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  devAddr         1    wreg     unsigned char 
  2017 ;;  regAddr         1    3[COMRAM] unsigned char 
  2018 ;;  length          1    4[COMRAM] unsigned char 
  2019 ;;  data            2    5[COMRAM] PTR unsigned char 
  2020 ;;		 -> BMP180_startPressure@data(2), BMP180_startTemperature@data(2), NULL(0), I2Cdev_writeByte@data(1), 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  devAddr         1    7[COMRAM] unsigned char 
  2023 ;;  i               1    8[COMRAM] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      unsigned char 
  2026 ;; Registers used:
  2027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2033 ;;      Params:         4       0       0       0       0       0       0
  2034 ;;      Locals:         2       0       0       0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0
  2036 ;;      Totals:         6       0       0       0       0       0       0
  2037 ;;Total ram usage:        6 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    2
  2040 ;; This function calls:
  2041 ;;		_IdleI2C
  2042 ;;		_WriteI2C
  2043 ;; This function is called by:
  2044 ;;		_BMP180_startTemperature
  2045 ;;		_I2Cdev_writeByte
  2046 ;;		_MS_5803_resetSensor
  2047 ;;		_MS_5803_ADC
  2048 ;;		_BMP180_startPressure
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text12
  2053  00207E                     __ptext12:
  2054                           	opt stack 0
  2055  00207E                     _I2Cdev_writeBytes:
  2056                           	opt stack 27
  2057                           
  2058                           ;incstack = 0
  2059  00207E  FFFF               	dw	65535
  2060                           
  2061                           ;I2Cdev_writeBytes@devAddr stored from wreg
  2062  002080  6E08               	movwf	I2Cdev_writeBytes@devAddr,c
  2063                           
  2064                           ;I2Cdev.c: 256: IdleI2C();
  2065  002082  ECF2  F011         	call	_IdleI2C	;wreg free
  2066                           
  2067                           ;I2Cdev.c: 257: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2068  002086  80C5               	bsf	4037,0,c	;volatile
  2069  002088                     l194:
  2070  002088  B0C5               	btfsc	4037,0,c	;volatile
  2071  00208A  D7FE               	goto	l194
  2072                           
  2073                           ;I2Cdev.c: 260: IdleI2C();
  2074  00208C  ECF2  F011         	call	_IdleI2C	;wreg free
  2075                           
  2076                           ;I2Cdev.c: 261: WriteI2C(devAddr << 1 | 0x00);
  2077  002090  5008               	movf	I2Cdev_writeBytes@devAddr,w,c
  2078  002092  2408               	addwf	I2Cdev_writeBytes@devAddr,w,c
  2079  002094  ECAB  F00F         	call	_WriteI2C
  2080                           
  2081                           ;I2Cdev.c: 264: IdleI2C();
  2082  002098  ECF2  F011         	call	_IdleI2C	;wreg free
  2083                           
  2084                           ;I2Cdev.c: 265: WriteI2C(regAddr);
  2085  00209C  5004               	movf	I2Cdev_writeBytes@regAddr,w,c
  2086  00209E  ECAB  F00F         	call	_WriteI2C
  2087                           
  2088                           ;I2Cdev.c: 267: for (uint8_t i = 0; i < length; i++) {
  2089  0020A2  0E00               	movlw	0
  2090  0020A4  6E09               	movwf	I2Cdev_writeBytes@i,c
  2091  0020A6  D00E               	goto	l5115
  2092  0020A8                     l5109:
  2093                           
  2094                           ;I2Cdev.c: 269: IdleI2C();
  2095  0020A8  ECF2  F011         	call	_IdleI2C	;wreg free
  2096                           
  2097                           ;I2Cdev.c: 270: WriteI2C(data[i]);
  2098  0020AC  5009               	movf	I2Cdev_writeBytes@i,w,c
  2099  0020AE  0D01               	mullw	1
  2100  0020B0  50F3               	movf	prodl,w,c
  2101  0020B2  2406               	addwf	I2Cdev_writeBytes@data,w,c
  2102  0020B4  6ED9               	movwf	fsr2l,c
  2103  0020B6  50F4               	movf	prodh,w,c
  2104  0020B8  2007               	addwfc	I2Cdev_writeBytes@data+1,w,c
  2105  0020BA  6EDA               	movwf	fsr2h,c
  2106  0020BC  50DF               	movf	indf2,w,c
  2107  0020BE  ECAB  F00F         	call	_WriteI2C
  2108  0020C2  2A09               	incf	I2Cdev_writeBytes@i,f,c
  2109  0020C4                     l5115:
  2110  0020C4  5005               	movf	I2Cdev_writeBytes@length,w,c
  2111  0020C6  5C09               	subwf	I2Cdev_writeBytes@i,w,c
  2112  0020C8  A0D8               	btfss	status,0,c
  2113  0020CA  D7EE               	goto	l5109
  2114                           
  2115                           ;I2Cdev.c: 271: }
  2116                           ;I2Cdev.c: 274: IdleI2C();
  2117  0020CC  ECF2  F011         	call	_IdleI2C	;wreg free
  2118                           
  2119                           ;I2Cdev.c: 275: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2120  0020D0  84C5               	bsf	4037,2,c	;volatile
  2121  0020D2                     l200:
  2122  0020D2  B4C5               	btfsc	4037,2,c	;volatile
  2123  0020D4  D7FE               	goto	l200
  2124                           
  2125                           ;I2Cdev.c: 277: return 1;
  2126  0020D6  0E01               	movlw	1
  2127  0020D8  0012               	return	
  2128  0020DA  FFFF               	dw	65535	; errata NOP
  2129  0020DC                     __end_of_I2Cdev_writeBytes:
  2130                           	opt stack 0
  2131                           tblptru	equ	0xFF8
  2132                           prodh	equ	0xFF4
  2133                           prodl	equ	0xFF3
  2134                           postinc0	equ	0xFEE
  2135                           wreg	equ	0xFE8
  2136                           indf2	equ	0xFDF
  2137                           fsr2h	equ	0xFDA
  2138                           fsr2l	equ	0xFD9
  2139                           status	equ	0xFD8
  2140                           
  2141 ;; *************** function _BMP180_init *****************
  2142 ;; Defined at:
  2143 ;;		line 67 in file "../../C_Library/SFE_BMP180.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  c4              3   28[BANK0 ] unsigned char 
  2148 ;;  b1              3   16[BANK0 ] unsigned char 
  2149 ;;  c3              3   13[BANK0 ] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  2   11[BANK0 ] int 
  2152 ;; Registers used:
  2153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2159 ;;      Params:         0       2       0       0       0       0       0
  2160 ;;      Locals:         0      27       0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0
  2162 ;;      Totals:         0      29       0       0       0       0       0
  2163 ;;Total ram usage:       29 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    5
  2166 ;; This function calls:
  2167 ;;		_BMP180_readInt
  2168 ;;		___awtoft
  2169 ;;		___ftadd
  2170 ;;		___ftdiv
  2171 ;;		___ftmul
  2172 ;;		___ftneg
  2173 ;;		___lwtoft
  2174 ;;		_pow
  2175 ;; This function is called by:
  2176 ;;		_main
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text13
  2181  00063C                     __ptext13:
  2182                           	opt stack 0
  2183  00063C                     _BMP180_init:
  2184                           	opt stack 25
  2185                           
  2186                           ;incstack = 0
  2187  00063C  FFFF               	dw	65535
  2188                           
  2189                           ;SFE_BMP180.c: 70: double c3,c4,b1;
  2190                           ;SFE_BMP180.c: 91: if (BMP180_readInt(0xAA,AC1) &&
  2191                           ;SFE_BMP180.c: 92: BMP180_readInt(0xAC,AC2) &&
  2192                           ;SFE_BMP180.c: 93: BMP180_readInt(0xAE,AC3) &&
  2193                           ;SFE_BMP180.c: 94: BMP180_readInt(0xB0,AC4) &&
  2194                           ;SFE_BMP180.c: 95: BMP180_readInt(0xB2,AC5) &&
  2195                           ;SFE_BMP180.c: 96: BMP180_readInt(0xB4,AC6) &&
  2196                           ;SFE_BMP180.c: 97: BMP180_readInt(0xB6,VB1) &&
  2197                           ;SFE_BMP180.c: 98: BMP180_readInt(0xB8,VB2) &&
  2198                           ;SFE_BMP180.c: 99: BMP180_readInt(0xBA,MB) &&
  2199                           ;SFE_BMP180.c: 100: BMP180_readInt(0xBC,MC) &&
  2200                           ;SFE_BMP180.c: 101: BMP180_readInt(0xBE,MD))
  2201  00063E  C09F  F013         	movff	_AC1,BMP180_readInt@value
  2202  000642  C0A0  F014         	movff	_AC1+1,BMP180_readInt@value+1
  2203  000646  0EAA               	movlw	170
  2204  000648  EC6E  F010         	call	_BMP180_readInt
  2205  00064C  5014               	movf	?_BMP180_readInt+1,w,c
  2206  00064E  1013               	iorwf	?_BMP180_readInt,w,c
  2207  000650  B4D8               	btfsc	status,2,c
  2208  000652  D376               	goto	l5527
  2209  000654  C0A1  F013         	movff	_AC2,BMP180_readInt@value
  2210  000658  C0A2  F014         	movff	_AC2+1,BMP180_readInt@value+1
  2211  00065C  0EAC               	movlw	172
  2212  00065E  EC6E  F010         	call	_BMP180_readInt
  2213  000662  5014               	movf	?_BMP180_readInt+1,w,c
  2214  000664  1013               	iorwf	?_BMP180_readInt,w,c
  2215  000666  B4D8               	btfsc	status,2,c
  2216  000668  D36B               	goto	l5527
  2217  00066A  C0A3  F013         	movff	_AC3,BMP180_readInt@value
  2218  00066E  C0A4  F014         	movff	_AC3+1,BMP180_readInt@value+1
  2219  000672  0EAE               	movlw	174
  2220  000674  EC6E  F010         	call	_BMP180_readInt
  2221  000678  5014               	movf	?_BMP180_readInt+1,w,c
  2222  00067A  1013               	iorwf	?_BMP180_readInt,w,c
  2223  00067C  B4D8               	btfsc	status,2,c
  2224  00067E  D360               	goto	l5527
  2225  000680  C0A5  F013         	movff	_AC4,BMP180_readInt@value
  2226  000684  C0A6  F014         	movff	_AC4+1,BMP180_readInt@value+1
  2227  000688  0EB0               	movlw	176
  2228  00068A  EC6E  F010         	call	_BMP180_readInt
  2229  00068E  5014               	movf	?_BMP180_readInt+1,w,c
  2230  000690  1013               	iorwf	?_BMP180_readInt,w,c
  2231  000692  B4D8               	btfsc	status,2,c
  2232  000694  D355               	goto	l5527
  2233  000696  C0A7  F013         	movff	_AC5,BMP180_readInt@value
  2234  00069A  C0A8  F014         	movff	_AC5+1,BMP180_readInt@value+1
  2235  00069E  0EB2               	movlw	178
  2236  0006A0  EC6E  F010         	call	_BMP180_readInt
  2237  0006A4  5014               	movf	?_BMP180_readInt+1,w,c
  2238  0006A6  1013               	iorwf	?_BMP180_readInt,w,c
  2239  0006A8  B4D8               	btfsc	status,2,c
  2240  0006AA  D34A               	goto	l5527
  2241  0006AC  C0A9  F013         	movff	_AC6,BMP180_readInt@value
  2242  0006B0  C0AA  F014         	movff	_AC6+1,BMP180_readInt@value+1
  2243  0006B4  0EB4               	movlw	180
  2244  0006B6  EC6E  F010         	call	_BMP180_readInt
  2245  0006BA  5014               	movf	?_BMP180_readInt+1,w,c
  2246  0006BC  1013               	iorwf	?_BMP180_readInt,w,c
  2247  0006BE  B4D8               	btfsc	status,2,c
  2248  0006C0  D33F               	goto	l5527
  2249  0006C2  C0B3  F013         	movff	_VB1,BMP180_readInt@value
  2250  0006C6  C0B4  F014         	movff	_VB1+1,BMP180_readInt@value+1
  2251  0006CA  0EB6               	movlw	182
  2252  0006CC  EC6E  F010         	call	_BMP180_readInt
  2253  0006D0  5014               	movf	?_BMP180_readInt+1,w,c
  2254  0006D2  1013               	iorwf	?_BMP180_readInt,w,c
  2255  0006D4  B4D8               	btfsc	status,2,c
  2256  0006D6  D334               	goto	l5527
  2257  0006D8  C0B5  F013         	movff	_VB2,BMP180_readInt@value
  2258  0006DC  C0B6  F014         	movff	_VB2+1,BMP180_readInt@value+1
  2259  0006E0  0EB8               	movlw	184
  2260  0006E2  EC6E  F010         	call	_BMP180_readInt
  2261  0006E6  5014               	movf	?_BMP180_readInt+1,w,c
  2262  0006E8  1013               	iorwf	?_BMP180_readInt,w,c
  2263  0006EA  B4D8               	btfsc	status,2,c
  2264  0006EC  D329               	goto	l5527
  2265  0006EE  C0AB  F013         	movff	_MB,BMP180_readInt@value
  2266  0006F2  C0AC  F014         	movff	_MB+1,BMP180_readInt@value+1
  2267  0006F6  0EBA               	movlw	186
  2268  0006F8  EC6E  F010         	call	_BMP180_readInt
  2269  0006FC  5014               	movf	?_BMP180_readInt+1,w,c
  2270  0006FE  1013               	iorwf	?_BMP180_readInt,w,c
  2271  000700  B4D8               	btfsc	status,2,c
  2272  000702  D31E               	goto	l5527
  2273  000704  C0AD  F013         	movff	_MC,BMP180_readInt@value
  2274  000708  C0AE  F014         	movff	_MC+1,BMP180_readInt@value+1
  2275  00070C  0EBC               	movlw	188
  2276  00070E  EC6E  F010         	call	_BMP180_readInt
  2277  000712  5014               	movf	?_BMP180_readInt+1,w,c
  2278  000714  1013               	iorwf	?_BMP180_readInt,w,c
  2279  000716  B4D8               	btfsc	status,2,c
  2280  000718  D313               	goto	l5527
  2281  00071A  C0AF  F013         	movff	_MD,BMP180_readInt@value
  2282  00071E  C0B0  F014         	movff	_MD+1,BMP180_readInt@value+1
  2283  000722  0EBE               	movlw	190
  2284  000724  EC6E  F010         	call	_BMP180_readInt
  2285  000728  5014               	movf	?_BMP180_readInt+1,w,c
  2286  00072A  1013               	iorwf	?_BMP180_readInt,w,c
  2287  00072C  B4D8               	btfsc	status,2,c
  2288  00072E  D308               	goto	l5527
  2289                           
  2290                           ;SFE_BMP180.c: 102: {
  2291                           ;SFE_BMP180.c: 134: c3 = 160.0 * pow(2,-15) * AC3;
  2292  000730  0E00               	movlw	0
  2293  000732  6E5D               	movwf	pow@y,c
  2294  000734  0E70               	movlw	112
  2295  000736  6E5E               	movwf	pow@y+1,c
  2296  000738  0EC1               	movlw	193
  2297  00073A  6E5F               	movwf	pow@y+2,c
  2298  00073C  0E00               	movlw	0
  2299  00073E  6E5A               	movwf	pow@x,c
  2300  000740  0E00               	movlw	0
  2301  000742  6E5B               	movwf	pow@x+1,c
  2302  000744  0E40               	movlw	64
  2303  000746  6E5C               	movwf	pow@x+2,c
  2304  000748  EC84  F008         	call	_pow	;wreg free
  2305  00074C  C05A  F0F8         	movff	?_pow,_BMP180_init$3527
  2306  000750  C05B  F0F9         	movff	?_pow+1,_BMP180_init$3527+1
  2307  000754  C05C  F0FA         	movff	?_pow+2,_BMP180_init$3527+2
  2308                           
  2309                           ;SFE_BMP180.c: 102: {
  2310                           ;SFE_BMP180.c: 134: c3 = 160.0 * pow(2,-15) * AC3;
  2311  000758  C0A3  F009         	movff	_AC3,___awtoft@c
  2312  00075C  C0A4  F00A         	movff	_AC3+1,___awtoft@c+1
  2313  000760  EC97  F010         	call	___awtoft	;wreg free
  2314  000764  C009  F01F         	movff	?___awtoft,___ftmul@f2
  2315  000768  C00A  F020         	movff	?___awtoft+1,___ftmul@f2+1
  2316  00076C  C00B  F021         	movff	?___awtoft+2,___ftmul@f2+2
  2317  000770  C0F8  F01C         	movff	_BMP180_init$3527,___ftmul@f1
  2318  000774  C0F9  F01D         	movff	_BMP180_init$3527+1,___ftmul@f1+1
  2319  000778  C0FA  F01E         	movff	_BMP180_init$3527+2,___ftmul@f1+2
  2320  00077C  ECEE  F00B         	call	___ftmul	;wreg free
  2321  000780  C01C  F0E9         	movff	?___ftmul,_BMP180_init$3528
  2322  000784  C01D  F0EA         	movff	?___ftmul+1,_BMP180_init$3528+1
  2323  000788  C01E  F0EB         	movff	?___ftmul+2,_BMP180_init$3528+2
  2324                           
  2325                           ;SFE_BMP180.c: 102: {
  2326                           ;SFE_BMP180.c: 134: c3 = 160.0 * pow(2,-15) * AC3;
  2327  00078C  C0E9  F01C         	movff	_BMP180_init$3528,___ftmul@f1
  2328  000790  C0EA  F01D         	movff	_BMP180_init$3528+1,___ftmul@f1+1
  2329  000794  C0EB  F01E         	movff	_BMP180_init$3528+2,___ftmul@f1+2
  2330  000798  0E00               	movlw	0
  2331  00079A  6E1F               	movwf	___ftmul@f2,c
  2332  00079C  0E20               	movlw	32
  2333  00079E  6E20               	movwf	___ftmul@f2+1,c
  2334  0007A0  0E43               	movlw	67
  2335  0007A2  6E21               	movwf	___ftmul@f2+2,c
  2336  0007A4  ECEE  F00B         	call	___ftmul	;wreg free
  2337  0007A8  C01C  F0E0         	movff	?___ftmul,BMP180_init@c3
  2338  0007AC  C01D  F0E1         	movff	?___ftmul+1,BMP180_init@c3+1
  2339  0007B0  C01E  F0E2         	movff	?___ftmul+2,BMP180_init@c3+2
  2340                           
  2341                           ;SFE_BMP180.c: 135: c4 = pow(10,-3) * pow(2,-15) * AC4;
  2342  0007B4  0E00               	movlw	0
  2343  0007B6  6E5D               	movwf	pow@y,c
  2344  0007B8  0E70               	movlw	112
  2345  0007BA  6E5E               	movwf	pow@y+1,c
  2346  0007BC  0EC1               	movlw	193
  2347  0007BE  6E5F               	movwf	pow@y+2,c
  2348  0007C0  0E00               	movlw	0
  2349  0007C2  6E5A               	movwf	pow@x,c
  2350  0007C4  0E00               	movlw	0
  2351  0007C6  6E5B               	movwf	pow@x+1,c
  2352  0007C8  0E40               	movlw	64
  2353  0007CA  6E5C               	movwf	pow@x+2,c
  2354  0007CC  EC84  F008         	call	_pow	;wreg free
  2355  0007D0  C05A  F0F8         	movff	?_pow,_BMP180_init$3527
  2356  0007D4  C05B  F0F9         	movff	?_pow+1,_BMP180_init$3527+1
  2357  0007D8  C05C  F0FA         	movff	?_pow+2,_BMP180_init$3527+2
  2358                           
  2359                           ;SFE_BMP180.c: 135: c4 = pow(10,-3) * pow(2,-15) * AC4;
  2360  0007DC  0E00               	movlw	0
  2361  0007DE  6E5D               	movwf	pow@y,c
  2362  0007E0  0E40               	movlw	64
  2363  0007E2  6E5E               	movwf	pow@y+1,c
  2364  0007E4  0EC0               	movlw	192
  2365  0007E6  6E5F               	movwf	pow@y+2,c
  2366  0007E8  0E00               	movlw	0
  2367  0007EA  6E5A               	movwf	pow@x,c
  2368  0007EC  0E20               	movlw	32
  2369  0007EE  6E5B               	movwf	pow@x+1,c
  2370  0007F0  0E41               	movlw	65
  2371  0007F2  6E5C               	movwf	pow@x+2,c
  2372  0007F4  EC84  F008         	call	_pow	;wreg free
  2373  0007F8  C05A  F0F2         	movff	?_pow,_BMP180_init$3529
  2374  0007FC  C05B  F0F3         	movff	?_pow+1,_BMP180_init$3529+1
  2375  000800  C05C  F0F4         	movff	?_pow+2,_BMP180_init$3529+2
  2376                           
  2377                           ;SFE_BMP180.c: 135: c4 = pow(10,-3) * pow(2,-15) * AC4;
  2378  000804  C0F8  F01F         	movff	_BMP180_init$3527,___ftmul@f2
  2379  000808  C0F9  F020         	movff	_BMP180_init$3527+1,___ftmul@f2+1
  2380  00080C  C0FA  F021         	movff	_BMP180_init$3527+2,___ftmul@f2+2
  2381  000810  C0F2  F01C         	movff	_BMP180_init$3529,___ftmul@f1
  2382  000814  C0F3  F01D         	movff	_BMP180_init$3529+1,___ftmul@f1+1
  2383  000818  C0F4  F01E         	movff	_BMP180_init$3529+2,___ftmul@f1+2
  2384  00081C  ECEE  F00B         	call	___ftmul	;wreg free
  2385  000820  C01C  F0F5         	movff	?___ftmul,_BMP180_init$3530
  2386  000824  C01D  F0F6         	movff	?___ftmul+1,_BMP180_init$3530+1
  2387  000828  C01E  F0F7         	movff	?___ftmul+2,_BMP180_init$3530+2
  2388                           
  2389                           ;SFE_BMP180.c: 135: c4 = pow(10,-3) * pow(2,-15) * AC4;
  2390  00082C  C0F5  F01C         	movff	_BMP180_init$3530,___ftmul@f1
  2391  000830  C0F6  F01D         	movff	_BMP180_init$3530+1,___ftmul@f1+1
  2392  000834  C0F7  F01E         	movff	_BMP180_init$3530+2,___ftmul@f1+2
  2393  000838  C0A5  F009         	movff	_AC4,___lwtoft@c
  2394  00083C  C0A6  F00A         	movff	_AC4+1,___lwtoft@c+1
  2395  000840  EC84  F011         	call	___lwtoft	;wreg free
  2396  000844  C009  F01F         	movff	?___lwtoft,___ftmul@f2
  2397  000848  C00A  F020         	movff	?___lwtoft+1,___ftmul@f2+1
  2398  00084C  C00B  F021         	movff	?___lwtoft+2,___ftmul@f2+2
  2399  000850  ECEE  F00B         	call	___ftmul	;wreg free
  2400  000854  C01C  F0EF         	movff	?___ftmul,BMP180_init@c4
  2401  000858  C01D  F0F0         	movff	?___ftmul+1,BMP180_init@c4+1
  2402  00085C  C01E  F0F1         	movff	?___ftmul+2,BMP180_init@c4+2
  2403                           
  2404                           ;SFE_BMP180.c: 136: b1 = pow(160,2) * pow(2,-30) * VB1;
  2405  000860  0E00               	movlw	0
  2406  000862  6E5D               	movwf	pow@y,c
  2407  000864  0EF0               	movlw	240
  2408  000866  6E5E               	movwf	pow@y+1,c
  2409  000868  0EC1               	movlw	193
  2410  00086A  6E5F               	movwf	pow@y+2,c
  2411  00086C  0E00               	movlw	0
  2412  00086E  6E5A               	movwf	pow@x,c
  2413  000870  0E00               	movlw	0
  2414  000872  6E5B               	movwf	pow@x+1,c
  2415  000874  0E40               	movlw	64
  2416  000876  6E5C               	movwf	pow@x+2,c
  2417  000878  EC84  F008         	call	_pow	;wreg free
  2418  00087C  C05A  F0F8         	movff	?_pow,_BMP180_init$3527
  2419  000880  C05B  F0F9         	movff	?_pow+1,_BMP180_init$3527+1
  2420  000884  C05C  F0FA         	movff	?_pow+2,_BMP180_init$3527+2
  2421                           
  2422                           ;SFE_BMP180.c: 136: b1 = pow(160,2) * pow(2,-30) * VB1;
  2423  000888  0E00               	movlw	0
  2424  00088A  6E5D               	movwf	pow@y,c
  2425  00088C  0E00               	movlw	0
  2426  00088E  6E5E               	movwf	pow@y+1,c
  2427  000890  0E40               	movlw	64
  2428  000892  6E5F               	movwf	pow@y+2,c
  2429  000894  0E00               	movlw	0
  2430  000896  6E5A               	movwf	pow@x,c
  2431  000898  0E20               	movlw	32
  2432  00089A  6E5B               	movwf	pow@x+1,c
  2433  00089C  0E43               	movlw	67
  2434  00089E  6E5C               	movwf	pow@x+2,c
  2435  0008A0  EC84  F008         	call	_pow	;wreg free
  2436  0008A4  C05A  F0F2         	movff	?_pow,_BMP180_init$3529
  2437  0008A8  C05B  F0F3         	movff	?_pow+1,_BMP180_init$3529+1
  2438  0008AC  C05C  F0F4         	movff	?_pow+2,_BMP180_init$3529+2
  2439                           
  2440                           ;SFE_BMP180.c: 136: b1 = pow(160,2) * pow(2,-30) * VB1;
  2441  0008B0  C0F8  F01F         	movff	_BMP180_init$3527,___ftmul@f2
  2442  0008B4  C0F9  F020         	movff	_BMP180_init$3527+1,___ftmul@f2+1
  2443  0008B8  C0FA  F021         	movff	_BMP180_init$3527+2,___ftmul@f2+2
  2444  0008BC  C0F2  F01C         	movff	_BMP180_init$3529,___ftmul@f1
  2445  0008C0  C0F3  F01D         	movff	_BMP180_init$3529+1,___ftmul@f1+1
  2446  0008C4  C0F4  F01E         	movff	_BMP180_init$3529+2,___ftmul@f1+2
  2447  0008C8  ECEE  F00B         	call	___ftmul	;wreg free
  2448  0008CC  C01C  F0F5         	movff	?___ftmul,_BMP180_init$3530
  2449  0008D0  C01D  F0F6         	movff	?___ftmul+1,_BMP180_init$3530+1
  2450  0008D4  C01E  F0F7         	movff	?___ftmul+2,_BMP180_init$3530+2
  2451                           
  2452                           ;SFE_BMP180.c: 136: b1 = pow(160,2) * pow(2,-30) * VB1;
  2453  0008D8  C0F5  F01C         	movff	_BMP180_init$3530,___ftmul@f1
  2454  0008DC  C0F6  F01D         	movff	_BMP180_init$3530+1,___ftmul@f1+1
  2455  0008E0  C0F7  F01E         	movff	_BMP180_init$3530+2,___ftmul@f1+2
  2456  0008E4  C0B3  F009         	movff	_VB1,___awtoft@c
  2457  0008E8  C0B4  F00A         	movff	_VB1+1,___awtoft@c+1
  2458  0008EC  EC97  F010         	call	___awtoft	;wreg free
  2459  0008F0  C009  F01F         	movff	?___awtoft,___ftmul@f2
  2460  0008F4  C00A  F020         	movff	?___awtoft+1,___ftmul@f2+1
  2461  0008F8  C00B  F021         	movff	?___awtoft+2,___ftmul@f2+2
  2462  0008FC  ECEE  F00B         	call	___ftmul	;wreg free
  2463  000900  C01C  F0E3         	movff	?___ftmul,BMP180_init@b1
  2464  000904  C01D  F0E4         	movff	?___ftmul+1,BMP180_init@b1+1
  2465  000908  C01E  F0E5         	movff	?___ftmul+2,BMP180_init@b1+2
  2466                           
  2467                           ;SFE_BMP180.c: 137: c5 = (pow(2,-15) / 160) * AC5;
  2468  00090C  0E00               	movlw	0
  2469  00090E  6E5D               	movwf	pow@y,c
  2470  000910  0E70               	movlw	112
  2471  000912  6E5E               	movwf	pow@y+1,c
  2472  000914  0EC1               	movlw	193
  2473  000916  6E5F               	movwf	pow@y+2,c
  2474  000918  0E00               	movlw	0
  2475  00091A  6E5A               	movwf	pow@x,c
  2476  00091C  0E00               	movlw	0
  2477  00091E  6E5B               	movwf	pow@x+1,c
  2478  000920  0E40               	movlw	64
  2479  000922  6E5C               	movwf	pow@x+2,c
  2480  000924  EC84  F008         	call	_pow	;wreg free
  2481  000928  C05A  F0EC         	movff	?_pow,_BMP180_init$3531
  2482  00092C  C05B  F0ED         	movff	?_pow+1,_BMP180_init$3531+1
  2483  000930  C05C  F0EE         	movff	?_pow+2,_BMP180_init$3531+2
  2484                           
  2485                           ;SFE_BMP180.c: 137: c5 = (pow(2,-15) / 160) * AC5;
  2486  000934  0E00               	movlw	0
  2487  000936  6E10               	movwf	___ftdiv@f2,c
  2488  000938  0E20               	movlw	32
  2489  00093A  6E11               	movwf	___ftdiv@f2+1,c
  2490  00093C  0E43               	movlw	67
  2491  00093E  6E12               	movwf	___ftdiv@f2+2,c
  2492  000940  C0EC  F00D         	movff	_BMP180_init$3531,___ftdiv@f1
  2493  000944  C0ED  F00E         	movff	_BMP180_init$3531+1,___ftdiv@f1+1
  2494  000948  C0EE  F00F         	movff	_BMP180_init$3531+2,___ftdiv@f1+2
  2495  00094C  ECD3  F00C         	call	___ftdiv	;wreg free
  2496  000950  C00D  F01C         	movff	?___ftdiv,___ftmul@f1
  2497  000954  C00E  F01D         	movff	?___ftdiv+1,___ftmul@f1+1
  2498  000958  C00F  F01E         	movff	?___ftdiv+2,___ftmul@f1+2
  2499  00095C  C0A7  F009         	movff	_AC5,___lwtoft@c
  2500  000960  C0A8  F00A         	movff	_AC5+1,___lwtoft@c+1
  2501  000964  EC84  F011         	call	___lwtoft	;wreg free
  2502  000968  C009  F01F         	movff	?___lwtoft,___ftmul@f2
  2503  00096C  C00A  F020         	movff	?___lwtoft+1,___ftmul@f2+1
  2504  000970  C00B  F021         	movff	?___lwtoft+2,___ftmul@f2+2
  2505  000974  ECEE  F00B         	call	___ftmul	;wreg free
  2506  000978  C01C  F078         	movff	?___ftmul,_c5
  2507  00097C  C01D  F079         	movff	?___ftmul+1,_c5+1
  2508  000980  C01E  F07A         	movff	?___ftmul+2,_c5+2
  2509                           
  2510                           ;SFE_BMP180.c: 138: c6 = AC6;
  2511  000984  C0A9  F009         	movff	_AC6,___lwtoft@c
  2512  000988  C0AA  F00A         	movff	_AC6+1,___lwtoft@c+1
  2513  00098C  EC84  F011         	call	___lwtoft	;wreg free
  2514  000990  C009  F07B         	movff	?___lwtoft,_c6
  2515  000994  C00A  F07C         	movff	?___lwtoft+1,_c6+1
  2516  000998  C00B  F07D         	movff	?___lwtoft+2,_c6+2
  2517                           
  2518                           ;SFE_BMP180.c: 139: mc = (pow(2,11) / pow(160,2)) * MC;
  2519  00099C  0E00               	movlw	0
  2520  00099E  6E5D               	movwf	pow@y,c
  2521  0009A0  0E00               	movlw	0
  2522  0009A2  6E5E               	movwf	pow@y+1,c
  2523  0009A4  0E40               	movlw	64
  2524  0009A6  6E5F               	movwf	pow@y+2,c
  2525  0009A8  0E00               	movlw	0
  2526  0009AA  6E5A               	movwf	pow@x,c
  2527  0009AC  0E20               	movlw	32
  2528  0009AE  6E5B               	movwf	pow@x+1,c
  2529  0009B0  0E43               	movlw	67
  2530  0009B2  6E5C               	movwf	pow@x+2,c
  2531  0009B4  EC84  F008         	call	_pow	;wreg free
  2532  0009B8  C05A  F0EC         	movff	?_pow,_BMP180_init$3531
  2533  0009BC  C05B  F0ED         	movff	?_pow+1,_BMP180_init$3531+1
  2534  0009C0  C05C  F0EE         	movff	?_pow+2,_BMP180_init$3531+2
  2535                           
  2536                           ;SFE_BMP180.c: 139: mc = (pow(2,11) / pow(160,2)) * MC;
  2537  0009C4  0E00               	movlw	0
  2538  0009C6  6E5D               	movwf	pow@y,c
  2539  0009C8  0E30               	movlw	48
  2540  0009CA  6E5E               	movwf	pow@y+1,c
  2541  0009CC  0E41               	movlw	65
  2542  0009CE  6E5F               	movwf	pow@y+2,c
  2543  0009D0  0E00               	movlw	0
  2544  0009D2  6E5A               	movwf	pow@x,c
  2545  0009D4  0E00               	movlw	0
  2546  0009D6  6E5B               	movwf	pow@x+1,c
  2547  0009D8  0E40               	movlw	64
  2548  0009DA  6E5C               	movwf	pow@x+2,c
  2549  0009DC  EC84  F008         	call	_pow	;wreg free
  2550  0009E0  C05A  F0E6         	movff	?_pow,_BMP180_init$3532
  2551  0009E4  C05B  F0E7         	movff	?_pow+1,_BMP180_init$3532+1
  2552  0009E8  C05C  F0E8         	movff	?_pow+2,_BMP180_init$3532+2
  2553                           
  2554                           ;SFE_BMP180.c: 139: mc = (pow(2,11) / pow(160,2)) * MC;
  2555  0009EC  C0EC  F010         	movff	_BMP180_init$3531,___ftdiv@f2
  2556  0009F0  C0ED  F011         	movff	_BMP180_init$3531+1,___ftdiv@f2+1
  2557  0009F4  C0EE  F012         	movff	_BMP180_init$3531+2,___ftdiv@f2+2
  2558  0009F8  C0E6  F00D         	movff	_BMP180_init$3532,___ftdiv@f1
  2559  0009FC  C0E7  F00E         	movff	_BMP180_init$3532+1,___ftdiv@f1+1
  2560  000A00  C0E8  F00F         	movff	_BMP180_init$3532+2,___ftdiv@f1+2
  2561  000A04  ECD3  F00C         	call	___ftdiv	;wreg free
  2562  000A08  C00D  F01C         	movff	?___ftdiv,___ftmul@f1
  2563  000A0C  C00E  F01D         	movff	?___ftdiv+1,___ftmul@f1+1
  2564  000A10  C00F  F01E         	movff	?___ftdiv+2,___ftmul@f1+2
  2565  000A14  C0AD  F009         	movff	_MC,___awtoft@c
  2566  000A18  C0AE  F00A         	movff	_MC+1,___awtoft@c+1
  2567  000A1C  EC97  F010         	call	___awtoft	;wreg free
  2568  000A20  C009  F01F         	movff	?___awtoft,___ftmul@f2
  2569  000A24  C00A  F020         	movff	?___awtoft+1,___ftmul@f2+1
  2570  000A28  C00B  F021         	movff	?___awtoft+2,___ftmul@f2+2
  2571  000A2C  ECEE  F00B         	call	___ftmul	;wreg free
  2572  000A30  C01C  F07E         	movff	?___ftmul,_mc
  2573  000A34  C01D  F07F         	movff	?___ftmul+1,_mc+1
  2574  000A38  C01E  F080         	movff	?___ftmul+2,_mc+2
  2575                           
  2576                           ;SFE_BMP180.c: 140: md = MD / 160.0;
  2577  000A3C  C0AF  F009         	movff	_MD,___awtoft@c
  2578  000A40  C0B0  F00A         	movff	_MD+1,___awtoft@c+1
  2579  000A44  EC97  F010         	call	___awtoft	;wreg free
  2580  000A48  C009  F00D         	movff	?___awtoft,___ftdiv@f1
  2581  000A4C  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
  2582  000A50  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
  2583  000A54  0E00               	movlw	0
  2584  000A56  6E10               	movwf	___ftdiv@f2,c
  2585  000A58  0E20               	movlw	32
  2586  000A5A  6E11               	movwf	___ftdiv@f2+1,c
  2587  000A5C  0E43               	movlw	67
  2588  000A5E  6E12               	movwf	___ftdiv@f2+2,c
  2589  000A60  ECD3  F00C         	call	___ftdiv	;wreg free
  2590  000A64  C00D  F081         	movff	?___ftdiv,_md
  2591  000A68  C00E  F082         	movff	?___ftdiv+1,_md+1
  2592  000A6C  C00F  F083         	movff	?___ftdiv+2,_md+2
  2593                           
  2594                           ;SFE_BMP180.c: 141: x0 = AC1;
  2595  000A70  C09F  F009         	movff	_AC1,___awtoft@c
  2596  000A74  C0A0  F00A         	movff	_AC1+1,___awtoft@c+1
  2597  000A78  EC97  F010         	call	___awtoft	;wreg free
  2598  000A7C  C009  F08D         	movff	?___awtoft,_x0
  2599  000A80  C00A  F08E         	movff	?___awtoft+1,_x0+1
  2600  000A84  C00B  F08F         	movff	?___awtoft+2,_x0+2
  2601                           
  2602                           ;SFE_BMP180.c: 142: x1 = 160.0 * pow(2,-13) * AC2;
  2603  000A88  0E00               	movlw	0
  2604  000A8A  6E5D               	movwf	pow@y,c
  2605  000A8C  0E50               	movlw	80
  2606  000A8E  6E5E               	movwf	pow@y+1,c
  2607  000A90  0EC1               	movlw	193
  2608  000A92  6E5F               	movwf	pow@y+2,c
  2609  000A94  0E00               	movlw	0
  2610  000A96  6E5A               	movwf	pow@x,c
  2611  000A98  0E00               	movlw	0
  2612  000A9A  6E5B               	movwf	pow@x+1,c
  2613  000A9C  0E40               	movlw	64
  2614  000A9E  6E5C               	movwf	pow@x+2,c
  2615  000AA0  EC84  F008         	call	_pow	;wreg free
  2616  000AA4  C05A  F0F8         	movff	?_pow,_BMP180_init$3527
  2617  000AA8  C05B  F0F9         	movff	?_pow+1,_BMP180_init$3527+1
  2618  000AAC  C05C  F0FA         	movff	?_pow+2,_BMP180_init$3527+2
  2619                           
  2620                           ;SFE_BMP180.c: 142: x1 = 160.0 * pow(2,-13) * AC2;
  2621  000AB0  C0A1  F009         	movff	_AC2,___awtoft@c
  2622  000AB4  C0A2  F00A         	movff	_AC2+1,___awtoft@c+1
  2623  000AB8  EC97  F010         	call	___awtoft	;wreg free
  2624  000ABC  C009  F01F         	movff	?___awtoft,___ftmul@f2
  2625  000AC0  C00A  F020         	movff	?___awtoft+1,___ftmul@f2+1
  2626  000AC4  C00B  F021         	movff	?___awtoft+2,___ftmul@f2+2
  2627  000AC8  C0F8  F01C         	movff	_BMP180_init$3527,___ftmul@f1
  2628  000ACC  C0F9  F01D         	movff	_BMP180_init$3527+1,___ftmul@f1+1
  2629  000AD0  C0FA  F01E         	movff	_BMP180_init$3527+2,___ftmul@f1+2
  2630  000AD4  ECEE  F00B         	call	___ftmul	;wreg free
  2631  000AD8  C01C  F0E9         	movff	?___ftmul,_BMP180_init$3528
  2632  000ADC  C01D  F0EA         	movff	?___ftmul+1,_BMP180_init$3528+1
  2633  000AE0  C01E  F0EB         	movff	?___ftmul+2,_BMP180_init$3528+2
  2634                           
  2635                           ;SFE_BMP180.c: 142: x1 = 160.0 * pow(2,-13) * AC2;
  2636  000AE4  C0E9  F01C         	movff	_BMP180_init$3528,___ftmul@f1
  2637  000AE8  C0EA  F01D         	movff	_BMP180_init$3528+1,___ftmul@f1+1
  2638  000AEC  C0EB  F01E         	movff	_BMP180_init$3528+2,___ftmul@f1+2
  2639  000AF0  0E00               	movlw	0
  2640  000AF2  6E1F               	movwf	___ftmul@f2,c
  2641  000AF4  0E20               	movlw	32
  2642  000AF6  6E20               	movwf	___ftmul@f2+1,c
  2643  000AF8  0E43               	movlw	67
  2644  000AFA  6E21               	movwf	___ftmul@f2+2,c
  2645  000AFC  ECEE  F00B         	call	___ftmul	;wreg free
  2646  000B00  C01C  F090         	movff	?___ftmul,_x1
  2647  000B04  C01D  F091         	movff	?___ftmul+1,_x1+1
  2648  000B08  C01E  F092         	movff	?___ftmul+2,_x1+2
  2649                           
  2650                           ;SFE_BMP180.c: 143: x2 = pow(160,2) * pow(2,-25) * VB2;
  2651  000B0C  0E00               	movlw	0
  2652  000B0E  6E5D               	movwf	pow@y,c
  2653  000B10  0EC8               	movlw	200
  2654  000B12  6E5E               	movwf	pow@y+1,c
  2655  000B14  0EC1               	movlw	193
  2656  000B16  6E5F               	movwf	pow@y+2,c
  2657  000B18  0E00               	movlw	0
  2658  000B1A  6E5A               	movwf	pow@x,c
  2659  000B1C  0E00               	movlw	0
  2660  000B1E  6E5B               	movwf	pow@x+1,c
  2661  000B20  0E40               	movlw	64
  2662  000B22  6E5C               	movwf	pow@x+2,c
  2663  000B24  EC84  F008         	call	_pow	;wreg free
  2664  000B28  C05A  F0F8         	movff	?_pow,_BMP180_init$3527
  2665  000B2C  C05B  F0F9         	movff	?_pow+1,_BMP180_init$3527+1
  2666  000B30  C05C  F0FA         	movff	?_pow+2,_BMP180_init$3527+2
  2667                           
  2668                           ;SFE_BMP180.c: 143: x2 = pow(160,2) * pow(2,-25) * VB2;
  2669  000B34  0E00               	movlw	0
  2670  000B36  6E5D               	movwf	pow@y,c
  2671  000B38  0E00               	movlw	0
  2672  000B3A  6E5E               	movwf	pow@y+1,c
  2673  000B3C  0E40               	movlw	64
  2674  000B3E  6E5F               	movwf	pow@y+2,c
  2675  000B40  0E00               	movlw	0
  2676  000B42  6E5A               	movwf	pow@x,c
  2677  000B44  0E20               	movlw	32
  2678  000B46  6E5B               	movwf	pow@x+1,c
  2679  000B48  0E43               	movlw	67
  2680  000B4A  6E5C               	movwf	pow@x+2,c
  2681  000B4C  EC84  F008         	call	_pow	;wreg free
  2682  000B50  C05A  F0F2         	movff	?_pow,_BMP180_init$3529
  2683  000B54  C05B  F0F3         	movff	?_pow+1,_BMP180_init$3529+1
  2684  000B58  C05C  F0F4         	movff	?_pow+2,_BMP180_init$3529+2
  2685                           
  2686                           ;SFE_BMP180.c: 143: x2 = pow(160,2) * pow(2,-25) * VB2;
  2687  000B5C  C0F8  F01F         	movff	_BMP180_init$3527,___ftmul@f2
  2688  000B60  C0F9  F020         	movff	_BMP180_init$3527+1,___ftmul@f2+1
  2689  000B64  C0FA  F021         	movff	_BMP180_init$3527+2,___ftmul@f2+2
  2690  000B68  C0F2  F01C         	movff	_BMP180_init$3529,___ftmul@f1
  2691  000B6C  C0F3  F01D         	movff	_BMP180_init$3529+1,___ftmul@f1+1
  2692  000B70  C0F4  F01E         	movff	_BMP180_init$3529+2,___ftmul@f1+2
  2693  000B74  ECEE  F00B         	call	___ftmul	;wreg free
  2694  000B78  C01C  F0F5         	movff	?___ftmul,_BMP180_init$3530
  2695  000B7C  C01D  F0F6         	movff	?___ftmul+1,_BMP180_init$3530+1
  2696  000B80  C01E  F0F7         	movff	?___ftmul+2,_BMP180_init$3530+2
  2697                           
  2698                           ;SFE_BMP180.c: 143: x2 = pow(160,2) * pow(2,-25) * VB2;
  2699  000B84  C0F5  F01C         	movff	_BMP180_init$3530,___ftmul@f1
  2700  000B88  C0F6  F01D         	movff	_BMP180_init$3530+1,___ftmul@f1+1
  2701  000B8C  C0F7  F01E         	movff	_BMP180_init$3530+2,___ftmul@f1+2
  2702  000B90  C0B5  F009         	movff	_VB2,___awtoft@c
  2703  000B94  C0B6  F00A         	movff	_VB2+1,___awtoft@c+1
  2704  000B98  EC97  F010         	call	___awtoft	;wreg free
  2705  000B9C  C009  F01F         	movff	?___awtoft,___ftmul@f2
  2706  000BA0  C00A  F020         	movff	?___awtoft+1,___ftmul@f2+1
  2707  000BA4  C00B  F021         	movff	?___awtoft+2,___ftmul@f2+2
  2708  000BA8  ECEE  F00B         	call	___ftmul	;wreg free
  2709  000BAC  C01C  F093         	movff	?___ftmul,_x2
  2710  000BB0  C01D  F094         	movff	?___ftmul+1,_x2+1
  2711  000BB4  C01E  F095         	movff	?___ftmul+2,_x2+2
  2712                           
  2713                           ;SFE_BMP180.c: 144: y0 = c4 * pow(2,15);
  2714  000BB8  0E00               	movlw	0
  2715  000BBA  6E5D               	movwf	pow@y,c
  2716  000BBC  0E70               	movlw	112
  2717  000BBE  6E5E               	movwf	pow@y+1,c
  2718  000BC0  0E41               	movlw	65
  2719  000BC2  6E5F               	movwf	pow@y+2,c
  2720  000BC4  0E00               	movlw	0
  2721  000BC6  6E5A               	movwf	pow@x,c
  2722  000BC8  0E00               	movlw	0
  2723  000BCA  6E5B               	movwf	pow@x+1,c
  2724  000BCC  0E40               	movlw	64
  2725  000BCE  6E5C               	movwf	pow@x+2,c
  2726  000BD0  EC84  F008         	call	_pow	;wreg free
  2727  000BD4  C05A  F0F8         	movff	?_pow,_BMP180_init$3527
  2728  000BD8  C05B  F0F9         	movff	?_pow+1,_BMP180_init$3527+1
  2729  000BDC  C05C  F0FA         	movff	?_pow+2,_BMP180_init$3527+2
  2730                           
  2731                           ;SFE_BMP180.c: 144: y0 = c4 * pow(2,15);
  2732  000BE0  C0F8  F01C         	movff	_BMP180_init$3527,___ftmul@f1
  2733  000BE4  C0F9  F01D         	movff	_BMP180_init$3527+1,___ftmul@f1+1
  2734  000BE8  C0FA  F01E         	movff	_BMP180_init$3527+2,___ftmul@f1+2
  2735  000BEC  C0EF  F01F         	movff	BMP180_init@c4,___ftmul@f2
  2736  000BF0  C0F0  F020         	movff	BMP180_init@c4+1,___ftmul@f2+1
  2737  000BF4  C0F1  F021         	movff	BMP180_init@c4+2,___ftmul@f2+2
  2738  000BF8  ECEE  F00B         	call	___ftmul	;wreg free
  2739  000BFC  C01C  F096         	movff	?___ftmul,_y0
  2740  000C00  C01D  F097         	movff	?___ftmul+1,_y0+1
  2741  000C04  C01E  F098         	movff	?___ftmul+2,_y0+2
  2742                           
  2743                           ;SFE_BMP180.c: 145: y1 = c4 * c3;
  2744  000C08  C0EF  F01C         	movff	BMP180_init@c4,___ftmul@f1
  2745  000C0C  C0F0  F01D         	movff	BMP180_init@c4+1,___ftmul@f1+1
  2746  000C10  C0F1  F01E         	movff	BMP180_init@c4+2,___ftmul@f1+2
  2747  000C14  C0E0  F01F         	movff	BMP180_init@c3,___ftmul@f2
  2748  000C18  C0E1  F020         	movff	BMP180_init@c3+1,___ftmul@f2+1
  2749  000C1C  C0E2  F021         	movff	BMP180_init@c3+2,___ftmul@f2+2
  2750  000C20  ECEE  F00B         	call	___ftmul	;wreg free
  2751  000C24  C01C  F099         	movff	?___ftmul,_y1
  2752  000C28  C01D  F09A         	movff	?___ftmul+1,_y1+1
  2753  000C2C  C01E  F09B         	movff	?___ftmul+2,_y1+2
  2754                           
  2755                           ;SFE_BMP180.c: 146: y2 = c4 * b1;
  2756  000C30  C0EF  F01C         	movff	BMP180_init@c4,___ftmul@f1
  2757  000C34  C0F0  F01D         	movff	BMP180_init@c4+1,___ftmul@f1+1
  2758  000C38  C0F1  F01E         	movff	BMP180_init@c4+2,___ftmul@f1+2
  2759  000C3C  C0E3  F01F         	movff	BMP180_init@b1,___ftmul@f2
  2760  000C40  C0E4  F020         	movff	BMP180_init@b1+1,___ftmul@f2+1
  2761  000C44  C0E5  F021         	movff	BMP180_init@b1+2,___ftmul@f2+2
  2762  000C48  ECEE  F00B         	call	___ftmul	;wreg free
  2763  000C4C  C01C  F09C         	movff	?___ftmul,_y2
  2764  000C50  C01D  F09D         	movff	?___ftmul+1,_y2+1
  2765  000C54  C01E  F09E         	movff	?___ftmul+2,_y2+2
  2766                           
  2767                           ;SFE_BMP180.c: 147: p0 = (3791.0 - 8.0) / 1600.0;
  2768  000C58  0E52               	movlw	82
  2769  000C5A  0100               	movlb	0	; () banked
  2770  000C5C  6F84               	movwf	_p0& (0+255),b
  2771  000C5E  0E17               	movlw	23
  2772  000C60  0100               	movlb	0	; () banked
  2773  000C62  6F85               	movwf	(_p0+1)& (0+255),b
  2774  000C64  0E40               	movlw	64
  2775  000C66  0100               	movlb	0	; () banked
  2776  000C68  6F86               	movwf	(_p0+2)& (0+255),b
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;SFE_BMP180.c: 148: p1 = 1.0 - 7357.0 * pow(2,-20);
  2780  000C6A  0E00               	movlw	0
  2781  000C6C  6E5D               	movwf	pow@y,c
  2782  000C6E  0EA0               	movlw	160
  2783  000C70  6E5E               	movwf	pow@y+1,c
  2784  000C72  0EC1               	movlw	193
  2785  000C74  6E5F               	movwf	pow@y+2,c
  2786  000C76  0E00               	movlw	0
  2787  000C78  6E5A               	movwf	pow@x,c
  2788  000C7A  0E00               	movlw	0
  2789  000C7C  6E5B               	movwf	pow@x+1,c
  2790  000C7E  0E40               	movlw	64
  2791  000C80  6E5C               	movwf	pow@x+2,c
  2792  000C82  EC84  F008         	call	_pow	;wreg free
  2793  000C86  C05A  F0F8         	movff	?_pow,_BMP180_init$3527
  2794  000C8A  C05B  F0F9         	movff	?_pow+1,_BMP180_init$3527+1
  2795  000C8E  C05C  F0FA         	movff	?_pow+2,_BMP180_init$3527+2
  2796                           
  2797                           ;SFE_BMP180.c: 148: p1 = 1.0 - 7357.0 * pow(2,-20);
  2798  000C92  0EE8               	movlw	232
  2799  000C94  6E1F               	movwf	___ftmul@f2,c
  2800  000C96  0EE5               	movlw	229
  2801  000C98  6E20               	movwf	___ftmul@f2+1,c
  2802  000C9A  0E45               	movlw	69
  2803  000C9C  6E21               	movwf	___ftmul@f2+2,c
  2804  000C9E  C0F8  F01C         	movff	_BMP180_init$3527,___ftmul@f1
  2805  000CA2  C0F9  F01D         	movff	_BMP180_init$3527+1,___ftmul@f1+1
  2806  000CA6  C0FA  F01E         	movff	_BMP180_init$3527+2,___ftmul@f1+2
  2807  000CAA  ECEE  F00B         	call	___ftmul	;wreg free
  2808  000CAE  C01C  F02B         	movff	?___ftmul,___ftneg@f1
  2809  000CB2  C01D  F02C         	movff	?___ftmul+1,___ftneg@f1+1
  2810  000CB6  C01E  F02D         	movff	?___ftmul+2,___ftneg@f1+2
  2811  000CBA  EC5A  F011         	call	___ftneg	;wreg free
  2812  000CBE  C02B  F02E         	movff	?___ftneg,___ftadd@f1
  2813  000CC2  C02C  F02F         	movff	?___ftneg+1,___ftadd@f1+1
  2814  000CC6  C02D  F030         	movff	?___ftneg+2,___ftadd@f1+2
  2815  000CCA  0E00               	movlw	0
  2816  000CCC  6E31               	movwf	___ftadd@f2,c
  2817  000CCE  0E80               	movlw	128
  2818  000CD0  6E32               	movwf	___ftadd@f2+1,c
  2819  000CD2  0E3F               	movlw	63
  2820  000CD4  6E33               	movwf	___ftadd@f2+2,c
  2821  000CD6  ECAC  F007         	call	___ftadd	;wreg free
  2822  000CDA  C02E  F087         	movff	?___ftadd,_p1
  2823  000CDE  C02F  F088         	movff	?___ftadd+1,_p1+1
  2824  000CE2  C030  F089         	movff	?___ftadd+2,_p1+2
  2825                           
  2826                           ;SFE_BMP180.c: 149: p2 = 3038.0 * 100.0 * pow(2,-36);
  2827  000CE6  0E00               	movlw	0
  2828  000CE8  6E5D               	movwf	pow@y,c
  2829  000CEA  0E10               	movlw	16
  2830  000CEC  6E5E               	movwf	pow@y+1,c
  2831  000CEE  0EC2               	movlw	194
  2832  000CF0  6E5F               	movwf	pow@y+2,c
  2833  000CF2  0E00               	movlw	0
  2834  000CF4  6E5A               	movwf	pow@x,c
  2835  000CF6  0E00               	movlw	0
  2836  000CF8  6E5B               	movwf	pow@x+1,c
  2837  000CFA  0E40               	movlw	64
  2838  000CFC  6E5C               	movwf	pow@x+2,c
  2839  000CFE  EC84  F008         	call	_pow	;wreg free
  2840  000D02  C05A  F0F8         	movff	?_pow,_BMP180_init$3527
  2841  000D06  C05B  F0F9         	movff	?_pow+1,_BMP180_init$3527+1
  2842  000D0A  C05C  F0FA         	movff	?_pow+2,_BMP180_init$3527+2
  2843                           
  2844                           ;SFE_BMP180.c: 149: p2 = 3038.0 * 100.0 * pow(2,-36);
  2845  000D0E  C0F8  F01C         	movff	_BMP180_init$3527,___ftmul@f1
  2846  000D12  C0F9  F01D         	movff	_BMP180_init$3527+1,___ftmul@f1+1
  2847  000D16  C0FA  F01E         	movff	_BMP180_init$3527+2,___ftmul@f1+2
  2848  000D1A  0E57               	movlw	87
  2849  000D1C  6E1F               	movwf	___ftmul@f2,c
  2850  000D1E  0E94               	movlw	148
  2851  000D20  6E20               	movwf	___ftmul@f2+1,c
  2852  000D22  0E48               	movlw	72
  2853  000D24  6E21               	movwf	___ftmul@f2+2,c
  2854  000D26  ECEE  F00B         	call	___ftmul	;wreg free
  2855  000D2A  C01C  F08A         	movff	?___ftmul,_p2
  2856  000D2E  C01D  F08B         	movff	?___ftmul+1,_p2+1
  2857  000D32  C01E  F08C         	movff	?___ftmul+2,_p2+2
  2858                           
  2859                           ;SFE_BMP180.c: 172: return 1;
  2860  000D36  0E00               	movlw	0
  2861  000D38  0100               	movlb	0	; () banked
  2862  000D3A  6FDF               	movwf	(?_BMP180_init+1)& (0+255),b
  2863  000D3C  0E01               	movlw	1
  2864  000D3E  D004               	goto	L4
  2865  000D40                     l5527:
  2866                           
  2867                           ;SFE_BMP180.c: 174: else
  2868                           ;SFE_BMP180.c: 175: {
  2869                           ;SFE_BMP180.c: 177: return 0;
  2870  000D40  0E00               	movlw	0
  2871  000D42  0100               	movlb	0	; () banked
  2872  000D44  6FDF               	movwf	(?_BMP180_init+1)& (0+255),b
  2873  000D46  0E00               	movlw	0
  2874  000D48                     L4:
  2875  000D48  0100               	movlb	0	; () banked
  2876  000D4A  6FDE               	movwf	?_BMP180_init& (0+255),b
  2877                           
  2878                           ; BSR set to: 0
  2879                           
  2880                           ; BSR set to: 0
  2881                           
  2882                           ; BSR set to: 0
  2883  000D4C  0012               	return	
  2884  000D4E  FFFF               	dw	65535	; errata NOP
  2885  000D50                     __end_of_BMP180_init:
  2886                           	opt stack 0
  2887                           tblptru	equ	0xFF8
  2888                           prodh	equ	0xFF4
  2889                           prodl	equ	0xFF3
  2890                           postinc0	equ	0xFEE
  2891                           wreg	equ	0xFE8
  2892                           indf2	equ	0xFDF
  2893                           fsr2h	equ	0xFDA
  2894                           fsr2l	equ	0xFD9
  2895                           status	equ	0xFD8
  2896                           
  2897 ;; *************** function _pow *****************
  2898 ;; Defined at:
  2899 ;;		line 5 in file "/Applications/microchip/xc8/v1.32/sources/common/pow.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  x               3   89[COMRAM] int 
  2902 ;;  y               3   92[COMRAM] int 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  yi              4    7[BANK0 ] unsigned long 
  2905 ;;  sign            1    6[BANK0 ] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  3   89[COMRAM] unsigned char 
  2908 ;; Registers used:
  2909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2915 ;;      Params:         6       0       0       0       0       0       0
  2916 ;;      Locals:         0      11       0       0       0       0       0
  2917 ;;      Temps:          0       0       0       0       0       0       0
  2918 ;;      Totals:         6      11       0       0       0       0       0
  2919 ;;Total ram usage:       17 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    4
  2922 ;; This function calls:
  2923 ;;		___ftge
  2924 ;;		___ftmul
  2925 ;;		___ftneg
  2926 ;;		___fttol
  2927 ;;		___lltoft
  2928 ;;		_exp
  2929 ;;		_log
  2930 ;; This function is called by:
  2931 ;;		_BMP180_init
  2932 ;;		_BMP180_getPressure
  2933 ;;		_BMP180_sealevel
  2934 ;;		_BMP180_altitude
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text14
  2939  001108                     __ptext14:
  2940                           	opt stack 0
  2941  001108                     _pow:
  2942                           	opt stack 25
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;incstack = 0
  2946  001108  FFFF               	dw	65535
  2947  00110A  0E00               	movlw	0
  2948  00110C  0100               	movlb	0	; () banked
  2949  00110E  6FD9               	movwf	pow@sign& (0+255),b
  2950                           
  2951                           ; BSR set to: 0
  2952  001110  0E7F               	movlw	127
  2953  001112  145C               	andwf	pow@x+2,w,c
  2954  001114  105B               	iorwf	pow@x+1,w,c
  2955  001116  105A               	iorwf	pow@x,w,c
  2956  001118  A4D8               	btfss	status,2,c
  2957  00111A  D011               	goto	l5181
  2958                           
  2959                           ; BSR set to: 0
  2960  00111C  0E00               	movlw	0
  2961  00111E  6E01               	movwf	___ftge@ff1,c
  2962  001120  0E00               	movlw	0
  2963  001122  6E02               	movwf	___ftge@ff1+1,c
  2964  001124  0E00               	movlw	0
  2965  001126  6E03               	movwf	___ftge@ff1+2,c
  2966  001128  C05D  F004         	movff	pow@y,___ftge@ff2
  2967  00112C  C05E  F005         	movff	pow@y+1,___ftge@ff2+1
  2968  001130  C05F  F006         	movff	pow@y+2,___ftge@ff2+2
  2969  001134  EC9F  F00E         	call	___ftge	;wreg free
  2970  001138  A0D8               	btfss	status,0,c
  2971  00113A  D042               	goto	L7
  2972  00113C  D03B               	goto	L8
  2973  00113E                     l5181:
  2974  00113E  0E7F               	movlw	127
  2975  001140  145F               	andwf	pow@y+2,w,c
  2976  001142  105E               	iorwf	pow@y+1,w,c
  2977  001144  105D               	iorwf	pow@y,w,c
  2978  001146  A4D8               	btfss	status,2,c
  2979  001148  D006               	goto	l5187
  2980  00114A  0E00               	movlw	0
  2981  00114C  6E5A               	movwf	?_pow,c
  2982  00114E  0E80               	movlw	128
  2983  001150  6E5B               	movwf	?_pow+1,c
  2984  001152  0E3F               	movlw	63
  2985  001154  D03A               	goto	L6
  2986  001156                     l5187:
  2987  001156  505C               	movf	pow@x+2,w,c
  2988  001158  0A80               	xorlw	128
  2989  00115A  0F80               	addlw	128
  2990  00115C  E105               	bnz	u3435
  2991  00115E  0E00               	movlw	0
  2992  001160  5C5B               	subwf	pow@x+1,w,c
  2993  001162  E102               	bnz	u3435
  2994  001164  0E00               	movlw	0
  2995  001166  5C5A               	subwf	pow@x,w,c
  2996  001168                     u3435:
  2997  001168  B0D8               	btfsc	status,0,c
  2998  00116A  D044               	goto	l5199
  2999  00116C  C05D  F001         	movff	pow@y,___fttol@f1
  3000  001170  C05E  F002         	movff	pow@y+1,___fttol@f1+1
  3001  001174  C05F  F003         	movff	pow@y+2,___fttol@f1+2
  3002  001178  EC40  F00D         	call	___fttol	;wreg free
  3003  00117C  C001  F0DA         	movff	?___fttol,pow@yi
  3004  001180  C002  F0DB         	movff	?___fttol+1,pow@yi+1
  3005  001184  C003  F0DC         	movff	?___fttol+2,pow@yi+2
  3006  001188  C004  F0DD         	movff	?___fttol+3,pow@yi+3
  3007  00118C  C0DA  F009         	movff	pow@yi,___lltoft@c
  3008  001190  C0DB  F00A         	movff	pow@yi+1,___lltoft@c+1
  3009  001194  C0DC  F00B         	movff	pow@yi+2,___lltoft@c+2
  3010  001198  C0DD  F00C         	movff	pow@yi+3,___lltoft@c+3
  3011  00119C  EC0F  F010         	call	___lltoft	;wreg free
  3012  0011A0  505F               	movf	pow@y+2,w,c
  3013  0011A2  180B               	xorwf	?___lltoft+2,w,c
  3014  0011A4  E105               	bnz	u3445
  3015  0011A6  505E               	movf	pow@y+1,w,c
  3016  0011A8  180A               	xorwf	?___lltoft+1,w,c
  3017  0011AA  E102               	bnz	u3445
  3018  0011AC  505D               	movf	pow@y,w,c
  3019  0011AE  1809               	xorwf	?___lltoft,w,c
  3020  0011B0                     u3445:
  3021  0011B0  B4D8               	btfsc	status,2,c
  3022  0011B2  D00D               	goto	l5195
  3023  0011B4                     L8:
  3024  0011B4  0E00               	movlw	0
  3025  0011B6  0101               	movlb	1	; () banked
  3026  0011B8  6F23               	movwf	(_errno+1)& (0+255),b
  3027  0011BA  0E21               	movlw	33
  3028  0011BC  0101               	movlb	1	; () banked
  3029  0011BE  6F22               	movwf	_errno& (0+255),b
  3030  0011C0                     L7:
  3031  0011C0  0E00               	movlw	0
  3032  0011C2  6E5A               	movwf	?_pow,c
  3033  0011C4  0E00               	movlw	0
  3034  0011C6  6E5B               	movwf	?_pow+1,c
  3035  0011C8  0E00               	movlw	0
  3036  0011CA                     L6:
  3037  0011CA  6E5C               	movwf	?_pow+2,c
  3038  0011CC  D05C               	goto	l1995
  3039  0011CE                     l5195:
  3040  0011CE  0100               	movlb	0	; () banked
  3041  0011D0  51DA               	movf	pow@yi& (0+255),w,b
  3042  0011D2  0B01               	andlw	1
  3043  0011D4  0100               	movlb	0	; () banked
  3044  0011D6  6FD9               	movwf	pow@sign& (0+255),b
  3045                           
  3046                           ; BSR set to: 0
  3047  0011D8  C05A  F02B         	movff	pow@x,___ftneg@f1
  3048  0011DC  C05B  F02C         	movff	pow@x+1,___ftneg@f1+1
  3049  0011E0  C05C  F02D         	movff	pow@x+2,___ftneg@f1+2
  3050  0011E4  EC5A  F011         	call	___ftneg	;wreg free
  3051  0011E8  C02B  F05A         	movff	?___ftneg,pow@x
  3052  0011EC  C02C  F05B         	movff	?___ftneg+1,pow@x+1
  3053  0011F0  C02D  F05C         	movff	?___ftneg+2,pow@x+2
  3054  0011F4                     l5199:
  3055  0011F4  C05A  F046         	movff	pow@x,log@x
  3056  0011F8  C05B  F047         	movff	pow@x+1,log@x+1
  3057  0011FC  C05C  F048         	movff	pow@x+2,log@x+2
  3058  001200  ECEC  F009         	call	_log	;wreg free
  3059  001204  C046  F0D3         	movff	?_log,_pow$3541
  3060  001208  C047  F0D4         	movff	?_log+1,_pow$3541+1
  3061  00120C  C048  F0D5         	movff	?_log+2,_pow$3541+2
  3062  001210  C0D3  F01C         	movff	_pow$3541,___ftmul@f1
  3063  001214  C0D4  F01D         	movff	_pow$3541+1,___ftmul@f1+1
  3064  001218  C0D5  F01E         	movff	_pow$3541+2,___ftmul@f1+2
  3065  00121C  C05D  F01F         	movff	pow@y,___ftmul@f2
  3066  001220  C05E  F020         	movff	pow@y+1,___ftmul@f2+1
  3067  001224  C05F  F021         	movff	pow@y+2,___ftmul@f2+2
  3068  001228  ECEE  F00B         	call	___ftmul	;wreg free
  3069  00122C  C01C  F0D6         	movff	?___ftmul,_pow$3542
  3070  001230  C01D  F0D7         	movff	?___ftmul+1,_pow$3542+1
  3071  001234  C01E  F0D8         	movff	?___ftmul+2,_pow$3542+2
  3072  001238  C0D6  F04D         	movff	_pow$3542,exp@x
  3073  00123C  C0D7  F04E         	movff	_pow$3542+1,exp@x+1
  3074  001240  C0D8  F04F         	movff	_pow$3542+2,exp@x+2
  3075  001244  ECA8  F006         	call	_exp	;wreg free
  3076  001248  C04D  F05A         	movff	?_exp,pow@x
  3077  00124C  C04E  F05B         	movff	?_exp+1,pow@x+1
  3078  001250  C04F  F05C         	movff	?_exp+2,pow@x+2
  3079  001254  0100               	movlb	0	; () banked
  3080  001256  51D9               	movf	pow@sign& (0+255),w,b
  3081  001258  B4D8               	btfsc	status,2,c
  3082  00125A  D00F               	goto	l1999
  3083                           
  3084                           ; BSR set to: 0
  3085  00125C  C05A  F02B         	movff	pow@x,___ftneg@f1
  3086  001260  C05B  F02C         	movff	pow@x+1,___ftneg@f1+1
  3087  001264  C05C  F02D         	movff	pow@x+2,___ftneg@f1+2
  3088  001268  EC5A  F011         	call	___ftneg	;wreg free
  3089  00126C  C02B  F05A         	movff	?___ftneg,?_pow
  3090  001270  C02C  F05B         	movff	?___ftneg+1,?_pow+1
  3091  001274  C02D  F05C         	movff	?___ftneg+2,?_pow+2
  3092  001278  D006               	goto	l1995
  3093  00127A                     l1999:
  3094                           
  3095                           ; BSR set to: 0
  3096  00127A  C05A  F05A         	movff	pow@x,?_pow
  3097  00127E  C05B  F05B         	movff	pow@x+1,?_pow+1
  3098  001282  C05C  F05C         	movff	pow@x+2,?_pow+2
  3099  001286                     l1995:
  3100  001286  0012               	return	
  3101  001288  FFFF               	dw	65535	; errata NOP
  3102  00128A                     __end_of_pow:
  3103                           	opt stack 0
  3104                           tblptru	equ	0xFF8
  3105                           prodh	equ	0xFF4
  3106                           prodl	equ	0xFF3
  3107                           postinc0	equ	0xFEE
  3108                           wreg	equ	0xFE8
  3109                           indf2	equ	0xFDF
  3110                           fsr2h	equ	0xFDA
  3111                           fsr2l	equ	0xFD9
  3112                           status	equ	0xFD8
  3113                           
  3114 ;; *************** function _log *****************
  3115 ;; Defined at:
  3116 ;;		line 5 in file "/Applications/microchip/xc8/v1.32/sources/common/log.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  x               3   69[COMRAM] unsigned char 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  exponent        2   72[COMRAM] int 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  3   69[COMRAM] int 
  3123 ;; Registers used:
  3124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3130 ;;      Params:         3       0       0       0       0       0       0
  3131 ;;      Locals:         2       0       0       0       0       0       0
  3132 ;;      Temps:          0       0       0       0       0       0       0
  3133 ;;      Totals:         5       0       0       0       0       0       0
  3134 ;;Total ram usage:        5 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    3
  3137 ;; This function calls:
  3138 ;;		___awtoft
  3139 ;;		___ftadd
  3140 ;;		___ftmul
  3141 ;;		_eval_poly
  3142 ;;		_frexp
  3143 ;; This function is called by:
  3144 ;;		_pow
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text15
  3149  0013D8                     __ptext15:
  3150                           	opt stack 0
  3151  0013D8                     _log:
  3152                           	opt stack 25
  3153                           
  3154                           ;incstack = 0
  3155  0013D8  FFFF               	dw	65535
  3156  0013DA  5048               	movf	log@x+2,w,c
  3157  0013DC  0A80               	xorlw	128
  3158  0013DE  0F80               	addlw	128
  3159  0013E0  E105               	bnz	u3165
  3160  0013E2  0E00               	movlw	0
  3161  0013E4  5C47               	subwf	log@x+1,w,c
  3162  0013E6  E102               	bnz	u3165
  3163  0013E8  0E00               	movlw	0
  3164  0013EA  5C46               	subwf	log@x,w,c
  3165  0013EC                     u3165:
  3166  0013EC  B0D8               	btfsc	status,0,c
  3167  0013EE  D005               	goto	l4987
  3168  0013F0  0E00               	movlw	0
  3169  0013F2  0101               	movlb	1	; () banked
  3170  0013F4  6F23               	movwf	(_errno+1)& (0+255),b
  3171  0013F6  0E21               	movlw	33
  3172  0013F8  D00A               	goto	L9
  3173  0013FA                     l4987:
  3174  0013FA  0E7F               	movlw	127
  3175  0013FC  1448               	andwf	log@x+2,w,c
  3176  0013FE  1047               	iorwf	log@x+1,w,c
  3177  001400  1046               	iorwf	log@x,w,c
  3178  001402  A4D8               	btfss	status,2,c
  3179  001404  D00D               	goto	l4993
  3180  001406  0E00               	movlw	0
  3181  001408  0101               	movlb	1	; () banked
  3182  00140A  6F23               	movwf	(_errno+1)& (0+255),b
  3183  00140C  0E22               	movlw	34
  3184  00140E                     L9:
  3185  00140E  0101               	movlb	1	; () banked
  3186  001410  6F22               	movwf	_errno& (0+255),b
  3187  001412  0E00               	movlw	0
  3188  001414  6E46               	movwf	?_log,c
  3189  001416  0E00               	movlw	0
  3190  001418  6E47               	movwf	?_log+1,c
  3191  00141A  0E00               	movlw	0
  3192  00141C  6E48               	movwf	?_log+2,c
  3193  00141E  D06F               	goto	l2057
  3194  001420                     l4993:
  3195  001420  0E00               	movlw	0
  3196  001422  6E1F               	movwf	___ftmul@f2,c
  3197  001424  0E00               	movlw	0
  3198  001426  6E20               	movwf	___ftmul@f2+1,c
  3199  001428  0E40               	movlw	64
  3200  00142A  6E21               	movwf	___ftmul@f2+2,c
  3201  00142C  0E00               	movlw	high log@exponent
  3202  00142E  6E05               	movwf	frexp@eptr+1,c
  3203  001430  0E49               	movlw	low log@exponent
  3204  001432  6E04               	movwf	frexp@eptr,c
  3205  001434  C046  F001         	movff	log@x,frexp@value
  3206  001438  C047  F002         	movff	log@x+1,frexp@value+1
  3207  00143C  C048  F003         	movff	log@x+2,frexp@value+2
  3208  001440  EC54  F00E         	call	_frexp	;wreg free
  3209  001444  C001  F01C         	movff	?_frexp,___ftmul@f1
  3210  001448  C002  F01D         	movff	?_frexp+1,___ftmul@f1+1
  3211  00144C  C003  F01E         	movff	?_frexp+2,___ftmul@f1+2
  3212  001450  ECEE  F00B         	call	___ftmul	;wreg free
  3213  001454  C01C  F02E         	movff	?___ftmul,___ftadd@f1
  3214  001458  C01D  F02F         	movff	?___ftmul+1,___ftadd@f1+1
  3215  00145C  C01E  F030         	movff	?___ftmul+2,___ftadd@f1+2
  3216  001460  0E00               	movlw	0
  3217  001462  6E31               	movwf	___ftadd@f2,c
  3218  001464  0E80               	movlw	128
  3219  001466  6E32               	movwf	___ftadd@f2+1,c
  3220  001468  0EBF               	movlw	191
  3221  00146A  6E33               	movwf	___ftadd@f2+2,c
  3222  00146C  ECAC  F007         	call	___ftadd	;wreg free
  3223  001470  C02E  F046         	movff	?___ftadd,log@x
  3224  001474  C02F  F047         	movff	?___ftadd+1,log@x+1
  3225  001478  C030  F048         	movff	?___ftadd+2,log@x+2
  3226  00147C  0649               	decf	log@exponent,f,c
  3227  00147E  A0D8               	btfss	status,0,c
  3228  001480  064A               	decf	log@exponent+1,f,c
  3229  001482  C046  F03A         	movff	log@x,eval_poly@x
  3230  001486  C047  F03B         	movff	log@x+1,eval_poly@x+1
  3231  00148A  C048  F03C         	movff	log@x+2,eval_poly@x+2
  3232  00148E  0E06               	movlw	high log@coeff
  3233  001490  6E3E               	movwf	eval_poly@d+1,c
  3234  001492  0E1F               	movlw	low log@coeff
  3235  001494  6E3D               	movwf	eval_poly@d,c
  3236  001496  0E00               	movlw	0
  3237  001498  6E40               	movwf	eval_poly@n+1,c
  3238  00149A  0E08               	movlw	8
  3239  00149C  6E3F               	movwf	eval_poly@n,c
  3240  00149E  EC62  F00C         	call	_eval_poly	;wreg free
  3241  0014A2  C03A  F046         	movff	?_eval_poly,log@x
  3242  0014A6  C03B  F047         	movff	?_eval_poly+1,log@x+1
  3243  0014AA  C03C  F048         	movff	?_eval_poly+2,log@x+2
  3244  0014AE  0E72               	movlw	114
  3245  0014B0  6E1F               	movwf	___ftmul@f2,c
  3246  0014B2  0E31               	movlw	49
  3247  0014B4  6E20               	movwf	___ftmul@f2+1,c
  3248  0014B6  0E3F               	movlw	63
  3249  0014B8  6E21               	movwf	___ftmul@f2+2,c
  3250  0014BA  C049  F009         	movff	log@exponent,___awtoft@c
  3251  0014BE  C04A  F00A         	movff	log@exponent+1,___awtoft@c+1
  3252  0014C2  EC97  F010         	call	___awtoft	;wreg free
  3253  0014C6  C009  F01C         	movff	?___awtoft,___ftmul@f1
  3254  0014CA  C00A  F01D         	movff	?___awtoft+1,___ftmul@f1+1
  3255  0014CE  C00B  F01E         	movff	?___awtoft+2,___ftmul@f1+2
  3256  0014D2  ECEE  F00B         	call	___ftmul	;wreg free
  3257  0014D6  C01C  F02E         	movff	?___ftmul,___ftadd@f1
  3258  0014DA  C01D  F02F         	movff	?___ftmul+1,___ftadd@f1+1
  3259  0014DE  C01E  F030         	movff	?___ftmul+2,___ftadd@f1+2
  3260  0014E2  C046  F031         	movff	log@x,___ftadd@f2
  3261  0014E6  C047  F032         	movff	log@x+1,___ftadd@f2+1
  3262  0014EA  C048  F033         	movff	log@x+2,___ftadd@f2+2
  3263  0014EE  ECAC  F007         	call	___ftadd	;wreg free
  3264  0014F2  C02E  F046         	movff	?___ftadd,?_log
  3265  0014F6  C02F  F047         	movff	?___ftadd+1,?_log+1
  3266  0014FA  C030  F048         	movff	?___ftadd+2,?_log+2
  3267  0014FE                     l2057:
  3268  0014FE  0012               	return	
  3269  001500  FFFF               	dw	65535	; errata NOP
  3270  001502                     __end_of_log:
  3271                           	opt stack 0
  3272                           tblptru	equ	0xFF8
  3273                           prodh	equ	0xFF4
  3274                           prodl	equ	0xFF3
  3275                           postinc0	equ	0xFEE
  3276                           wreg	equ	0xFE8
  3277                           indf2	equ	0xFDF
  3278                           fsr2h	equ	0xFDA
  3279                           fsr2l	equ	0xFD9
  3280                           status	equ	0xFD8
  3281                           
  3282 ;; *************** function _exp *****************
  3283 ;; Defined at:
  3284 ;;		line 12 in file "/Applications/microchip/xc8/v1.32/sources/common/exp.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  x               3   76[COMRAM] int 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  exponent        2   86[COMRAM] int 
  3289 ;;  sign            1   88[COMRAM] unsigned char 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  3   76[COMRAM] unsigned char 
  3292 ;; Registers used:
  3293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3299 ;;      Params:         3       0       0       0       0       0       0
  3300 ;;      Locals:         6       0       0       0       0       0       0
  3301 ;;      Temps:          4       0       0       0       0       0       0
  3302 ;;      Totals:        13       0       0       0       0       0       0
  3303 ;;Total ram usage:       13 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    3
  3306 ;; This function calls:
  3307 ;;		___awtoft
  3308 ;;		___ftdiv
  3309 ;;		___ftge
  3310 ;;		___ftmul
  3311 ;;		___ftneg
  3312 ;;		___ftsub
  3313 ;;		___fttol
  3314 ;;		_eval_poly
  3315 ;;		_floor
  3316 ;;		_ldexp
  3317 ;; This function is called by:
  3318 ;;		_pow
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           	psect	text16
  3323  000D50                     __ptext16:
  3324                           	opt stack 0
  3325  000D50                     _exp:
  3326                           	opt stack 25
  3327                           
  3328                           ;incstack = 0
  3329  000D50  FFFF               	dw	65535
  3330  000D52  0E7F               	movlw	127
  3331  000D54  144F               	andwf	exp@x+2,w,c
  3332  000D56  104E               	iorwf	exp@x+1,w,c
  3333  000D58  104D               	iorwf	exp@x,w,c
  3334  000D5A  A4D8               	btfss	status,2,c
  3335  000D5C  D006               	goto	l5009
  3336  000D5E  0E00               	movlw	0
  3337  000D60  6E4D               	movwf	?_exp,c
  3338  000D62  0E80               	movlw	128
  3339  000D64  6E4E               	movwf	?_exp+1,c
  3340  000D66  0E3F               	movlw	63
  3341  000D68  D033               	goto	L11
  3342  000D6A                     l5009:
  3343  000D6A  0E72               	movlw	114
  3344  000D6C  6E01               	movwf	___ftge@ff1,c
  3345  000D6E  0E31               	movlw	49
  3346  000D70  6E02               	movwf	___ftge@ff1+1,c
  3347  000D72  0E44               	movlw	68
  3348  000D74  6E03               	movwf	___ftge@ff1+2,c
  3349  000D76  C04D  F004         	movff	exp@x,___ftge@ff2
  3350  000D7A  C04E  F005         	movff	exp@x+1,___ftge@ff2+1
  3351  000D7E  C04F  F006         	movff	exp@x+2,___ftge@ff2+2
  3352  000D82  EC9F  F00E         	call	___ftge	;wreg free
  3353  000D86  B0D8               	btfsc	status,0,c
  3354  000D88  D00C               	goto	l5015
  3355  000D8A  0E00               	movlw	0
  3356  000D8C  0101               	movlb	1	; () banked
  3357  000D8E  6F23               	movwf	(_errno+1)& (0+255),b
  3358  000D90  0E22               	movlw	34
  3359  000D92  0101               	movlb	1	; () banked
  3360  000D94  6F22               	movwf	_errno& (0+255),b
  3361  000D96  0EFF               	movlw	255
  3362  000D98  6E4D               	movwf	?_exp,c
  3363  000D9A  0E7F               	movlw	127
  3364  000D9C  6E4E               	movwf	?_exp+1,c
  3365  000D9E  0E7F               	movlw	127
  3366  000DA0  D017               	goto	L11
  3367  000DA2                     l5015:
  3368  000DA2  C04D  F001         	movff	exp@x,___ftge@ff1
  3369  000DA6  C04E  F002         	movff	exp@x+1,___ftge@ff1+1
  3370  000DAA  C04F  F003         	movff	exp@x+2,___ftge@ff1+2
  3371  000DAE  0E49               	movlw	73
  3372  000DB0  6E04               	movwf	___ftge@ff2,c
  3373  000DB2  0E3A               	movlw	58
  3374  000DB4  6E05               	movwf	___ftge@ff2+1,c
  3375  000DB6  0EC4               	movlw	196
  3376  000DB8  6E06               	movwf	___ftge@ff2+2,c
  3377  000DBA  EC9F  F00E         	call	___ftge	;wreg free
  3378  000DBE  B0D8               	btfsc	status,0,c
  3379  000DC0  D009               	goto	l5021
  3380  000DC2  0E00               	movlw	0
  3381  000DC4  0101               	movlb	1	; () banked
  3382  000DC6  6F23               	movwf	(_errno+1)& (0+255),b
  3383  000DC8  0E22               	movlw	34
  3384  000DCA  0101               	movlb	1	; () banked
  3385  000DCC  6F22               	movwf	_errno& (0+255),b
  3386  000DCE  D0A1               	goto	u3240
  3387  000DD0                     L11:
  3388  000DD0  6E4F               	movwf	?_exp+2,c
  3389  000DD2  D0C0               	goto	l2015
  3390  000DD4                     l5021:
  3391  000DD4  504F               	movf	exp@x+2,w,c
  3392  000DD6  0A80               	xorlw	128
  3393  000DD8  0F80               	addlw	128
  3394  000DDA  E105               	bnz	u3215
  3395  000DDC  0E00               	movlw	0
  3396  000DDE  5C4E               	subwf	exp@x+1,w,c
  3397  000DE0  E102               	bnz	u3215
  3398  000DE2  0E00               	movlw	0
  3399  000DE4  5C4D               	subwf	exp@x,w,c
  3400  000DE6                     u3215:
  3401  000DE6  B0D8               	btfsc	status,0,c
  3402  000DE8  D002               	goto	u3210
  3403  000DEA  0E01               	movlw	1
  3404  000DEC  D001               	goto	u3216
  3405  000DEE                     u3210:
  3406  000DEE  0E00               	movlw	0
  3407  000DF0                     u3216:
  3408  000DF0  6E59               	movwf	exp@sign,c
  3409  000DF2  5059               	movf	exp@sign,w,c
  3410  000DF4  B4D8               	btfsc	status,2,c
  3411  000DF6  D00E               	goto	l2018
  3412  000DF8  C04D  F02B         	movff	exp@x,___ftneg@f1
  3413  000DFC  C04E  F02C         	movff	exp@x+1,___ftneg@f1+1
  3414  000E00  C04F  F02D         	movff	exp@x+2,___ftneg@f1+2
  3415  000E04  EC5A  F011         	call	___ftneg	;wreg free
  3416  000E08  C02B  F04D         	movff	?___ftneg,exp@x
  3417  000E0C  C02C  F04E         	movff	?___ftneg+1,exp@x+1
  3418  000E10  C02D  F04F         	movff	?___ftneg+2,exp@x+2
  3419  000E14                     l2018:
  3420  000E14  C04D  F01C         	movff	exp@x,___ftmul@f1
  3421  000E18  C04E  F01D         	movff	exp@x+1,___ftmul@f1+1
  3422  000E1C  C04F  F01E         	movff	exp@x+2,___ftmul@f1+2
  3423  000E20  0EAA               	movlw	170
  3424  000E22  6E1F               	movwf	___ftmul@f2,c
  3425  000E24  0EB8               	movlw	184
  3426  000E26  6E20               	movwf	___ftmul@f2+1,c
  3427  000E28  0E3F               	movlw	63
  3428  000E2A  6E21               	movwf	___ftmul@f2+2,c
  3429  000E2C  ECEE  F00B         	call	___ftmul	;wreg free
  3430  000E30  C01C  F04D         	movff	?___ftmul,exp@x
  3431  000E34  C01D  F04E         	movff	?___ftmul+1,exp@x+1
  3432  000E38  C01E  F04F         	movff	?___ftmul+2,exp@x+2
  3433  000E3C  C04D  F03A         	movff	exp@x,floor@x
  3434  000E40  C04E  F03B         	movff	exp@x+1,floor@x+1
  3435  000E44  C04F  F03C         	movff	exp@x+2,floor@x+2
  3436  000E48  EC81  F00A         	call	_floor	;wreg free
  3437  000E4C  C03A  F054         	movff	?_floor,_exp$3543
  3438  000E50  C03B  F055         	movff	?_floor+1,_exp$3543+1
  3439  000E54  C03C  F056         	movff	?_floor+2,_exp$3543+2
  3440  000E58  C054  F001         	movff	_exp$3543,___fttol@f1
  3441  000E5C  C055  F002         	movff	_exp$3543+1,___fttol@f1+1
  3442  000E60  C056  F003         	movff	_exp$3543+2,___fttol@f1+2
  3443  000E64  EC40  F00D         	call	___fttol	;wreg free
  3444  000E68  C001  F050         	movff	?___fttol,??_exp
  3445  000E6C  C002  F051         	movff	?___fttol+1,??_exp+1
  3446  000E70  C003  F052         	movff	?___fttol+2,??_exp+2
  3447  000E74  C004  F053         	movff	?___fttol+3,??_exp+3
  3448  000E78  C050  F057         	movff	??_exp,exp@exponent
  3449  000E7C  C051  F058         	movff	??_exp+1,exp@exponent+1
  3450  000E80  C04D  F03A         	movff	exp@x,___ftsub@f1
  3451  000E84  C04E  F03B         	movff	exp@x+1,___ftsub@f1+1
  3452  000E88  C04F  F03C         	movff	exp@x+2,___ftsub@f1+2
  3453  000E8C  C057  F009         	movff	exp@exponent,___awtoft@c
  3454  000E90  C058  F00A         	movff	exp@exponent+1,___awtoft@c+1
  3455  000E94  EC97  F010         	call	___awtoft	;wreg free
  3456  000E98  C009  F03D         	movff	?___awtoft,___ftsub@f2
  3457  000E9C  C00A  F03E         	movff	?___awtoft+1,___ftsub@f2+1
  3458  000EA0  C00B  F03F         	movff	?___awtoft+2,___ftsub@f2+2
  3459  000EA4  ECFC  F010         	call	___ftsub	;wreg free
  3460  000EA8  C03A  F04D         	movff	?___ftsub,exp@x
  3461  000EAC  C03B  F04E         	movff	?___ftsub+1,exp@x+1
  3462  000EB0  C03C  F04F         	movff	?___ftsub+2,exp@x+2
  3463  000EB4  C04D  F03A         	movff	exp@x,eval_poly@x
  3464  000EB8  C04E  F03B         	movff	exp@x+1,eval_poly@x+1
  3465  000EBC  C04F  F03C         	movff	exp@x+2,eval_poly@x+2
  3466  000EC0  0E06               	movlw	high exp@coeff
  3467  000EC2  6E3E               	movwf	eval_poly@d+1,c
  3468  000EC4  0E01               	movlw	low exp@coeff
  3469  000EC6  6E3D               	movwf	eval_poly@d,c
  3470  000EC8  0E00               	movlw	0
  3471  000ECA  6E40               	movwf	eval_poly@n+1,c
  3472  000ECC  0E09               	movlw	9
  3473  000ECE  6E3F               	movwf	eval_poly@n,c
  3474  000ED0  EC62  F00C         	call	_eval_poly	;wreg free
  3475  000ED4  C03A  F046         	movff	?_eval_poly,ldexp@value
  3476  000ED8  C03B  F047         	movff	?_eval_poly+1,ldexp@value+1
  3477  000EDC  C03C  F048         	movff	?_eval_poly+2,ldexp@value+2
  3478  000EE0  C057  F049         	movff	exp@exponent,ldexp@newexp
  3479  000EE4  C058  F04A         	movff	exp@exponent+1,ldexp@newexp+1
  3480  000EE8  EC79  F00B         	call	_ldexp	;wreg free
  3481  000EEC  C046  F04D         	movff	?_ldexp,exp@x
  3482  000EF0  C047  F04E         	movff	?_ldexp+1,exp@x+1
  3483  000EF4  C048  F04F         	movff	?_ldexp+2,exp@x+2
  3484  000EF8  5059               	movf	exp@sign,w,c
  3485  000EFA  B4D8               	btfsc	status,2,c
  3486  000EFC  D025               	goto	l2019
  3487  000EFE  0EFF               	movlw	255
  3488  000F00  184D               	xorwf	exp@x,w,c
  3489  000F02  0E7F               	movlw	127
  3490  000F04  B4D8               	btfsc	status,2,c
  3491  000F06  184E               	xorwf	exp@x+1,w,c
  3492  000F08  0E7F               	movlw	127
  3493  000F0A  B4D8               	btfsc	status,2,c
  3494  000F0C  184F               	xorwf	exp@x+2,w,c
  3495  000F0E  A4D8               	btfss	status,2,c
  3496  000F10  D006               	goto	l5043
  3497  000F12                     u3240:
  3498  000F12  0E00               	movlw	0
  3499  000F14  6E4D               	movwf	?_exp,c
  3500  000F16  0E00               	movlw	0
  3501  000F18  6E4E               	movwf	?_exp+1,c
  3502  000F1A  0E00               	movlw	0
  3503  000F1C  D759               	goto	L11
  3504  000F1E                     l5043:
  3505  000F1E  0E00               	movlw	0
  3506  000F20  6E0D               	movwf	___ftdiv@f1,c
  3507  000F22  0E80               	movlw	128
  3508  000F24  6E0E               	movwf	___ftdiv@f1+1,c
  3509  000F26  0E3F               	movlw	63
  3510  000F28  6E0F               	movwf	___ftdiv@f1+2,c
  3511  000F2A  C04D  F010         	movff	exp@x,___ftdiv@f2
  3512  000F2E  C04E  F011         	movff	exp@x+1,___ftdiv@f2+1
  3513  000F32  C04F  F012         	movff	exp@x+2,___ftdiv@f2+2
  3514  000F36  ECD3  F00C         	call	___ftdiv	;wreg free
  3515  000F3A  C00D  F04D         	movff	?___ftdiv,?_exp
  3516  000F3E  C00E  F04E         	movff	?___ftdiv+1,?_exp+1
  3517  000F42  C00F  F04F         	movff	?___ftdiv+2,?_exp+2
  3518  000F46  D006               	goto	l2015
  3519  000F48                     l2019:
  3520  000F48  C04D  F04D         	movff	exp@x,?_exp
  3521  000F4C  C04E  F04E         	movff	exp@x+1,?_exp+1
  3522  000F50  C04F  F04F         	movff	exp@x+2,?_exp+2
  3523  000F54                     l2015:
  3524  000F54  0012               	return	
  3525  000F56  FFFF               	dw	65535	; errata NOP
  3526  000F58                     __end_of_exp:
  3527                           	opt stack 0
  3528                           tblptru	equ	0xFF8
  3529                           prodh	equ	0xFF4
  3530                           prodl	equ	0xFF3
  3531                           postinc0	equ	0xFEE
  3532                           wreg	equ	0xFE8
  3533                           indf2	equ	0xFDF
  3534                           fsr2h	equ	0xFDA
  3535                           fsr2l	equ	0xFD9
  3536                           status	equ	0xFD8
  3537                           
  3538 ;; *************** function _ldexp *****************
  3539 ;; Defined at:
  3540 ;;		line 277 in file "/Applications/microchip/xc8/v1.32/sources/common/frexp.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  value           3   69[COMRAM] unsigned char 
  3543 ;;  newexp          2   72[COMRAM] int 
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  3   69[COMRAM] int 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0, prodl
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3555 ;;      Params:         5       0       0       0       0       0       0
  3556 ;;      Locals:         0       0       0       0       0       0       0
  3557 ;;      Temps:          2       0       0       0       0       0       0
  3558 ;;      Totals:         7       0       0       0       0       0       0
  3559 ;;Total ram usage:        7 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_exp
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text17
  3569  0016F2                     __ptext17:
  3570                           	opt stack 0
  3571  0016F2                     _ldexp:
  3572                           	opt stack 27
  3573                           
  3574                           ;incstack = 0
  3575  0016F2  FFFF               	dw	65535
  3576  0016F4  0E7F               	movlw	127
  3577  0016F6  1448               	andwf	ldexp@value+2,w,c
  3578  0016F8  1047               	iorwf	ldexp@value+1,w,c
  3579  0016FA  1046               	iorwf	ldexp@value,w,c
  3580  0016FC  B4D8               	btfsc	status,2,c
  3581  0016FE  D025               	goto	L12
  3582  001700  5048               	movf	ldexp@value+2,w,c
  3583  001702  0B7F               	andlw	127
  3584  001704  6E4B               	movwf	??_ldexp& (0+255),c
  3585  001706  6A4C               	clrf	(??_ldexp+1)& (0+255),c
  3586  001708  90D8               	bcf	status,0,c
  3587  00170A  364B               	rlcf	??_ldexp,f,c
  3588  00170C  364C               	rlcf	??_ldexp+1,f,c
  3589  00170E  504B               	movf	??_ldexp,w,c
  3590  001710  2649               	addwf	ldexp@newexp,f,c
  3591  001712  504C               	movf	??_ldexp+1,w,c
  3592  001714  224A               	addwfc	ldexp@newexp+1,f,c
  3593  001716  AE47               	btfss	ldexp@value+1,7,c
  3594  001718  D003               	goto	u2960
  3595  00171A  6A4B               	clrf	??_ldexp& (0+255),c
  3596  00171C  2A4B               	incf	??_ldexp& (0+255),f,c
  3597  00171E  D001               	goto	u2968
  3598  001720                     u2960:
  3599  001720  6A4B               	clrf	??_ldexp& (0+255),c
  3600  001722                     u2968:
  3601  001722  504B               	movf	??_ldexp,w,c
  3602  001724  2649               	addwf	ldexp@newexp,f,c
  3603  001726  0E00               	movlw	0
  3604  001728  224A               	addwfc	ldexp@newexp+1,f,c
  3605  00172A  504A               	movf	ldexp@newexp+1,w,c
  3606  00172C  0A80               	xorlw	128
  3607  00172E  6EF3               	movwf	prodl,c
  3608  001730  0E80               	movlw	128
  3609  001732  5CF3               	subwf	prodl,w,c
  3610  001734  0E00               	movlw	0
  3611  001736  B4D8               	btfsc	status,2,c
  3612  001738  5C49               	subwf	ldexp@newexp,w,c
  3613  00173A  B0D8               	btfsc	status,0,c
  3614  00173C  D00C               	goto	l4877
  3615  00173E  0E00               	movlw	0
  3616  001740  0101               	movlb	1	; () banked
  3617  001742  6F23               	movwf	(_errno+1)& (0+255),b
  3618  001744  0E22               	movlw	34
  3619  001746  0101               	movlb	1	; () banked
  3620  001748  6F22               	movwf	_errno& (0+255),b
  3621  00174A                     L12:
  3622  00174A  0E00               	movlw	0
  3623  00174C  6E46               	movwf	?_ldexp,c
  3624  00174E  0E00               	movlw	0
  3625  001750  6E47               	movwf	?_ldexp+1,c
  3626  001752  0E00               	movlw	0
  3627  001754  D024               	goto	L14
  3628  001756                     l4877:
  3629  001756  504A               	movf	ldexp@newexp+1,w,c
  3630  001758  0A80               	xorlw	128
  3631  00175A  0F7F               	addlw	-129
  3632  00175C  0E00               	movlw	0
  3633  00175E  B4D8               	btfsc	status,2,c
  3634  001760  5C49               	subwf	ldexp@newexp,w,c
  3635  001762  A0D8               	btfss	status,0,c
  3636  001764  D01E               	goto	l4893
  3637  001766  0E00               	movlw	0
  3638  001768  0101               	movlb	1	; () banked
  3639  00176A  6F23               	movwf	(_errno+1)& (0+255),b
  3640  00176C  0E22               	movlw	34
  3641  00176E  0101               	movlb	1	; () banked
  3642  001770  6F22               	movwf	_errno& (0+255),b
  3643                           
  3644                           ; BSR set to: 1
  3645  001772  5048               	movf	ldexp@value+2,w,c
  3646  001774  0A80               	xorlw	128
  3647  001776  0F80               	addlw	128
  3648  001778  E105               	bnz	u2995
  3649  00177A  0E00               	movlw	0
  3650  00177C  5C47               	subwf	ldexp@value+1,w,c
  3651  00177E  E102               	bnz	u2995
  3652  001780  0E00               	movlw	0
  3653  001782  5C46               	subwf	ldexp@value,w,c
  3654  001784                     u2995:
  3655  001784  B0D8               	btfsc	status,0,c
  3656  001786  D006               	goto	l4889
  3657                           
  3658                           ; BSR set to: 1
  3659  001788  0EFF               	movlw	255
  3660  00178A  6E46               	movwf	?_ldexp,c
  3661  00178C  0E7F               	movlw	127
  3662  00178E  6E47               	movwf	?_ldexp+1,c
  3663  001790  0EFF               	movlw	255
  3664  001792  D005               	goto	L14
  3665  001794                     l4889:
  3666                           
  3667                           ; BSR set to: 1
  3668  001794  0EFF               	movlw	255
  3669  001796  6E46               	movwf	?_ldexp,c
  3670  001798  0E7F               	movlw	127
  3671  00179A  6E47               	movwf	?_ldexp+1,c
  3672  00179C  0E7F               	movlw	127
  3673  00179E                     L14:
  3674  00179E  6E48               	movwf	?_ldexp+2,c
  3675  0017A0  D01B               	goto	l2039
  3676  0017A2                     l4893:
  3677  0017A2  344A               	rlcf	ldexp@newexp+1,w,c
  3678  0017A4  304A               	rrcf	ldexp@newexp+1,w,c
  3679  0017A6  6E4C               	movwf	(??_ldexp+1)& (0+255),c
  3680  0017A8  3049               	rrcf	ldexp@newexp,w,c
  3681  0017AA  6E4B               	movwf	??_ldexp& (0+255),c
  3682  0017AC  5048               	movf	ldexp@value+2,w,c
  3683  0017AE  184B               	xorwf	??_ldexp,w,c
  3684  0017B0  0B80               	andlw	-128
  3685  0017B2  184B               	xorwf	??_ldexp,w,c
  3686  0017B4  6E48               	movwf	ldexp@value+2,c
  3687  0017B6  C049  F04B         	movff	ldexp@newexp,??_ldexp
  3688  0017BA  0E01               	movlw	1
  3689  0017BC  164B               	andwf	??_ldexp,f,c
  3690  0017BE  324B               	rrcf	??_ldexp,f,c
  3691  0017C0  324B               	rrcf	??_ldexp,f,c
  3692  0017C2  5047               	movf	ldexp@value+1,w,c
  3693  0017C4  184B               	xorwf	??_ldexp,w,c
  3694  0017C6  0B7F               	andlw	-129
  3695  0017C8  184B               	xorwf	??_ldexp,w,c
  3696  0017CA  6E47               	movwf	ldexp@value+1,c
  3697  0017CC  C046  F046         	movff	ldexp@value,?_ldexp
  3698  0017D0  C047  F047         	movff	ldexp@value+1,?_ldexp+1
  3699  0017D4  C048  F048         	movff	ldexp@value+2,?_ldexp+2
  3700  0017D8                     l2039:
  3701  0017D8  0012               	return	
  3702  0017DA  FFFF               	dw	65535	; errata NOP
  3703  0017DC                     __end_of_ldexp:
  3704                           	opt stack 0
  3705                           tblptru	equ	0xFF8
  3706                           prodh	equ	0xFF4
  3707                           prodl	equ	0xFF3
  3708                           postinc0	equ	0xFEE
  3709                           wreg	equ	0xFE8
  3710                           indf2	equ	0xFDF
  3711                           fsr2h	equ	0xFDA
  3712                           fsr2l	equ	0xFD9
  3713                           status	equ	0xFD8
  3714                           
  3715 ;; *************** function _floor *****************
  3716 ;; Defined at:
  3717 ;;		line 13 in file "/Applications/microchip/xc8/v1.32/sources/common/floor.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  x               3   57[COMRAM] int 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  i               3   60[COMRAM] int 
  3722 ;;  expon           2   63[COMRAM] int 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  3   57[COMRAM] int 
  3725 ;; Registers used:
  3726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3732 ;;      Params:         3       0       0       0       0       0       0
  3733 ;;      Locals:         5       0       0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0
  3735 ;;      Totals:         8       0       0       0       0       0       0
  3736 ;;Total ram usage:        8 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    2
  3739 ;; This function calls:
  3740 ;;		___altoft
  3741 ;;		___ftadd
  3742 ;;		___ftge
  3743 ;;		___fttol
  3744 ;;		_frexp
  3745 ;; This function is called by:
  3746 ;;		_exp
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text18
  3751  001502                     __ptext18:
  3752                           	opt stack 0
  3753  001502                     _floor:
  3754                           	opt stack 25
  3755                           
  3756                           ;incstack = 0
  3757  001502  FFFF               	dw	65535
  3758  001504  C03A  F001         	movff	floor@x,frexp@value
  3759  001508  C03B  F002         	movff	floor@x+1,frexp@value+1
  3760  00150C  C03C  F003         	movff	floor@x+2,frexp@value+2
  3761  001510  0E00               	movlw	high floor@expon
  3762  001512  6E05               	movwf	frexp@eptr+1,c
  3763  001514  0E40               	movlw	low floor@expon
  3764  001516  6E04               	movwf	frexp@eptr,c
  3765  001518  EC54  F00E         	call	_frexp	;wreg free
  3766  00151C  5041               	movf	floor@expon+1,w,c
  3767  00151E  0A80               	xorlw	128
  3768  001520  6EF3               	movwf	prodl,c
  3769  001522  0E80               	movlw	128
  3770  001524  5CF3               	subwf	prodl,w,c
  3771  001526  0E00               	movlw	0
  3772  001528  B4D8               	btfsc	status,2,c
  3773  00152A  5C40               	subwf	floor@expon,w,c
  3774  00152C  B0D8               	btfsc	status,0,c
  3775  00152E  D018               	goto	l4845
  3776  001530  503C               	movf	floor@x+2,w,c
  3777  001532  0A80               	xorlw	128
  3778  001534  0F80               	addlw	128
  3779  001536  E105               	bnz	u2915
  3780  001538  0E00               	movlw	0
  3781  00153A  5C3B               	subwf	floor@x+1,w,c
  3782  00153C  E102               	bnz	u2915
  3783  00153E  0E00               	movlw	0
  3784  001540  5C3A               	subwf	floor@x,w,c
  3785  001542                     u2915:
  3786  001542  B0D8               	btfsc	status,0,c
  3787  001544  D006               	goto	l4841
  3788  001546  0E00               	movlw	0
  3789  001548  6E3A               	movwf	?_floor,c
  3790  00154A  0E80               	movlw	128
  3791  00154C  6E3B               	movwf	?_floor+1,c
  3792  00154E  0EBF               	movlw	191
  3793  001550  D005               	goto	L15
  3794  001552                     l4841:
  3795  001552  0E00               	movlw	0
  3796  001554  6E3A               	movwf	?_floor,c
  3797  001556  0E00               	movlw	0
  3798  001558  6E3B               	movwf	?_floor+1,c
  3799  00155A  0E00               	movlw	0
  3800  00155C                     L15:
  3801  00155C  6E3C               	movwf	?_floor+2,c
  3802  00155E  D050               	goto	l2027
  3803  001560                     l4845:
  3804  001560  0E15               	movlw	21
  3805  001562  5C40               	subwf	floor@expon,w,c
  3806  001564  0E00               	movlw	0
  3807  001566  5841               	subwfb	floor@expon+1,w,c
  3808  001568  A0D8               	btfss	status,0,c
  3809  00156A  D007               	goto	l4849
  3810  00156C  C03A  F03A         	movff	floor@x,?_floor
  3811  001570  C03B  F03B         	movff	floor@x+1,?_floor+1
  3812  001574  C03C  F03C         	movff	floor@x+2,?_floor+2
  3813  001578  D043               	goto	l2027
  3814  00157A                     l4849:
  3815  00157A  C03A  F001         	movff	floor@x,___fttol@f1
  3816  00157E  C03B  F002         	movff	floor@x+1,___fttol@f1+1
  3817  001582  C03C  F003         	movff	floor@x+2,___fttol@f1+2
  3818  001586  EC40  F00D         	call	___fttol	;wreg free
  3819  00158A  C001  F010         	movff	?___fttol,___altoft@c
  3820  00158E  C002  F011         	movff	?___fttol+1,___altoft@c+1
  3821  001592  C003  F012         	movff	?___fttol+2,___altoft@c+2
  3822  001596  C004  F013         	movff	?___fttol+3,___altoft@c+3
  3823  00159A  ECE9  F00E         	call	___altoft	;wreg free
  3824  00159E  C010  F03D         	movff	?___altoft,floor@i
  3825  0015A2  C011  F03E         	movff	?___altoft+1,floor@i+1
  3826  0015A6  C012  F03F         	movff	?___altoft+2,floor@i+2
  3827  0015AA  C03A  F001         	movff	floor@x,___ftge@ff1
  3828  0015AE  C03B  F002         	movff	floor@x+1,___ftge@ff1+1
  3829  0015B2  C03C  F003         	movff	floor@x+2,___ftge@ff1+2
  3830  0015B6  C03D  F004         	movff	floor@i,___ftge@ff2
  3831  0015BA  C03E  F005         	movff	floor@i+1,___ftge@ff2+1
  3832  0015BE  C03F  F006         	movff	floor@i+2,___ftge@ff2+2
  3833  0015C2  EC9F  F00E         	call	___ftge	;wreg free
  3834  0015C6  B0D8               	btfsc	status,0,c
  3835  0015C8  D015               	goto	l2029
  3836  0015CA  C03D  F02E         	movff	floor@i,___ftadd@f1
  3837  0015CE  C03E  F02F         	movff	floor@i+1,___ftadd@f1+1
  3838  0015D2  C03F  F030         	movff	floor@i+2,___ftadd@f1+2
  3839  0015D6  0E00               	movlw	0
  3840  0015D8  6E31               	movwf	___ftadd@f2,c
  3841  0015DA  0E80               	movlw	128
  3842  0015DC  6E32               	movwf	___ftadd@f2+1,c
  3843  0015DE  0EBF               	movlw	191
  3844  0015E0  6E33               	movwf	___ftadd@f2+2,c
  3845  0015E2  ECAC  F007         	call	___ftadd	;wreg free
  3846  0015E6  C02E  F03A         	movff	?___ftadd,?_floor
  3847  0015EA  C02F  F03B         	movff	?___ftadd+1,?_floor+1
  3848  0015EE  C030  F03C         	movff	?___ftadd+2,?_floor+2
  3849  0015F2  D006               	goto	l2027
  3850  0015F4                     l2029:
  3851  0015F4  C03D  F03A         	movff	floor@i,?_floor
  3852  0015F8  C03E  F03B         	movff	floor@i+1,?_floor+1
  3853  0015FC  C03F  F03C         	movff	floor@i+2,?_floor+2
  3854  001600                     l2027:
  3855  001600  0012               	return	
  3856  001602  FFFF               	dw	65535	; errata NOP
  3857  001604                     __end_of_floor:
  3858                           	opt stack 0
  3859                           tblptru	equ	0xFF8
  3860                           prodh	equ	0xFF4
  3861                           prodl	equ	0xFF3
  3862                           postinc0	equ	0xFEE
  3863                           wreg	equ	0xFE8
  3864                           indf2	equ	0xFDF
  3865                           fsr2h	equ	0xFDA
  3866                           fsr2l	equ	0xFD9
  3867                           status	equ	0xFD8
  3868                           
  3869 ;; *************** function _frexp *****************
  3870 ;; Defined at:
  3871 ;;		line 254 in file "/Applications/microchip/xc8/v1.32/sources/common/frexp.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  value           3    0[COMRAM] int 
  3874 ;;  eptr            2    3[COMRAM] PTR int 
  3875 ;;		 -> log@exponent(2), floor@expon(2), 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  3    0[COMRAM] PTR int 
  3880 ;; Registers used:
  3881 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3887 ;;      Params:         5       0       0       0       0       0       0
  3888 ;;      Locals:         0       0       0       0       0       0       0
  3889 ;;      Temps:          2       0       0       0       0       0       0
  3890 ;;      Totals:         7       0       0       0       0       0       0
  3891 ;;Total ram usage:        7 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_floor
  3897 ;;		_log
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text19
  3902  001CA8                     __ptext19:
  3903                           	opt stack 0
  3904  001CA8                     _frexp:
  3905                           	opt stack 27
  3906                           
  3907                           ;incstack = 0
  3908  001CA8  FFFF               	dw	65535
  3909  001CAA  0E7F               	movlw	127
  3910  001CAC  1403               	andwf	frexp@value+2,w,c
  3911  001CAE  1002               	iorwf	frexp@value+1,w,c
  3912  001CB0  1001               	iorwf	frexp@value,w,c
  3913  001CB2  A4D8               	btfss	status,2,c
  3914  001CB4  D00F               	goto	l4703
  3915  001CB6  C004  FFD9         	movff	frexp@eptr,fsr2l
  3916  001CBA  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3917  001CBE  0E00               	movlw	0
  3918  001CC0  6EDE               	movwf	postinc2,c
  3919  001CC2  0E00               	movlw	0
  3920  001CC4  6EDD               	movwf	postdec2,c
  3921  001CC6  0E00               	movlw	0
  3922  001CC8  6E01               	movwf	?_frexp,c
  3923  001CCA  0E00               	movlw	0
  3924  001CCC  6E02               	movwf	?_frexp+1,c
  3925  001CCE  0E00               	movlw	0
  3926  001CD0  6E03               	movwf	?_frexp+2,c
  3927  001CD2  D033               	goto	l2035
  3928  001CD4                     l4703:
  3929  001CD4  5003               	movf	frexp@value+2,w,c
  3930  001CD6  0B7F               	andlw	127
  3931  001CD8  6E06               	movwf	??_frexp& (0+255),c
  3932  001CDA  6A07               	clrf	(??_frexp+1)& (0+255),c
  3933  001CDC  90D8               	bcf	status,0,c
  3934  001CDE  3606               	rlcf	??_frexp,f,c
  3935  001CE0  3607               	rlcf	??_frexp+1,f,c
  3936  001CE2  C004  FFD9         	movff	frexp@eptr,fsr2l
  3937  001CE6  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3938  001CEA  C006  FFDE         	movff	??_frexp,postinc2
  3939  001CEE  C007  FFDD         	movff	??_frexp+1,postdec2
  3940  001CF2  AE02               	btfss	frexp@value+1,7,c
  3941  001CF4  D003               	goto	u2710
  3942  001CF6  6A06               	clrf	??_frexp& (0+255),c
  3943  001CF8  2A06               	incf	??_frexp& (0+255),f,c
  3944  001CFA  D001               	goto	u2718
  3945  001CFC                     u2710:
  3946  001CFC  6A06               	clrf	??_frexp& (0+255),c
  3947  001CFE                     u2718:
  3948  001CFE  5006               	movf	??_frexp,w,c
  3949  001D00  C004  FFD9         	movff	frexp@eptr,fsr2l
  3950  001D04  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3951  001D08  12DE               	iorwf	postinc2,f,c
  3952  001D0A  0E00               	movlw	0
  3953  001D0C  12DD               	iorwf	postdec2,f,c
  3954  001D0E  C004  FFD9         	movff	frexp@eptr,fsr2l
  3955  001D12  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3956  001D16  0E82               	movlw	130
  3957  001D18  26DE               	addwf	postinc2,f,c
  3958  001D1A  0EFF               	movlw	255
  3959  001D1C  22DD               	addwfc	postdec2,f,c
  3960  001D1E  8003               	bsf	frexp@value+2,0,c
  3961  001D20  8203               	bsf	frexp@value+2,1,c
  3962  001D22  8403               	bsf	frexp@value+2,2,c
  3963  001D24  8603               	bsf	frexp@value+2,3,c
  3964  001D26  8803               	bsf	frexp@value+2,4,c
  3965  001D28  8A03               	bsf	frexp@value+2,5,c
  3966  001D2A  9C03               	bcf	frexp@value+2,6,c
  3967  001D2C  9E02               	bcf	frexp@value+1,7,c
  3968  001D2E  C001  F001         	movff	frexp@value,?_frexp
  3969  001D32  C002  F002         	movff	frexp@value+1,?_frexp+1
  3970  001D36  C003  F003         	movff	frexp@value+2,?_frexp+2
  3971  001D3A                     l2035:
  3972  001D3A  0012               	return	
  3973  001D3C  FFFF               	dw	65535	; errata NOP
  3974  001D3E                     __end_of_frexp:
  3975                           	opt stack 0
  3976                           tblptru	equ	0xFF8
  3977                           prodh	equ	0xFF4
  3978                           prodl	equ	0xFF3
  3979                           postinc0	equ	0xFEE
  3980                           wreg	equ	0xFE8
  3981                           indf2	equ	0xFDF
  3982                           postinc2	equ	0xFDE
  3983                           postdec2	equ	0xFDD
  3984                           fsr2h	equ	0xFDA
  3985                           fsr2l	equ	0xFD9
  3986                           status	equ	0xFD8
  3987                           
  3988 ;; *************** function ___fttol *****************
  3989 ;; Defined at:
  3990 ;;		line 44 in file "/Applications/microchip/xc8/v1.32/sources/common/fttol.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  f1              3    0[COMRAM] float 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  lval            4   10[COMRAM] unsigned long 
  3995 ;;  exp1            1   14[COMRAM] unsigned char 
  3996 ;;  sign1           1    9[COMRAM] unsigned char 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  4    0[COMRAM] long 
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, status,0
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4006 ;;      Params:         4       0       0       0       0       0       0
  4007 ;;      Locals:         6       0       0       0       0       0       0
  4008 ;;      Temps:          5       0       0       0       0       0       0
  4009 ;;      Totals:        15       0       0       0       0       0       0
  4010 ;;Total ram usage:       15 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_pow
  4016 ;;		_exp
  4017 ;;		_floor
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text20
  4022  001A80                     __ptext20:
  4023                           	opt stack 0
  4024  001A80                     ___fttol:
  4025                           	opt stack 26
  4026                           
  4027                           ;incstack = 0
  4028  001A80  FFFF               	dw	65535
  4029  001A82  C003  F005         	movff	___fttol@f1+2,??___fttol
  4030  001A86  6A06               	clrf	(??___fttol+1)& (0+255),c
  4031  001A88  6A07               	clrf	(??___fttol+2)& (0+255),c
  4032  001A8A  3402               	rlcf	___fttol@f1+1,w,c
  4033  001A8C  3605               	rlcf	??___fttol& (0+255),f,c
  4034  001A8E  E301               	bnc	u2621
  4035  001A90  8006               	bsf	(??___fttol+1)& (0+255),0,c
  4036  001A92                     u2621:
  4037  001A92  5005               	movf	??___fttol,w,c
  4038  001A94  6E0F               	movwf	___fttol@exp1,c
  4039  001A96  660F               	tstfsz	___fttol@exp1& (0+255),c
  4040  001A98  D001               	goto	l4655
  4041  001A9A  D038               	goto	u2670
  4042  001A9C                     l4655:
  4043  001A9C  0E17               	movlw	23
  4044  001A9E  6E05               	movwf	??___fttol& (0+255),c
  4045  001AA0  C001  F006         	movff	___fttol@f1,??___fttol+1
  4046  001AA4  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  4047  001AA8  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  4048  001AAC  2805               	incf	??___fttol,w,c
  4049  001AAE  6E09               	movwf	(??___fttol+4)& (0+255),c
  4050  001AB0  D004               	goto	u2640
  4051  001AB2                     u2645:
  4052  001AB2  90D8               	bcf	status,0,c
  4053  001AB4  3208               	rrcf	??___fttol+3,f,c
  4054  001AB6  3207               	rrcf	??___fttol+2,f,c
  4055  001AB8  3206               	rrcf	??___fttol+1,f,c
  4056  001ABA                     u2640:
  4057  001ABA  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  4058  001ABC  D7FA               	goto	u2645
  4059  001ABE  5006               	movf	??___fttol+1,w,c
  4060  001AC0  6E0A               	movwf	___fttol@sign1,c
  4061  001AC2  8E02               	bsf	___fttol@f1+1,7,c
  4062  001AC4  0EFF               	movlw	255
  4063  001AC6  1601               	andwf	___fttol@f1,f,c
  4064  001AC8  0EFF               	movlw	255
  4065  001ACA  1602               	andwf	___fttol@f1+1,f,c
  4066  001ACC  0E00               	movlw	0
  4067  001ACE  1603               	andwf	___fttol@f1+2,f,c
  4068  001AD0  5001               	movf	___fttol@f1,w,c
  4069  001AD2  6E0B               	movwf	___fttol@lval,c
  4070  001AD4  5002               	movf	___fttol@f1+1,w,c
  4071  001AD6  6E0C               	movwf	___fttol@lval+1,c
  4072  001AD8  5003               	movf	___fttol@f1+2,w,c
  4073  001ADA  6E0D               	movwf	___fttol@lval+2,c
  4074  001ADC  6A0E               	clrf	___fttol@lval+3,c
  4075  001ADE  0E8E               	movlw	142
  4076  001AE0  5E0F               	subwf	___fttol@exp1,f,c
  4077  001AE2  AE0F               	btfss	___fttol@exp1,7,c
  4078  001AE4  D010               	goto	l4677
  4079  001AE6  500F               	movf	___fttol@exp1,w,c
  4080  001AE8  0A80               	xorlw	128
  4081  001AEA  6E05               	movwf	??___fttol& (0+255),c
  4082  001AEC  0EF1               	movlw	241
  4083  001AEE  0A80               	xorlw	128
  4084  001AF0  5C05               	subwf	??___fttol,w,c
  4085  001AF2  A0D8               	btfss	status,0,c
  4086  001AF4  D00B               	goto	u2670
  4087  001AF6                     l4673:
  4088  001AF6  90D8               	bcf	status,0,c
  4089  001AF8  320E               	rrcf	___fttol@lval+3,f,c
  4090  001AFA  320D               	rrcf	___fttol@lval+2,f,c
  4091  001AFC  320C               	rrcf	___fttol@lval+1,f,c
  4092  001AFE  320B               	rrcf	___fttol@lval,f,c
  4093  001B00  3E0F               	incfsz	___fttol@exp1,f,c
  4094  001B02  D7F9               	goto	l4673
  4095  001B04  D014               	goto	l4687
  4096  001B06                     l4677:
  4097  001B06  0E17               	movlw	23
  4098  001B08  640F               	cpfsgt	___fttol@exp1,c
  4099  001B0A  D00F               	goto	l4685
  4100  001B0C                     u2670:
  4101  001B0C  0E00               	movlw	0
  4102  001B0E  6E01               	movwf	?___fttol,c
  4103  001B10  0E00               	movlw	0
  4104  001B12  6E02               	movwf	?___fttol+1,c
  4105  001B14  0E00               	movlw	0
  4106  001B16  6E03               	movwf	?___fttol+2,c
  4107  001B18  0E00               	movlw	0
  4108  001B1A  6E04               	movwf	?___fttol+3,c
  4109  001B1C  D01B               	goto	l1855
  4110  001B1E                     l4683:
  4111  001B1E  90D8               	bcf	status,0,c
  4112  001B20  360B               	rlcf	___fttol@lval,f,c
  4113  001B22  360C               	rlcf	___fttol@lval+1,f,c
  4114  001B24  360D               	rlcf	___fttol@lval+2,f,c
  4115  001B26  360E               	rlcf	___fttol@lval+3,f,c
  4116  001B28  060F               	decf	___fttol@exp1,f,c
  4117  001B2A                     l4685:
  4118  001B2A  660F               	tstfsz	___fttol@exp1,c
  4119  001B2C  D7F8               	goto	l4683
  4120  001B2E                     l4687:
  4121  001B2E  500A               	movf	___fttol@sign1,w,c
  4122  001B30  B4D8               	btfsc	status,2,c
  4123  001B32  D008               	goto	l4691
  4124  001B34  1E0E               	comf	___fttol@lval+3,f,c
  4125  001B36  1E0D               	comf	___fttol@lval+2,f,c
  4126  001B38  1E0C               	comf	___fttol@lval+1,f,c
  4127  001B3A  6C0B               	negf	___fttol@lval,c
  4128  001B3C  0E00               	movlw	0
  4129  001B3E  220C               	addwfc	___fttol@lval+1,f,c
  4130  001B40  220D               	addwfc	___fttol@lval+2,f,c
  4131  001B42  220E               	addwfc	___fttol@lval+3,f,c
  4132  001B44                     l4691:
  4133  001B44  C00B  F001         	movff	___fttol@lval,?___fttol
  4134  001B48  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  4135  001B4C  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  4136  001B50  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  4137  001B54                     l1855:
  4138  001B54  0012               	return	
  4139  001B56  FFFF               	dw	65535	; errata NOP
  4140  001B58                     __end_of___fttol:
  4141                           	opt stack 0
  4142                           tblptru	equ	0xFF8
  4143                           prodh	equ	0xFF4
  4144                           prodl	equ	0xFF3
  4145                           postinc0	equ	0xFEE
  4146                           wreg	equ	0xFE8
  4147                           indf2	equ	0xFDF
  4148                           postinc2	equ	0xFDE
  4149                           postdec2	equ	0xFDD
  4150                           fsr2h	equ	0xFDA
  4151                           fsr2l	equ	0xFD9
  4152                           status	equ	0xFD8
  4153                           
  4154 ;; *************** function ___ftge *****************
  4155 ;; Defined at:
  4156 ;;		line 4 in file "/Applications/microchip/xc8/v1.32/sources/common/ftge.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  ff1             3    0[COMRAM] float 
  4159 ;;  ff2             3    3[COMRAM] float 
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;		None               void
  4164 ;; Registers used:
  4165 ;;		wreg, status,2, status,0
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4171 ;;      Params:         6       0       0       0       0       0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0
  4173 ;;      Temps:          3       0       0       0       0       0       0
  4174 ;;      Totals:         9       0       0       0       0       0       0
  4175 ;;Total ram usage:        9 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; This function calls:
  4178 ;;		Nothing
  4179 ;; This function is called by:
  4180 ;;		_pow
  4181 ;;		_exp
  4182 ;;		_floor
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text21
  4187  001D3E                     __ptext21:
  4188                           	opt stack 0
  4189  001D3E                     ___ftge:
  4190                           	opt stack 26
  4191                           
  4192                           ;incstack = 0
  4193  001D3E  FFFF               	dw	65535
  4194  001D40  AE03               	btfss	___ftge@ff1+2,7,c
  4195  001D42  D016               	goto	l4635
  4196  001D44  C001  F007         	movff	___ftge@ff1,??___ftge
  4197  001D48  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4198  001D4C  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4199  001D50  1E07               	comf	??___ftge,f,c
  4200  001D52  1E08               	comf	??___ftge+1,f,c
  4201  001D54  1E09               	comf	??___ftge+2,f,c
  4202  001D56  2A07               	incf	??___ftge,f,c
  4203  001D58  0E00               	movlw	0
  4204  001D5A  2208               	addwfc	??___ftge+1,f,c
  4205  001D5C  2209               	addwfc	??___ftge+2,f,c
  4206  001D5E  0E00               	movlw	0
  4207  001D60  2407               	addwf	??___ftge,w,c
  4208  001D62  6E01               	movwf	___ftge@ff1,c
  4209  001D64  0E00               	movlw	0
  4210  001D66  2008               	addwfc	??___ftge+1,w,c
  4211  001D68  6E02               	movwf	___ftge@ff1+1,c
  4212  001D6A  0E80               	movlw	128
  4213  001D6C  2009               	addwfc	??___ftge+2,w,c
  4214  001D6E  6E03               	movwf	___ftge@ff1+2,c
  4215  001D70                     l4635:
  4216  001D70  AE06               	btfss	___ftge@ff2+2,7,c
  4217  001D72  D016               	goto	l4639
  4218  001D74  C004  F007         	movff	___ftge@ff2,??___ftge
  4219  001D78  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4220  001D7C  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4221  001D80  1E07               	comf	??___ftge,f,c
  4222  001D82  1E08               	comf	??___ftge+1,f,c
  4223  001D84  1E09               	comf	??___ftge+2,f,c
  4224  001D86  2A07               	incf	??___ftge,f,c
  4225  001D88  0E00               	movlw	0
  4226  001D8A  2208               	addwfc	??___ftge+1,f,c
  4227  001D8C  2209               	addwfc	??___ftge+2,f,c
  4228  001D8E  0E00               	movlw	0
  4229  001D90  2407               	addwf	??___ftge,w,c
  4230  001D92  6E04               	movwf	___ftge@ff2,c
  4231  001D94  0E00               	movlw	0
  4232  001D96  2008               	addwfc	??___ftge+1,w,c
  4233  001D98  6E05               	movwf	___ftge@ff2+1,c
  4234  001D9A  0E80               	movlw	128
  4235  001D9C  2009               	addwfc	??___ftge+2,w,c
  4236  001D9E  6E06               	movwf	___ftge@ff2+2,c
  4237  001DA0                     l4639:
  4238  001DA0  0E00               	movlw	0
  4239  001DA2  1A01               	xorwf	___ftge@ff1,f,c
  4240  001DA4  0E00               	movlw	0
  4241  001DA6  1A02               	xorwf	___ftge@ff1+1,f,c
  4242  001DA8  0E80               	movlw	128
  4243  001DAA  1A03               	xorwf	___ftge@ff1+2,f,c
  4244  001DAC  0E00               	movlw	0
  4245  001DAE  1A04               	xorwf	___ftge@ff2,f,c
  4246  001DB0  0E00               	movlw	0
  4247  001DB2  1A05               	xorwf	___ftge@ff2+1,f,c
  4248  001DB4  0E80               	movlw	128
  4249  001DB6  1A06               	xorwf	___ftge@ff2+2,f,c
  4250  001DB8  5004               	movf	___ftge@ff2,w,c
  4251  001DBA  5C01               	subwf	___ftge@ff1,w,c
  4252  001DBC  5005               	movf	___ftge@ff2+1,w,c
  4253  001DBE  5802               	subwfb	___ftge@ff1+1,w,c
  4254  001DC0  5006               	movf	___ftge@ff2+2,w,c
  4255  001DC2  5803               	subwfb	___ftge@ff1+2,w,c
  4256  001DC4  B0D8               	btfsc	status,0,c
  4257  001DC6  D002               	goto	l4645
  4258  001DC8  90D8               	bcf	status,0,c
  4259  001DCA  D001               	goto	l1829
  4260  001DCC                     l4645:
  4261  001DCC  80D8               	bsf	status,0,c
  4262  001DCE                     l1829:
  4263  001DCE  0012               	return	
  4264  001DD0  FFFF               	dw	65535	; errata NOP
  4265  001DD2                     __end_of___ftge:
  4266                           	opt stack 0
  4267                           tblptru	equ	0xFF8
  4268                           prodh	equ	0xFF4
  4269                           prodl	equ	0xFF3
  4270                           postinc0	equ	0xFEE
  4271                           wreg	equ	0xFE8
  4272                           indf2	equ	0xFDF
  4273                           postinc2	equ	0xFDE
  4274                           postdec2	equ	0xFDD
  4275                           fsr2h	equ	0xFDA
  4276                           fsr2l	equ	0xFD9
  4277                           status	equ	0xFD8
  4278                           
  4279 ;; *************** function ___altoft *****************
  4280 ;; Defined at:
  4281 ;;		line 42 in file "/Applications/microchip/xc8/v1.32/sources/common/altoft.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  c               4   15[COMRAM] long 
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;  sign            1   24[COMRAM] unsigned char 
  4286 ;;  exp             1   23[COMRAM] unsigned char 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  3   15[COMRAM] float 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4296 ;;      Params:         4       0       0       0       0       0       0
  4297 ;;      Locals:         2       0       0       0       0       0       0
  4298 ;;      Temps:          4       0       0       0       0       0       0
  4299 ;;      Totals:        10       0       0       0       0       0       0
  4300 ;;Total ram usage:       10 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    1
  4303 ;; This function calls:
  4304 ;;		___ftpack
  4305 ;; This function is called by:
  4306 ;;		_floor
  4307 ;;		_MS_5803_readSensor
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text22
  4312  001DD2                     __ptext22:
  4313                           	opt stack 0
  4314  001DD2                     ___altoft:
  4315                           	opt stack 25
  4316                           
  4317                           ;incstack = 0
  4318  001DD2  FFFF               	dw	65535
  4319  001DD4  0E00               	movlw	0
  4320  001DD6  6E19               	movwf	___altoft@sign,c
  4321  001DD8  0E8E               	movlw	142
  4322  001DDA  6E18               	movwf	___altoft@exp,c
  4323  001DDC  5013               	movf	___altoft@c+3,w,c
  4324  001DDE  0A80               	xorlw	128
  4325  001DE0  0F80               	addlw	128
  4326  001DE2  E108               	bnz	u2305
  4327  001DE4  0E00               	movlw	0
  4328  001DE6  5C12               	subwf	___altoft@c+2,w,c
  4329  001DE8  E105               	bnz	u2305
  4330  001DEA  0E00               	movlw	0
  4331  001DEC  5C11               	subwf	___altoft@c+1,w,c
  4332  001DEE  E102               	bnz	u2305
  4333  001DF0  0E00               	movlw	0
  4334  001DF2  5C10               	subwf	___altoft@c,w,c
  4335  001DF4                     u2305:
  4336  001DF4  B0D8               	btfsc	status,0,c
  4337  001DF6  D011               	goto	l4507
  4338  001DF8  1E13               	comf	___altoft@c+3,f,c
  4339  001DFA  1E12               	comf	___altoft@c+2,f,c
  4340  001DFC  1E11               	comf	___altoft@c+1,f,c
  4341  001DFE  6C10               	negf	___altoft@c,c
  4342  001E00  0E00               	movlw	0
  4343  001E02  2211               	addwfc	___altoft@c+1,f,c
  4344  001E04  2212               	addwfc	___altoft@c+2,f,c
  4345  001E06  2213               	addwfc	___altoft@c+3,f,c
  4346  001E08  0E01               	movlw	1
  4347  001E0A  6E19               	movwf	___altoft@sign,c
  4348  001E0C  D006               	goto	l4507
  4349  001E0E                     l4505:
  4350  001E0E  90D8               	bcf	status,0,c
  4351  001E10  3213               	rrcf	___altoft@c+3,f,c
  4352  001E12  3212               	rrcf	___altoft@c+2,f,c
  4353  001E14  3211               	rrcf	___altoft@c+1,f,c
  4354  001E16  3210               	rrcf	___altoft@c,f,c
  4355  001E18  2A18               	incf	___altoft@exp,f,c
  4356  001E1A                     l4507:
  4357  001E1A  0E00               	movlw	0
  4358  001E1C  1410               	andwf	___altoft@c,w,c
  4359  001E1E  6E14               	movwf	??___altoft& (0+255),c
  4360  001E20  0E00               	movlw	0
  4361  001E22  1411               	andwf	___altoft@c+1,w,c
  4362  001E24  6E15               	movwf	(??___altoft+1)& (0+255),c
  4363  001E26  0E00               	movlw	0
  4364  001E28  1412               	andwf	___altoft@c+2,w,c
  4365  001E2A  6E16               	movwf	(??___altoft+2)& (0+255),c
  4366  001E2C  0EFF               	movlw	255
  4367  001E2E  1413               	andwf	___altoft@c+3,w,c
  4368  001E30  6E17               	movwf	(??___altoft+3)& (0+255),c
  4369  001E32  5017               	movf	??___altoft+3,w,c
  4370  001E34  1014               	iorwf	??___altoft,w,c
  4371  001E36  1015               	iorwf	??___altoft+1,w,c
  4372  001E38  1016               	iorwf	??___altoft+2,w,c
  4373  001E3A  A4D8               	btfss	status,2,c
  4374  001E3C  D7E8               	goto	l4505
  4375  001E3E  C010  F001         	movff	___altoft@c,___ftpack@arg
  4376  001E42  C011  F002         	movff	___altoft@c+1,___ftpack@arg+1
  4377  001E46  C012  F003         	movff	___altoft@c+2,___ftpack@arg+2
  4378  001E4A  C018  F004         	movff	___altoft@exp,___ftpack@exp
  4379  001E4E  C019  F005         	movff	___altoft@sign,___ftpack@sign
  4380  001E52  ECAC  F00D         	call	___ftpack	;wreg free
  4381  001E56  C001  F010         	movff	?___ftpack,?___altoft
  4382  001E5A  C002  F011         	movff	?___ftpack+1,?___altoft+1
  4383  001E5E  C003  F012         	movff	?___ftpack+2,?___altoft+2
  4384  001E62  0012               	return	
  4385  001E64  FFFF               	dw	65535	; errata NOP
  4386  001E66                     __end_of___altoft:
  4387                           	opt stack 0
  4388                           tblptru	equ	0xFF8
  4389                           prodh	equ	0xFF4
  4390                           prodl	equ	0xFF3
  4391                           postinc0	equ	0xFEE
  4392                           wreg	equ	0xFE8
  4393                           indf2	equ	0xFDF
  4394                           postinc2	equ	0xFDE
  4395                           postdec2	equ	0xFDD
  4396                           fsr2h	equ	0xFDA
  4397                           fsr2l	equ	0xFD9
  4398                           status	equ	0xFD8
  4399                           
  4400 ;; *************** function _eval_poly *****************
  4401 ;; Defined at:
  4402 ;;		line 4 in file "/Applications/microchip/xc8/v1.32/sources/common/evalpoly.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  x               3   57[COMRAM] float 
  4405 ;;  d               2   60[COMRAM] PTR const 
  4406 ;;		 -> log@coeff(27), exp@coeff(30), 
  4407 ;;  n               2   62[COMRAM] int 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;  res             3   66[COMRAM] int 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  3   57[COMRAM] int 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4419 ;;      Params:         7       0       0       0       0       0       0
  4420 ;;      Locals:         3       0       0       0       0       0       0
  4421 ;;      Temps:          2       0       0       0       0       0       0
  4422 ;;      Totals:        12       0       0       0       0       0       0
  4423 ;;Total ram usage:       12 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    2
  4426 ;; This function calls:
  4427 ;;		___ftadd
  4428 ;;		___ftmul
  4429 ;;		___wmul
  4430 ;; This function is called by:
  4431 ;;		_exp
  4432 ;;		_log
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           	psect	text23
  4437  0018C4                     __ptext23:
  4438                           	opt stack 0
  4439  0018C4                     _eval_poly:
  4440                           	opt stack 25
  4441                           
  4442                           ;incstack = 0
  4443  0018C4  FFFF               	dw	65535
  4444  0018C6  C03F  F001         	movff	eval_poly@n,___wmul@multiplier
  4445  0018CA  C040  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  4446  0018CE  0E00               	movlw	0
  4447  0018D0  6E04               	movwf	___wmul@multiplicand+1,c
  4448  0018D2  0E03               	movlw	3
  4449  0018D4  6E03               	movwf	___wmul@multiplicand,c
  4450  0018D6  EC6F  F011         	call	___wmul	;wreg free
  4451  0018DA  C03D  F041         	movff	eval_poly@d,??_eval_poly
  4452  0018DE  C03E  F042         	movff	eval_poly@d+1,??_eval_poly+1
  4453  0018E2  5001               	movf	?___wmul,w,c
  4454  0018E4  2641               	addwf	??_eval_poly,f,c
  4455  0018E6  5002               	movf	?___wmul+1,w,c
  4456  0018E8  2242               	addwfc	??_eval_poly+1,f,c
  4457  0018EA  C041  FFF6         	movff	??_eval_poly,tblptrl
  4458  0018EE  C042  FFF7         	movff	??_eval_poly+1,tblptrh
  4459  0018F2                     	if	0	;tblptru may be non-zero
  4460  0018F2                     	endif
  4461  0018F2                     	if	0	;tblptru may be non-zero
  4462  0018F2                     	endif
  4463  0018F2  0009               	tblrd		*+
  4464  0018F4  FFFF               	dw	65535	; errata NOP
  4465  0018F6  CFF5 F043          	movff	tablat,eval_poly@res
  4466  0018FA  0009               	tblrd		*+
  4467  0018FC  FFFF               	dw	65535	; errata NOP
  4468  0018FE  CFF5 F044          	movff	tablat,eval_poly@res+1
  4469  001902  000A               	tblrd		*-
  4470  001904  FFFF               	dw	65535	; errata NOP
  4471  001906  CFF5 F045          	movff	tablat,eval_poly@res+2
  4472  00190A  D041               	goto	l4859
  4473  00190C                     l4857:
  4474  00190C  C043  F01F         	movff	eval_poly@res,___ftmul@f2
  4475  001910  C044  F020         	movff	eval_poly@res+1,___ftmul@f2+1
  4476  001914  C045  F021         	movff	eval_poly@res+2,___ftmul@f2+2
  4477  001918  C03A  F01C         	movff	eval_poly@x,___ftmul@f1
  4478  00191C  C03B  F01D         	movff	eval_poly@x+1,___ftmul@f1+1
  4479  001920  C03C  F01E         	movff	eval_poly@x+2,___ftmul@f1+2
  4480  001924  ECEE  F00B         	call	___ftmul	;wreg free
  4481  001928  C01C  F02E         	movff	?___ftmul,___ftadd@f1
  4482  00192C  C01D  F02F         	movff	?___ftmul+1,___ftadd@f1+1
  4483  001930  C01E  F030         	movff	?___ftmul+2,___ftadd@f1+2
  4484  001934  0E00               	movlw	0
  4485  001936  6E04               	movwf	___wmul@multiplicand+1,c
  4486  001938  0E03               	movlw	3
  4487  00193A  6E03               	movwf	___wmul@multiplicand,c
  4488  00193C  063F               	decf	eval_poly@n,f,c
  4489  00193E  A0D8               	btfss	status,0,c
  4490  001940  0640               	decf	eval_poly@n+1,f,c
  4491  001942  C03F  F001         	movff	eval_poly@n,___wmul@multiplier
  4492  001946  C040  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  4493  00194A  EC6F  F011         	call	___wmul	;wreg free
  4494  00194E  C03D  F041         	movff	eval_poly@d,??_eval_poly
  4495  001952  C03E  F042         	movff	eval_poly@d+1,??_eval_poly+1
  4496  001956  5001               	movf	?___wmul,w,c
  4497  001958  2641               	addwf	??_eval_poly,f,c
  4498  00195A  5002               	movf	?___wmul+1,w,c
  4499  00195C  2242               	addwfc	??_eval_poly+1,f,c
  4500  00195E  C041  FFF6         	movff	??_eval_poly,tblptrl
  4501  001962  C042  FFF7         	movff	??_eval_poly+1,tblptrh
  4502  001966                     	if	0	;tblptru may be non-zero
  4503  001966                     	endif
  4504  001966                     	if	0	;tblptru may be non-zero
  4505  001966                     	endif
  4506  001966  0009               	tblrd		*+
  4507  001968  FFFF               	dw	65535	; errata NOP
  4508  00196A  CFF5 F031          	movff	tablat,___ftadd@f2
  4509  00196E  0009               	tblrd		*+
  4510  001970  FFFF               	dw	65535	; errata NOP
  4511  001972  CFF5 F032          	movff	tablat,___ftadd@f2+1
  4512  001976  000A               	tblrd		*-
  4513  001978  FFFF               	dw	65535	; errata NOP
  4514  00197A  CFF5 F033          	movff	tablat,___ftadd@f2+2
  4515  00197E  ECAC  F007         	call	___ftadd	;wreg free
  4516  001982  C02E  F043         	movff	?___ftadd,eval_poly@res
  4517  001986  C02F  F044         	movff	?___ftadd+1,eval_poly@res+1
  4518  00198A  C030  F045         	movff	?___ftadd+2,eval_poly@res+2
  4519  00198E                     l4859:
  4520  00198E  5040               	movf	eval_poly@n+1,w,c
  4521  001990  103F               	iorwf	eval_poly@n,w,c
  4522  001992  A4D8               	btfss	status,2,c
  4523  001994  D7BB               	goto	l4857
  4524  001996  C043  F03A         	movff	eval_poly@res,?_eval_poly
  4525  00199A  C044  F03B         	movff	eval_poly@res+1,?_eval_poly+1
  4526  00199E  C045  F03C         	movff	eval_poly@res+2,?_eval_poly+2
  4527  0019A2  0012               	return	
  4528  0019A4  FFFF               	dw	65535	; errata NOP
  4529  0019A6                     __end_of_eval_poly:
  4530                           	opt stack 0
  4531                           tblptru	equ	0xFF8
  4532                           tblptrh	equ	0xFF7
  4533                           tblptrl	equ	0xFF6
  4534                           tablat	equ	0xFF5
  4535                           prodh	equ	0xFF4
  4536                           prodl	equ	0xFF3
  4537                           postinc0	equ	0xFEE
  4538                           wreg	equ	0xFE8
  4539                           indf2	equ	0xFDF
  4540                           postinc2	equ	0xFDE
  4541                           postdec2	equ	0xFDD
  4542                           fsr2h	equ	0xFDA
  4543                           fsr2l	equ	0xFD9
  4544                           status	equ	0xFD8
  4545                           
  4546 ;; *************** function ___ftsub *****************
  4547 ;; Defined at:
  4548 ;;		line 20 in file "/Applications/microchip/xc8/v1.32/sources/common/ftsub.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  f1              3   57[COMRAM] float 
  4551 ;;  f2              3   60[COMRAM] float 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  3   57[COMRAM] float 
  4556 ;; Registers used:
  4557 ;;		wreg, status,2, status,0, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4563 ;;      Params:         6       0       0       0       0       0       0
  4564 ;;      Locals:         0       0       0       0       0       0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0
  4566 ;;      Totals:         6       0       0       0       0       0       0
  4567 ;;Total ram usage:        6 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    2
  4570 ;; This function calls:
  4571 ;;		___ftadd
  4572 ;; This function is called by:
  4573 ;;		_exp
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text24
  4578  0021F8                     __ptext24:
  4579                           	opt stack 0
  4580  0021F8                     ___ftsub:
  4581                           	opt stack 25
  4582                           
  4583                           ;incstack = 0
  4584  0021F8  FFFF               	dw	65535
  4585  0021FA  0E00               	movlw	0
  4586  0021FC  1A3D               	xorwf	___ftsub@f2,f,c
  4587  0021FE  0E00               	movlw	0
  4588  002200  1A3E               	xorwf	___ftsub@f2+1,f,c
  4589  002202  0E80               	movlw	128
  4590  002204  1A3F               	xorwf	___ftsub@f2+2,f,c
  4591  002206  C03A  F02E         	movff	___ftsub@f1,___ftadd@f1
  4592  00220A  C03B  F02F         	movff	___ftsub@f1+1,___ftadd@f1+1
  4593  00220E  C03C  F030         	movff	___ftsub@f1+2,___ftadd@f1+2
  4594  002212  C03D  F031         	movff	___ftsub@f2,___ftadd@f2
  4595  002216  C03E  F032         	movff	___ftsub@f2+1,___ftadd@f2+1
  4596  00221A  C03F  F033         	movff	___ftsub@f2+2,___ftadd@f2+2
  4597  00221E  ECAC  F007         	call	___ftadd	;wreg free
  4598  002222  C02E  F03A         	movff	?___ftadd,?___ftsub
  4599  002226  C02F  F03B         	movff	?___ftadd+1,?___ftsub+1
  4600  00222A  C030  F03C         	movff	?___ftadd+2,?___ftsub+2
  4601  00222E  0012               	return	
  4602  002230  FFFF               	dw	65535	; errata NOP
  4603  002232                     __end_of___ftsub:
  4604                           	opt stack 0
  4605                           tblptru	equ	0xFF8
  4606                           tblptrh	equ	0xFF7
  4607                           tblptrl	equ	0xFF6
  4608                           tablat	equ	0xFF5
  4609                           prodh	equ	0xFF4
  4610                           prodl	equ	0xFF3
  4611                           postinc0	equ	0xFEE
  4612                           wreg	equ	0xFE8
  4613                           indf2	equ	0xFDF
  4614                           postinc2	equ	0xFDE
  4615                           postdec2	equ	0xFDD
  4616                           fsr2h	equ	0xFDA
  4617                           fsr2l	equ	0xFD9
  4618                           status	equ	0xFD8
  4619                           
  4620 ;; *************** function ___awtoft *****************
  4621 ;; Defined at:
  4622 ;;		line 32 in file "/Applications/microchip/xc8/v1.32/sources/common/awtoft.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  c               2    8[COMRAM] int 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  sign            1   11[COMRAM] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  3    8[COMRAM] float 
  4629 ;; Registers used:
  4630 ;;		wreg, status,2, status,0, prodl, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4636 ;;      Params:         3       0       0       0       0       0       0
  4637 ;;      Locals:         1       0       0       0       0       0       0
  4638 ;;      Temps:          0       0       0       0       0       0       0
  4639 ;;      Totals:         4       0       0       0       0       0       0
  4640 ;;Total ram usage:        4 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:    1
  4643 ;; This function calls:
  4644 ;;		___ftpack
  4645 ;; This function is called by:
  4646 ;;		_BMP180_init
  4647 ;;		_exp
  4648 ;;		_log
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text25
  4653  00212E                     __ptext25:
  4654                           	opt stack 0
  4655  00212E                     ___awtoft:
  4656                           	opt stack 26
  4657                           
  4658                           ;incstack = 0
  4659  00212E  FFFF               	dw	65535
  4660  002130  0E00               	movlw	0
  4661  002132  6E0C               	movwf	___awtoft@sign,c
  4662  002134  500A               	movf	___awtoft@c+1,w,c
  4663  002136  0A80               	xorlw	128
  4664  002138  6EF3               	movwf	prodl,c
  4665  00213A  0E80               	movlw	128
  4666  00213C  5CF3               	subwf	prodl,w,c
  4667  00213E  0E00               	movlw	0
  4668  002140  B4D8               	btfsc	status,2,c
  4669  002142  5C09               	subwf	___awtoft@c,w,c
  4670  002144  B0D8               	btfsc	status,0,c
  4671  002146  D006               	goto	l4823
  4672  002148  6C09               	negf	___awtoft@c,c
  4673  00214A  1E0A               	comf	___awtoft@c+1,f,c
  4674  00214C  B0D8               	btfsc	status,0,c
  4675  00214E  2A0A               	incf	___awtoft@c+1,f,c
  4676  002150  0E01               	movlw	1
  4677  002152  6E0C               	movwf	___awtoft@sign,c
  4678  002154                     l4823:
  4679  002154  C009  F001         	movff	___awtoft@c,___ftpack@arg
  4680  002158  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  4681  00215C  6A03               	clrf	___ftpack@arg+2,c
  4682  00215E  0E8E               	movlw	142
  4683  002160  6E04               	movwf	___ftpack@exp,c
  4684  002162  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  4685  002166  ECAC  F00D         	call	___ftpack	;wreg free
  4686  00216A  C001  F009         	movff	?___ftpack,?___awtoft
  4687  00216E  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  4688  002172  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  4689  002176  0012               	return	
  4690  002178  FFFF               	dw	65535	; errata NOP
  4691  00217A                     __end_of___awtoft:
  4692                           	opt stack 0
  4693                           tblptru	equ	0xFF8
  4694                           tblptrh	equ	0xFF7
  4695                           tblptrl	equ	0xFF6
  4696                           tablat	equ	0xFF5
  4697                           prodh	equ	0xFF4
  4698                           prodl	equ	0xFF3
  4699                           postinc0	equ	0xFEE
  4700                           wreg	equ	0xFE8
  4701                           indf2	equ	0xFDF
  4702                           postinc2	equ	0xFDE
  4703                           postdec2	equ	0xFDD
  4704                           fsr2h	equ	0xFDA
  4705                           fsr2l	equ	0xFD9
  4706                           status	equ	0xFD8
  4707                           
  4708 ;; *************** function ___lltoft *****************
  4709 ;; Defined at:
  4710 ;;		line 35 in file "/Applications/microchip/xc8/v1.32/sources/common/lltoft.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;  c               4    8[COMRAM] unsigned long 
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;  exp             1   16[COMRAM] unsigned char 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  3    8[COMRAM] float 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2, status,0, cstack
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4724 ;;      Params:         4       0       0       0       0       0       0
  4725 ;;      Locals:         1       0       0       0       0       0       0
  4726 ;;      Temps:          4       0       0       0       0       0       0
  4727 ;;      Totals:         9       0       0       0       0       0       0
  4728 ;;Total ram usage:        9 bytes
  4729 ;; Hardware stack levels used:    1
  4730 ;; Hardware stack levels required when called:    1
  4731 ;; This function calls:
  4732 ;;		___ftpack
  4733 ;; This function is called by:
  4734 ;;		_pow
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text26
  4739  00201E                     __ptext26:
  4740                           	opt stack 0
  4741  00201E                     ___lltoft:
  4742                           	opt stack 27
  4743                           
  4744                           ;incstack = 0
  4745  00201E  FFFF               	dw	65535
  4746  002020  0E8E               	movlw	142
  4747  002022  6E11               	movwf	___lltoft@exp,c
  4748  002024  D006               	goto	l4975
  4749  002026                     l4973:
  4750  002026  90D8               	bcf	status,0,c
  4751  002028  320C               	rrcf	___lltoft@c+3,f,c
  4752  00202A  320B               	rrcf	___lltoft@c+2,f,c
  4753  00202C  320A               	rrcf	___lltoft@c+1,f,c
  4754  00202E  3209               	rrcf	___lltoft@c,f,c
  4755  002030  2A11               	incf	___lltoft@exp,f,c
  4756  002032                     l4975:
  4757  002032  0E00               	movlw	0
  4758  002034  1409               	andwf	___lltoft@c,w,c
  4759  002036  6E0D               	movwf	??___lltoft& (0+255),c
  4760  002038  0E00               	movlw	0
  4761  00203A  140A               	andwf	___lltoft@c+1,w,c
  4762  00203C  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4763  00203E  0E00               	movlw	0
  4764  002040  140B               	andwf	___lltoft@c+2,w,c
  4765  002042  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4766  002044  0EFF               	movlw	255
  4767  002046  140C               	andwf	___lltoft@c+3,w,c
  4768  002048  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4769  00204A  5010               	movf	??___lltoft+3,w,c
  4770  00204C  100D               	iorwf	??___lltoft,w,c
  4771  00204E  100E               	iorwf	??___lltoft+1,w,c
  4772  002050  100F               	iorwf	??___lltoft+2,w,c
  4773  002052  A4D8               	btfss	status,2,c
  4774  002054  D7E8               	goto	l4973
  4775  002056  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4776  00205A  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4777  00205E  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4778  002062  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4779  002066  0E00               	movlw	0
  4780  002068  6E05               	movwf	___ftpack@sign,c
  4781  00206A  ECAC  F00D         	call	___ftpack	;wreg free
  4782  00206E  C001  F009         	movff	?___ftpack,?___lltoft
  4783  002072  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4784  002076  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4785  00207A  0012               	return	
  4786  00207C  FFFF               	dw	65535	; errata NOP
  4787  00207E                     __end_of___lltoft:
  4788                           	opt stack 0
  4789                           tblptru	equ	0xFF8
  4790                           tblptrh	equ	0xFF7
  4791                           tblptrl	equ	0xFF6
  4792                           tablat	equ	0xFF5
  4793                           prodh	equ	0xFF4
  4794                           prodl	equ	0xFF3
  4795                           postinc0	equ	0xFEE
  4796                           wreg	equ	0xFE8
  4797                           indf2	equ	0xFDF
  4798                           postinc2	equ	0xFDE
  4799                           postdec2	equ	0xFDD
  4800                           fsr2h	equ	0xFDA
  4801                           fsr2l	equ	0xFD9
  4802                           status	equ	0xFD8
  4803                           
  4804 ;; *************** function ___lwtoft *****************
  4805 ;; Defined at:
  4806 ;;		line 28 in file "/Applications/microchip/xc8/v1.32/sources/common/lwtoft.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  c               2    8[COMRAM] unsigned int 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  3    8[COMRAM] float 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4820 ;;      Params:         3       0       0       0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0       0       0
  4823 ;;      Totals:         3       0       0       0       0       0       0
  4824 ;;Total ram usage:        3 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:    1
  4827 ;; This function calls:
  4828 ;;		___ftpack
  4829 ;; This function is called by:
  4830 ;;		_BMP180_init
  4831 ;;		_main
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text27
  4836  002308                     __ptext27:
  4837                           	opt stack 0
  4838  002308                     ___lwtoft:
  4839                           	opt stack 29
  4840                           
  4841                           ;incstack = 0
  4842  002308  FFFF               	dw	65535
  4843  00230A  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  4844  00230E  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  4845  002312  6A03               	clrf	___ftpack@arg+2,c
  4846  002314  0E8E               	movlw	142
  4847  002316  6E04               	movwf	___ftpack@exp,c
  4848  002318  0E00               	movlw	0
  4849  00231A  6E05               	movwf	___ftpack@sign,c
  4850  00231C  ECAC  F00D         	call	___ftpack	;wreg free
  4851  002320  C001  F009         	movff	?___ftpack,?___lwtoft
  4852  002324  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  4853  002328  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  4854  00232C  0012               	return	
  4855  00232E  FFFF               	dw	65535	; errata NOP
  4856  002330                     __end_of___lwtoft:
  4857                           	opt stack 0
  4858                           tblptru	equ	0xFF8
  4859                           tblptrh	equ	0xFF7
  4860                           tblptrl	equ	0xFF6
  4861                           tablat	equ	0xFF5
  4862                           prodh	equ	0xFF4
  4863                           prodl	equ	0xFF3
  4864                           postinc0	equ	0xFEE
  4865                           wreg	equ	0xFE8
  4866                           indf2	equ	0xFDF
  4867                           postinc2	equ	0xFDE
  4868                           postdec2	equ	0xFDD
  4869                           fsr2h	equ	0xFDA
  4870                           fsr2l	equ	0xFD9
  4871                           status	equ	0xFD8
  4872                           
  4873 ;; *************** function _BMP180_readInt *****************
  4874 ;; Defined at:
  4875 ;;		line 32 in file "../../C_Library/SFE_BMP180.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  address         1    wreg     unsigned char 
  4878 ;;  value           2   18[COMRAM] int 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  address         1   22[COMRAM] unsigned char 
  4881 ;;  data            2   23[COMRAM] unsigned char [2]
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  2   18[COMRAM] int 
  4884 ;; Registers used:
  4885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4891 ;;      Params:         2       0       0       0       0       0       0
  4892 ;;      Locals:         3       0       0       0       0       0       0
  4893 ;;      Temps:          2       0       0       0       0       0       0
  4894 ;;      Totals:         7       0       0       0       0       0       0
  4895 ;;Total ram usage:        7 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    3
  4898 ;; This function calls:
  4899 ;;		_I2Cdev_readBytes
  4900 ;; This function is called by:
  4901 ;;		_BMP180_init
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text28
  4906  0020DC                     __ptext28:
  4907                           	opt stack 0
  4908  0020DC                     _BMP180_readInt:
  4909                           	opt stack 26
  4910                           
  4911                           ;incstack = 0
  4912  0020DC  FFFF               	dw	65535
  4913                           
  4914                           ;BMP180_readInt@address stored from wreg
  4915  0020DE  6E17               	movwf	BMP180_readInt@address,c
  4916                           
  4917                           ;SFE_BMP180.c: 34: unsigned char data[2];
  4918                           ;SFE_BMP180.c: 38: if (I2Cdev_readBytes(0x77, (uint8_t)address, 2, (uint8_t*)data) == 2)
  4919  0020E0  C017  F007         	movff	BMP180_readInt@address,I2Cdev_readBytes@regAddr
  4920  0020E4  0E02               	movlw	2
  4921  0020E6  6E08               	movwf	I2Cdev_readBytes@length,c
  4922  0020E8  0E00               	movlw	high BMP180_readInt@data
  4923  0020EA  6E0A               	movwf	I2Cdev_readBytes@data+1,c
  4924  0020EC  0E18               	movlw	low BMP180_readInt@data
  4925  0020EE  6E09               	movwf	I2Cdev_readBytes@data,c
  4926  0020F0  0E77               	movlw	119
  4927  0020F2  EC02  F00B         	call	_I2Cdev_readBytes
  4928  0020F6  0A02               	xorlw	2
  4929  0020F8  A4D8               	btfss	status,2,c
  4930  0020FA  D00F               	goto	l5167
  4931                           
  4932                           ;SFE_BMP180.c: 39: {
  4933                           ;SFE_BMP180.c: 40: value = (int16_t)((data[0]<<8)|data[1]);
  4934  0020FC  5019               	movf	BMP180_readInt@data+1,w,c
  4935  0020FE  C018  F015         	movff	BMP180_readInt@data,??_BMP180_readInt
  4936  002102  6A16               	clrf	(??_BMP180_readInt+1)& (0+255),c
  4937  002104  C015  F016         	movff	??_BMP180_readInt,??_BMP180_readInt+1
  4938  002108  6A15               	clrf	??_BMP180_readInt,c
  4939  00210A  1015               	iorwf	??_BMP180_readInt,w,c
  4940  00210C  6E13               	movwf	BMP180_readInt@value,c
  4941  00210E  5016               	movf	??_BMP180_readInt+1,w,c
  4942  002110  6E14               	movwf	BMP180_readInt@value+1,c
  4943                           
  4944                           ;SFE_BMP180.c: 42: return 1;
  4945  002112  0E00               	movlw	0
  4946  002114  6E14               	movwf	?_BMP180_readInt+1,c
  4947  002116  0E01               	movlw	1
  4948  002118  D007               	goto	L16
  4949  00211A                     l5167:
  4950                           
  4951                           ;SFE_BMP180.c: 43: }
  4952                           ;SFE_BMP180.c: 44: value = 0;
  4953  00211A  0E00               	movlw	0
  4954  00211C  6E14               	movwf	BMP180_readInt@value+1,c
  4955  00211E  0E00               	movlw	0
  4956  002120  6E13               	movwf	BMP180_readInt@value,c
  4957                           
  4958                           ;SFE_BMP180.c: 45: return 0;
  4959  002122  0E00               	movlw	0
  4960  002124  6E14               	movwf	?_BMP180_readInt+1,c
  4961  002126  0E00               	movlw	0
  4962  002128                     L16:
  4963  002128  6E13               	movwf	?_BMP180_readInt,c
  4964  00212A  0012               	return	
  4965  00212C  FFFF               	dw	65535	; errata NOP
  4966  00212E                     __end_of_BMP180_readInt:
  4967                           	opt stack 0
  4968                           tblptru	equ	0xFF8
  4969                           tblptrh	equ	0xFF7
  4970                           tblptrl	equ	0xFF6
  4971                           tablat	equ	0xFF5
  4972                           prodh	equ	0xFF4
  4973                           prodl	equ	0xFF3
  4974                           postinc0	equ	0xFEE
  4975                           wreg	equ	0xFE8
  4976                           indf2	equ	0xFDF
  4977                           postinc2	equ	0xFDE
  4978                           postdec2	equ	0xFDD
  4979                           fsr2h	equ	0xFDA
  4980                           fsr2l	equ	0xFD9
  4981                           status	equ	0xFD8
  4982                           
  4983 ;; *************** function _BMP180_getTemperature *****************
  4984 ;; Defined at:
  4985 ;;		line 240 in file "../../C_Library/SFE_BMP180.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;  T               3   57[COMRAM] int 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  a               3   70[COMRAM] int 
  4990 ;;  tu              3   60[COMRAM] int 
  4991 ;;  data            2   68[COMRAM] unsigned char [2]
  4992 ;;  result          2   66[COMRAM] int 
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  2   57[COMRAM] int 
  4995 ;; Registers used:
  4996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5002 ;;      Params:         3       0       0       0       0       0       0
  5003 ;;      Locals:        13       0       0       0       0       0       0
  5004 ;;      Temps:          0       0       0       0       0       0       0
  5005 ;;      Totals:        16       0       0       0       0       0       0
  5006 ;;Total ram usage:       16 bytes
  5007 ;; Hardware stack levels used:    1
  5008 ;; Hardware stack levels required when called:    3
  5009 ;; This function calls:
  5010 ;;		_I2Cdev_readBytes
  5011 ;;		___ftadd
  5012 ;;		___ftdiv
  5013 ;;		___ftmul
  5014 ;;		___ftneg
  5015 ;;		___lbtoft
  5016 ;; This function is called by:
  5017 ;;		_main
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text29
  5022  00128A                     __ptext29:
  5023                           	opt stack 0
  5024  00128A                     _BMP180_getTemperature:
  5025                           	opt stack 27
  5026                           
  5027                           ;incstack = 0
  5028  00128A  FFFF               	dw	65535
  5029                           
  5030                           ;SFE_BMP180.c: 247: unsigned char data[2];
  5031                           ;SFE_BMP180.c: 248: int result = 0;
  5032  00128C  0E00               	movlw	0
  5033  00128E  6E44               	movwf	BMP180_getTemperature@result+1,c
  5034  001290  0E00               	movlw	0
  5035  001292  6E43               	movwf	BMP180_getTemperature@result,c
  5036                           
  5037                           ;SFE_BMP180.c: 249: double tu, a;
  5038                           ;SFE_BMP180.c: 251: data[0] = 0xF6;
  5039  001294  0EF6               	movlw	246
  5040  001296  6E45               	movwf	BMP180_getTemperature@data,c
  5041                           
  5042                           ;SFE_BMP180.c: 255: if (I2Cdev_readBytes(0x77, (uint8_t)0xF6, 2, (uint8_t*)data) == 2)
  5043  001298  0EF6               	movlw	246
  5044  00129A  6E07               	movwf	I2Cdev_readBytes@regAddr,c
  5045  00129C  0E02               	movlw	2
  5046  00129E  6E08               	movwf	I2Cdev_readBytes@length,c
  5047  0012A0  0E00               	movlw	high BMP180_getTemperature@data
  5048  0012A2  6E0A               	movwf	I2Cdev_readBytes@data+1,c
  5049  0012A4  0E45               	movlw	low BMP180_getTemperature@data
  5050  0012A6  6E09               	movwf	I2Cdev_readBytes@data,c
  5051  0012A8  0E77               	movlw	119
  5052  0012AA  EC02  F00B         	call	_I2Cdev_readBytes
  5053  0012AE  0A02               	xorlw	2
  5054  0012B0  A4D8               	btfss	status,2,c
  5055  0012B2  D08C               	goto	l5561
  5056                           
  5057                           ;SFE_BMP180.c: 256: {
  5058                           ;SFE_BMP180.c: 257: tu = (data[0] * 256.0) + data[1];
  5059  0012B4  0E00               	movlw	0
  5060  0012B6  6E1F               	movwf	___ftmul@f2,c
  5061  0012B8  0E80               	movlw	128
  5062  0012BA  6E20               	movwf	___ftmul@f2+1,c
  5063  0012BC  0E43               	movlw	67
  5064  0012BE  6E21               	movwf	___ftmul@f2+2,c
  5065  0012C0  5045               	movf	BMP180_getTemperature@data,w,c
  5066  0012C2  EC98  F011         	call	___lbtoft
  5067  0012C6  C009  F01C         	movff	?___lbtoft,___ftmul@f1
  5068  0012CA  C00A  F01D         	movff	?___lbtoft+1,___ftmul@f1+1
  5069  0012CE  C00B  F01E         	movff	?___lbtoft+2,___ftmul@f1+2
  5070  0012D2  ECEE  F00B         	call	___ftmul	;wreg free
  5071  0012D6  C01C  F02E         	movff	?___ftmul,___ftadd@f1
  5072  0012DA  C01D  F02F         	movff	?___ftmul+1,___ftadd@f1+1
  5073  0012DE  C01E  F030         	movff	?___ftmul+2,___ftadd@f1+2
  5074  0012E2  5046               	movf	BMP180_getTemperature@data+1,w,c
  5075  0012E4  EC98  F011         	call	___lbtoft
  5076  0012E8  C009  F031         	movff	?___lbtoft,___ftadd@f2
  5077  0012EC  C00A  F032         	movff	?___lbtoft+1,___ftadd@f2+1
  5078  0012F0  C00B  F033         	movff	?___lbtoft+2,___ftadd@f2+2
  5079  0012F4  ECAC  F007         	call	___ftadd	;wreg free
  5080  0012F8  C02E  F03D         	movff	?___ftadd,BMP180_getTemperature@tu
  5081  0012FC  C02F  F03E         	movff	?___ftadd+1,BMP180_getTemperature@tu+1
  5082  001300  C030  F03F         	movff	?___ftadd+2,BMP180_getTemperature@tu+2
  5083                           
  5084                           ;SFE_BMP180.c: 258: result = 1;
  5085  001304  0E00               	movlw	0
  5086  001306  6E44               	movwf	BMP180_getTemperature@result+1,c
  5087  001308  0E01               	movlw	1
  5088  00130A  6E43               	movwf	BMP180_getTemperature@result,c
  5089                           
  5090                           ;SFE_BMP180.c: 266: a = c5 * (tu - c6);
  5091  00130C  C03D  F031         	movff	BMP180_getTemperature@tu,___ftadd@f2
  5092  001310  C03E  F032         	movff	BMP180_getTemperature@tu+1,___ftadd@f2+1
  5093  001314  C03F  F033         	movff	BMP180_getTemperature@tu+2,___ftadd@f2+2
  5094  001318  C07B  F02B         	movff	_c6,___ftneg@f1
  5095  00131C  C07C  F02C         	movff	_c6+1,___ftneg@f1+1
  5096  001320  C07D  F02D         	movff	_c6+2,___ftneg@f1+2
  5097  001324  EC5A  F011         	call	___ftneg	;wreg free
  5098  001328  C02B  F02E         	movff	?___ftneg,___ftadd@f1
  5099  00132C  C02C  F02F         	movff	?___ftneg+1,___ftadd@f1+1
  5100  001330  C02D  F030         	movff	?___ftneg+2,___ftadd@f1+2
  5101  001334  ECAC  F007         	call	___ftadd	;wreg free
  5102  001338  C02E  F01C         	movff	?___ftadd,___ftmul@f1
  5103  00133C  C02F  F01D         	movff	?___ftadd+1,___ftmul@f1+1
  5104  001340  C030  F01E         	movff	?___ftadd+2,___ftmul@f1+2
  5105  001344  C078  F01F         	movff	_c5,___ftmul@f2
  5106  001348  C079  F020         	movff	_c5+1,___ftmul@f2+1
  5107  00134C  C07A  F021         	movff	_c5+2,___ftmul@f2+2
  5108  001350  ECEE  F00B         	call	___ftmul	;wreg free
  5109  001354  C01C  F047         	movff	?___ftmul,BMP180_getTemperature@a
  5110  001358  C01D  F048         	movff	?___ftmul+1,BMP180_getTemperature@a+1
  5111  00135C  C01E  F049         	movff	?___ftmul+2,BMP180_getTemperature@a+2
  5112                           
  5113                           ;SFE_BMP180.c: 267: T = a + (mc / (a + md));
  5114  001360  C081  F031         	movff	_md,___ftadd@f2
  5115  001364  C082  F032         	movff	_md+1,___ftadd@f2+1
  5116  001368  C083  F033         	movff	_md+2,___ftadd@f2+2
  5117  00136C  C047  F02E         	movff	BMP180_getTemperature@a,___ftadd@f1
  5118  001370  C048  F02F         	movff	BMP180_getTemperature@a+1,___ftadd@f1+1
  5119  001374  C049  F030         	movff	BMP180_getTemperature@a+2,___ftadd@f1+2
  5120  001378  ECAC  F007         	call	___ftadd	;wreg free
  5121  00137C  C02E  F010         	movff	?___ftadd,___ftdiv@f2
  5122  001380  C02F  F011         	movff	?___ftadd+1,___ftdiv@f2+1
  5123  001384  C030  F012         	movff	?___ftadd+2,___ftdiv@f2+2
  5124  001388  C07E  F00D         	movff	_mc,___ftdiv@f1
  5125  00138C  C07F  F00E         	movff	_mc+1,___ftdiv@f1+1
  5126  001390  C080  F00F         	movff	_mc+2,___ftdiv@f1+2
  5127  001394  ECD3  F00C         	call	___ftdiv	;wreg free
  5128  001398  C00D  F040         	movff	?___ftdiv,_BMP180_getTemperature$3533
  5129  00139C  C00E  F041         	movff	?___ftdiv+1,_BMP180_getTemperature$3533+1
  5130  0013A0  C00F  F042         	movff	?___ftdiv+2,_BMP180_getTemperature$3533+2
  5131                           
  5132                           ;SFE_BMP180.c: 267: T = a + (mc / (a + md));
  5133  0013A4  C040  F02E         	movff	_BMP180_getTemperature$3533,___ftadd@f1
  5134  0013A8  C041  F02F         	movff	_BMP180_getTemperature$3533+1,___ftadd@f1+1
  5135  0013AC  C042  F030         	movff	_BMP180_getTemperature$3533+2,___ftadd@f1+2
  5136  0013B0  C047  F031         	movff	BMP180_getTemperature@a,___ftadd@f2
  5137  0013B4  C048  F032         	movff	BMP180_getTemperature@a+1,___ftadd@f2+1
  5138  0013B8  C049  F033         	movff	BMP180_getTemperature@a+2,___ftadd@f2+2
  5139  0013BC  ECAC  F007         	call	___ftadd	;wreg free
  5140  0013C0  C02E  F03A         	movff	?___ftadd,BMP180_getTemperature@T
  5141  0013C4  C02F  F03B         	movff	?___ftadd+1,BMP180_getTemperature@T+1
  5142  0013C8  C030  F03C         	movff	?___ftadd+2,BMP180_getTemperature@T+2
  5143  0013CC                     l5561:
  5144                           
  5145                           ;SFE_BMP180.c: 275: }
  5146                           ;SFE_BMP180.c: 276: return result;
  5147  0013CC  C043  F03A         	movff	BMP180_getTemperature@result,?_BMP180_getTemperature
  5148  0013D0  C044  F03B         	movff	BMP180_getTemperature@result+1,?_BMP180_getTemperature+1
  5149  0013D4  0012               	return	
  5150  0013D6  FFFF               	dw	65535	; errata NOP
  5151  0013D8                     __end_of_BMP180_getTemperature:
  5152                           	opt stack 0
  5153                           tblptru	equ	0xFF8
  5154                           tblptrh	equ	0xFF7
  5155                           tblptrl	equ	0xFF6
  5156                           tablat	equ	0xFF5
  5157                           prodh	equ	0xFF4
  5158                           prodl	equ	0xFF3
  5159                           postinc0	equ	0xFEE
  5160                           wreg	equ	0xFE8
  5161                           indf2	equ	0xFDF
  5162                           postinc2	equ	0xFDE
  5163                           postdec2	equ	0xFDD
  5164                           fsr2h	equ	0xFDA
  5165                           fsr2l	equ	0xFD9
  5166                           status	equ	0xFD8
  5167                           
  5168 ;; *************** function ___lbtoft *****************
  5169 ;; Defined at:
  5170 ;;		line 27 in file "/Applications/microchip/xc8/v1.32/sources/common/lbtoft.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  c               1    wreg     unsigned char 
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;  c               1   11[COMRAM] unsigned char 
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  3    8[COMRAM] float 
  5177 ;; Registers used:
  5178 ;;		wreg, status,2, status,0, cstack
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5184 ;;      Params:         3       0       0       0       0       0       0
  5185 ;;      Locals:         1       0       0       0       0       0       0
  5186 ;;      Temps:          0       0       0       0       0       0       0
  5187 ;;      Totals:         4       0       0       0       0       0       0
  5188 ;;Total ram usage:        4 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; Hardware stack levels required when called:    1
  5191 ;; This function calls:
  5192 ;;		___ftpack
  5193 ;; This function is called by:
  5194 ;;		_BMP180_getTemperature
  5195 ;;		_BMP180_getPressure
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           	psect	text30
  5200  002330                     __ptext30:
  5201                           	opt stack 0
  5202  002330                     ___lbtoft:
  5203                           	opt stack 28
  5204                           
  5205                           ;incstack = 0
  5206  002330  FFFF               	dw	65535
  5207                           
  5208                           ;___lbtoft@c stored from wreg
  5209  002332  6E0C               	movwf	___lbtoft@c,c
  5210  002334  500C               	movf	___lbtoft@c,w,c
  5211  002336  6E01               	movwf	___ftpack@arg,c
  5212  002338  6A02               	clrf	___ftpack@arg+1,c
  5213  00233A  6A03               	clrf	___ftpack@arg+2,c
  5214  00233C  0E8E               	movlw	142
  5215  00233E  6E04               	movwf	___ftpack@exp,c
  5216  002340  0E00               	movlw	0
  5217  002342  6E05               	movwf	___ftpack@sign,c
  5218  002344  ECAC  F00D         	call	___ftpack	;wreg free
  5219  002348  C001  F009         	movff	?___ftpack,?___lbtoft
  5220  00234C  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  5221  002350  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  5222  002354  0012               	return	
  5223  002356  FFFF               	dw	65535	; errata NOP
  5224  002358                     __end_of___lbtoft:
  5225                           	opt stack 0
  5226                           tblptru	equ	0xFF8
  5227                           tblptrh	equ	0xFF7
  5228                           tblptrl	equ	0xFF6
  5229                           tablat	equ	0xFF5
  5230                           prodh	equ	0xFF4
  5231                           prodl	equ	0xFF3
  5232                           postinc0	equ	0xFEE
  5233                           wreg	equ	0xFE8
  5234                           indf2	equ	0xFDF
  5235                           postinc2	equ	0xFDE
  5236                           postdec2	equ	0xFDD
  5237                           fsr2h	equ	0xFDA
  5238                           fsr2l	equ	0xFD9
  5239                           status	equ	0xFD8
  5240                           
  5241 ;; *************** function ___ftneg *****************
  5242 ;; Defined at:
  5243 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/ftneg.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;  f1              3   42[COMRAM] float 
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;		None
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  3   42[COMRAM] float 
  5250 ;; Registers used:
  5251 ;;		wreg, status,2, status,0
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5257 ;;      Params:         3       0       0       0       0       0       0
  5258 ;;      Locals:         0       0       0       0       0       0       0
  5259 ;;      Temps:          0       0       0       0       0       0       0
  5260 ;;      Totals:         3       0       0       0       0       0       0
  5261 ;;Total ram usage:        3 bytes
  5262 ;; Hardware stack levels used:    1
  5263 ;; This function calls:
  5264 ;;		Nothing
  5265 ;; This function is called by:
  5266 ;;		_BMP180_init
  5267 ;;		_BMP180_getTemperature
  5268 ;;		_pow
  5269 ;;		_exp
  5270 ;;		_BMP180_getPressure
  5271 ;;		_BMP180_sealevel
  5272 ;;		_BMP180_altitude
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text31
  5277  0022B4                     __ptext31:
  5278                           	opt stack 0
  5279  0022B4                     ___ftneg:
  5280                           	opt stack 27
  5281                           
  5282                           ;incstack = 0
  5283  0022B4  FFFF               	dw	65535
  5284  0022B6  0E7F               	movlw	127
  5285  0022B8  142D               	andwf	___ftneg@f1+2,w,c
  5286  0022BA  102C               	iorwf	___ftneg@f1+1,w,c
  5287  0022BC  102B               	iorwf	___ftneg@f1,w,c
  5288  0022BE  B4D8               	btfsc	status,2,c
  5289  0022C0  D006               	goto	l1845
  5290  0022C2  0E00               	movlw	0
  5291  0022C4  1A2B               	xorwf	___ftneg@f1,f,c
  5292  0022C6  0E00               	movlw	0
  5293  0022C8  1A2C               	xorwf	___ftneg@f1+1,f,c
  5294  0022CA  0E80               	movlw	128
  5295  0022CC  1A2D               	xorwf	___ftneg@f1+2,f,c
  5296  0022CE                     l1845:
  5297  0022CE  C02B  F02B         	movff	___ftneg@f1,?___ftneg
  5298  0022D2  C02C  F02C         	movff	___ftneg@f1+1,?___ftneg+1
  5299  0022D6  C02D  F02D         	movff	___ftneg@f1+2,?___ftneg+2
  5300  0022DA  0012               	return	
  5301  0022DC  FFFF               	dw	65535	; errata NOP
  5302  0022DE                     __end_of___ftneg:
  5303                           	opt stack 0
  5304                           tblptru	equ	0xFF8
  5305                           tblptrh	equ	0xFF7
  5306                           tblptrl	equ	0xFF6
  5307                           tablat	equ	0xFF5
  5308                           prodh	equ	0xFF4
  5309                           prodl	equ	0xFF3
  5310                           postinc0	equ	0xFEE
  5311                           wreg	equ	0xFE8
  5312                           indf2	equ	0xFDF
  5313                           postinc2	equ	0xFDE
  5314                           postdec2	equ	0xFDD
  5315                           fsr2h	equ	0xFDA
  5316                           fsr2l	equ	0xFD9
  5317                           status	equ	0xFD8
  5318                           
  5319 ;; *************** function ___ftmul *****************
  5320 ;; Defined at:
  5321 ;;		line 62 in file "/Applications/microchip/xc8/v1.32/sources/common/ftmul.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;  f1              3   27[COMRAM] float 
  5324 ;;  f2              3   30[COMRAM] float 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  5327 ;;  sign            1   41[COMRAM] unsigned char 
  5328 ;;  cntr            1   40[COMRAM] unsigned char 
  5329 ;;  exp             1   36[COMRAM] unsigned char 
  5330 ;; Return value:  Size  Location     Type
  5331 ;;                  3   27[COMRAM] float 
  5332 ;; Registers used:
  5333 ;;		wreg, status,2, status,0, cstack
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5339 ;;      Params:         6       0       0       0       0       0       0
  5340 ;;      Locals:         6       0       0       0       0       0       0
  5341 ;;      Temps:          3       0       0       0       0       0       0
  5342 ;;      Totals:        15       0       0       0       0       0       0
  5343 ;;Total ram usage:       15 bytes
  5344 ;; Hardware stack levels used:    1
  5345 ;; Hardware stack levels required when called:    1
  5346 ;; This function calls:
  5347 ;;		___ftpack
  5348 ;; This function is called by:
  5349 ;;		_BMP180_init
  5350 ;;		_BMP180_getTemperature
  5351 ;;		_pow
  5352 ;;		_exp
  5353 ;;		_log
  5354 ;;		_eval_poly
  5355 ;;		_BMP180_getPressure
  5356 ;;		_BMP180_altitude
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text32
  5361  0017DC                     __ptext32:
  5362                           	opt stack 0
  5363  0017DC                     ___ftmul:
  5364                           	opt stack 25
  5365                           
  5366                           ;incstack = 0
  5367  0017DC  FFFF               	dw	65535
  5368  0017DE  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  5369  0017E2  6A23               	clrf	(??___ftmul+1)& (0+255),c
  5370  0017E4  6A24               	clrf	(??___ftmul+2)& (0+255),c
  5371  0017E6  341D               	rlcf	___ftmul@f1+1,w,c
  5372  0017E8  3622               	rlcf	??___ftmul& (0+255),f,c
  5373  0017EA  E301               	bnc	u2531
  5374  0017EC  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  5375  0017EE                     u2531:
  5376  0017EE  5022               	movf	??___ftmul,w,c
  5377  0017F0  6E25               	movwf	___ftmul@exp,c
  5378  0017F2  6625               	tstfsz	___ftmul@exp& (0+255),c
  5379  0017F4  D001               	goto	l4589
  5380  0017F6  D00C               	goto	u2560
  5381  0017F8                     l4589:
  5382  0017F8  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  5383  0017FC  6A23               	clrf	(??___ftmul+1)& (0+255),c
  5384  0017FE  6A24               	clrf	(??___ftmul+2)& (0+255),c
  5385  001800  3420               	rlcf	___ftmul@f2+1,w,c
  5386  001802  3622               	rlcf	??___ftmul& (0+255),f,c
  5387  001804  E301               	bnc	u2551
  5388  001806  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  5389  001808                     u2551:
  5390  001808  5022               	movf	??___ftmul,w,c
  5391  00180A  6E2A               	movwf	___ftmul@sign,c
  5392  00180C  662A               	tstfsz	___ftmul@sign& (0+255),c
  5393  00180E  D007               	goto	l4595
  5394  001810                     u2560:
  5395  001810  0E00               	movlw	0
  5396  001812  6E1C               	movwf	?___ftmul,c
  5397  001814  0E00               	movlw	0
  5398  001816  6E1D               	movwf	?___ftmul+1,c
  5399  001818  0E00               	movlw	0
  5400  00181A  6E1E               	movwf	?___ftmul+2,c
  5401  00181C  D051               	goto	l1835
  5402  00181E                     l4595:
  5403  00181E  502A               	movf	___ftmul@sign,w,c
  5404  001820  0F7B               	addlw	123
  5405  001822  2625               	addwf	___ftmul@exp,f,c
  5406  001824  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  5407  001828  5021               	movf	___ftmul@f2+2,w,c
  5408  00182A  1A2A               	xorwf	___ftmul@sign,f,c
  5409  00182C  0E80               	movlw	128
  5410  00182E  162A               	andwf	___ftmul@sign,f,c
  5411  001830  8E1D               	bsf	___ftmul@f1+1,7,c
  5412  001832  8E20               	bsf	___ftmul@f2+1,7,c
  5413  001834  0EFF               	movlw	255
  5414  001836  161F               	andwf	___ftmul@f2,f,c
  5415  001838  0EFF               	movlw	255
  5416  00183A  1620               	andwf	___ftmul@f2+1,f,c
  5417  00183C  0E00               	movlw	0
  5418  00183E  1621               	andwf	___ftmul@f2+2,f,c
  5419  001840  0E00               	movlw	0
  5420  001842  6E26               	movwf	___ftmul@f3_as_product,c
  5421  001844  0E00               	movlw	0
  5422  001846  6E27               	movwf	___ftmul@f3_as_product+1,c
  5423  001848  0E00               	movlw	0
  5424  00184A  6E28               	movwf	___ftmul@f3_as_product+2,c
  5425  00184C  0E07               	movlw	7
  5426  00184E  6E29               	movwf	___ftmul@cntr,c
  5427  001850                     l4609:
  5428  001850  A01C               	btfss	___ftmul@f1,0,c
  5429  001852  D006               	goto	l4613
  5430  001854  501F               	movf	___ftmul@f2,w,c
  5431  001856  2626               	addwf	___ftmul@f3_as_product,f,c
  5432  001858  5020               	movf	___ftmul@f2+1,w,c
  5433  00185A  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  5434  00185C  5021               	movf	___ftmul@f2+2,w,c
  5435  00185E  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  5436  001860                     l4613:
  5437  001860  90D8               	bcf	status,0,c
  5438  001862  321E               	rrcf	___ftmul@f1+2,f,c
  5439  001864  321D               	rrcf	___ftmul@f1+1,f,c
  5440  001866  321C               	rrcf	___ftmul@f1,f,c
  5441  001868  90D8               	bcf	status,0,c
  5442  00186A  361F               	rlcf	___ftmul@f2,f,c
  5443  00186C  3620               	rlcf	___ftmul@f2+1,f,c
  5444  00186E  3621               	rlcf	___ftmul@f2+2,f,c
  5445  001870  2E29               	decfsz	___ftmul@cntr,f,c
  5446  001872  D7EE               	goto	l4609
  5447  001874  0E09               	movlw	9
  5448  001876  6E29               	movwf	___ftmul@cntr,c
  5449  001878                     l4619:
  5450  001878  A01C               	btfss	___ftmul@f1,0,c
  5451  00187A  D006               	goto	l4623
  5452  00187C  501F               	movf	___ftmul@f2,w,c
  5453  00187E  2626               	addwf	___ftmul@f3_as_product,f,c
  5454  001880  5020               	movf	___ftmul@f2+1,w,c
  5455  001882  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  5456  001884  5021               	movf	___ftmul@f2+2,w,c
  5457  001886  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  5458  001888                     l4623:
  5459  001888  90D8               	bcf	status,0,c
  5460  00188A  321E               	rrcf	___ftmul@f1+2,f,c
  5461  00188C  321D               	rrcf	___ftmul@f1+1,f,c
  5462  00188E  321C               	rrcf	___ftmul@f1,f,c
  5463  001890  90D8               	bcf	status,0,c
  5464  001892  3228               	rrcf	___ftmul@f3_as_product+2,f,c
  5465  001894  3227               	rrcf	___ftmul@f3_as_product+1,f,c
  5466  001896  3226               	rrcf	___ftmul@f3_as_product,f,c
  5467  001898  2E29               	decfsz	___ftmul@cntr,f,c
  5468  00189A  D7EE               	goto	l4619
  5469  00189C  C026  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  5470  0018A0  C027  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5471  0018A4  C028  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5472  0018A8  C025  F004         	movff	___ftmul@exp,___ftpack@exp
  5473  0018AC  C02A  F005         	movff	___ftmul@sign,___ftpack@sign
  5474  0018B0  ECAC  F00D         	call	___ftpack	;wreg free
  5475  0018B4  C001  F01C         	movff	?___ftpack,?___ftmul
  5476  0018B8  C002  F01D         	movff	?___ftpack+1,?___ftmul+1
  5477  0018BC  C003  F01E         	movff	?___ftpack+2,?___ftmul+2
  5478  0018C0                     l1835:
  5479  0018C0  0012               	return	
  5480  0018C2  FFFF               	dw	65535	; errata NOP
  5481  0018C4                     __end_of___ftmul:
  5482                           	opt stack 0
  5483                           tblptru	equ	0xFF8
  5484                           tblptrh	equ	0xFF7
  5485                           tblptrl	equ	0xFF6
  5486                           tablat	equ	0xFF5
  5487                           prodh	equ	0xFF4
  5488                           prodl	equ	0xFF3
  5489                           postinc0	equ	0xFEE
  5490                           wreg	equ	0xFE8
  5491                           indf2	equ	0xFDF
  5492                           postinc2	equ	0xFDE
  5493                           postdec2	equ	0xFDD
  5494                           fsr2h	equ	0xFDA
  5495                           fsr2l	equ	0xFD9
  5496                           status	equ	0xFD8
  5497                           
  5498 ;; *************** function ___ftdiv *****************
  5499 ;; Defined at:
  5500 ;;		line 49 in file "/Applications/microchip/xc8/v1.32/sources/common/ftdiv.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;  f1              3   12[COMRAM] float 
  5503 ;;  f2              3   15[COMRAM] float 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  f3              3   22[COMRAM] float 
  5506 ;;  sign            1   26[COMRAM] unsigned char 
  5507 ;;  exp             1   25[COMRAM] unsigned char 
  5508 ;;  cntr            1   21[COMRAM] unsigned char 
  5509 ;; Return value:  Size  Location     Type
  5510 ;;                  3   12[COMRAM] float 
  5511 ;; Registers used:
  5512 ;;		wreg, status,2, status,0, cstack
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5518 ;;      Params:         6       0       0       0       0       0       0
  5519 ;;      Locals:         6       0       0       0       0       0       0
  5520 ;;      Temps:          3       0       0       0       0       0       0
  5521 ;;      Totals:        15       0       0       0       0       0       0
  5522 ;;Total ram usage:       15 bytes
  5523 ;; Hardware stack levels used:    1
  5524 ;; Hardware stack levels required when called:    1
  5525 ;; This function calls:
  5526 ;;		___ftpack
  5527 ;; This function is called by:
  5528 ;;		_BMP180_init
  5529 ;;		_BMP180_getTemperature
  5530 ;;		_exp
  5531 ;;		_MS_5803_readSensor
  5532 ;;		_BMP180_getPressure
  5533 ;;		_BMP180_sealevel
  5534 ;;		_BMP180_altitude
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text33
  5539  0019A6                     __ptext33:
  5540                           	opt stack 0
  5541  0019A6                     ___ftdiv:
  5542                           	opt stack 26
  5543                           
  5544                           ;incstack = 0
  5545  0019A6  FFFF               	dw	65535
  5546  0019A8  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  5547  0019AC  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  5548  0019AE  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  5549  0019B0  340E               	rlcf	___ftdiv@f1+1,w,c
  5550  0019B2  3613               	rlcf	??___ftdiv& (0+255),f,c
  5551  0019B4  E301               	bnc	u2831
  5552  0019B6  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  5553  0019B8                     u2831:
  5554  0019B8  5013               	movf	??___ftdiv,w,c
  5555  0019BA  6E1A               	movwf	___ftdiv@exp,c
  5556  0019BC  661A               	tstfsz	___ftdiv@exp& (0+255),c
  5557  0019BE  D001               	goto	l4769
  5558  0019C0  D00C               	goto	u2860
  5559  0019C2                     l4769:
  5560  0019C2  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  5561  0019C6  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  5562  0019C8  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  5563  0019CA  3411               	rlcf	___ftdiv@f2+1,w,c
  5564  0019CC  3613               	rlcf	??___ftdiv& (0+255),f,c
  5565  0019CE  E301               	bnc	u2851
  5566  0019D0  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  5567  0019D2                     u2851:
  5568  0019D2  5013               	movf	??___ftdiv,w,c
  5569  0019D4  6E1B               	movwf	___ftdiv@sign,c
  5570  0019D6  661B               	tstfsz	___ftdiv@sign& (0+255),c
  5571  0019D8  D007               	goto	l4775
  5572  0019DA                     u2860:
  5573  0019DA  0E00               	movlw	0
  5574  0019DC  6E0D               	movwf	?___ftdiv,c
  5575  0019DE  0E00               	movlw	0
  5576  0019E0  6E0E               	movwf	?___ftdiv+1,c
  5577  0019E2  0E00               	movlw	0
  5578  0019E4  6E0F               	movwf	?___ftdiv+2,c
  5579  0019E6  D04A               	goto	l1820
  5580  0019E8                     l4775:
  5581  0019E8  0E00               	movlw	0
  5582  0019EA  6E17               	movwf	___ftdiv@f3,c
  5583  0019EC  0E00               	movlw	0
  5584  0019EE  6E18               	movwf	___ftdiv@f3+1,c
  5585  0019F0  0E00               	movlw	0
  5586  0019F2  6E19               	movwf	___ftdiv@f3+2,c
  5587  0019F4  501B               	movf	___ftdiv@sign,w,c
  5588  0019F6  0F89               	addlw	137
  5589  0019F8  5E1A               	subwf	___ftdiv@exp,f,c
  5590  0019FA  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  5591  0019FE  5012               	movf	___ftdiv@f2+2,w,c
  5592  001A00  1A1B               	xorwf	___ftdiv@sign,f,c
  5593  001A02  0E80               	movlw	128
  5594  001A04  161B               	andwf	___ftdiv@sign,f,c
  5595  001A06  8E0E               	bsf	___ftdiv@f1+1,7,c
  5596  001A08  0EFF               	movlw	255
  5597  001A0A  160D               	andwf	___ftdiv@f1,f,c
  5598  001A0C  0EFF               	movlw	255
  5599  001A0E  160E               	andwf	___ftdiv@f1+1,f,c
  5600  001A10  0E00               	movlw	0
  5601  001A12  160F               	andwf	___ftdiv@f1+2,f,c
  5602  001A14  8E11               	bsf	___ftdiv@f2+1,7,c
  5603  001A16  0EFF               	movlw	255
  5604  001A18  1610               	andwf	___ftdiv@f2,f,c
  5605  001A1A  0EFF               	movlw	255
  5606  001A1C  1611               	andwf	___ftdiv@f2+1,f,c
  5607  001A1E  0E00               	movlw	0
  5608  001A20  1612               	andwf	___ftdiv@f2+2,f,c
  5609  001A22  0E18               	movlw	24
  5610  001A24  6E16               	movwf	___ftdiv@cntr,c
  5611  001A26                     l4795:
  5612  001A26  90D8               	bcf	status,0,c
  5613  001A28  3617               	rlcf	___ftdiv@f3,f,c
  5614  001A2A  3618               	rlcf	___ftdiv@f3+1,f,c
  5615  001A2C  3619               	rlcf	___ftdiv@f3+2,f,c
  5616  001A2E  5010               	movf	___ftdiv@f2,w,c
  5617  001A30  5C0D               	subwf	___ftdiv@f1,w,c
  5618  001A32  5011               	movf	___ftdiv@f2+1,w,c
  5619  001A34  580E               	subwfb	___ftdiv@f1+1,w,c
  5620  001A36  5012               	movf	___ftdiv@f2+2,w,c
  5621  001A38  580F               	subwfb	___ftdiv@f1+2,w,c
  5622  001A3A  A0D8               	btfss	status,0,c
  5623  001A3C  D007               	goto	l1823
  5624  001A3E  5010               	movf	___ftdiv@f2,w,c
  5625  001A40  5E0D               	subwf	___ftdiv@f1,f,c
  5626  001A42  5011               	movf	___ftdiv@f2+1,w,c
  5627  001A44  5A0E               	subwfb	___ftdiv@f1+1,f,c
  5628  001A46  5012               	movf	___ftdiv@f2+2,w,c
  5629  001A48  5A0F               	subwfb	___ftdiv@f1+2,f,c
  5630  001A4A  8017               	bsf	___ftdiv@f3,0,c
  5631  001A4C                     l1823:
  5632  001A4C  90D8               	bcf	status,0,c
  5633  001A4E  360D               	rlcf	___ftdiv@f1,f,c
  5634  001A50  360E               	rlcf	___ftdiv@f1+1,f,c
  5635  001A52  360F               	rlcf	___ftdiv@f1+2,f,c
  5636  001A54  2E16               	decfsz	___ftdiv@cntr,f,c
  5637  001A56  D7E7               	goto	l4795
  5638  001A58  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  5639  001A5C  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5640  001A60  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5641  001A64  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  5642  001A68  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  5643  001A6C  ECAC  F00D         	call	___ftpack	;wreg free
  5644  001A70  C001  F00D         	movff	?___ftpack,?___ftdiv
  5645  001A74  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  5646  001A78  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  5647  001A7C                     l1820:
  5648  001A7C  0012               	return	
  5649  001A7E  FFFF               	dw	65535	; errata NOP
  5650  001A80                     __end_of___ftdiv:
  5651                           	opt stack 0
  5652                           tblptru	equ	0xFF8
  5653                           tblptrh	equ	0xFF7
  5654                           tblptrl	equ	0xFF6
  5655                           tablat	equ	0xFF5
  5656                           prodh	equ	0xFF4
  5657                           prodl	equ	0xFF3
  5658                           postinc0	equ	0xFEE
  5659                           wreg	equ	0xFE8
  5660                           indf2	equ	0xFDF
  5661                           postinc2	equ	0xFDE
  5662                           postdec2	equ	0xFDD
  5663                           fsr2h	equ	0xFDA
  5664                           fsr2l	equ	0xFD9
  5665                           status	equ	0xFD8
  5666                           
  5667 ;; *************** function ___ftadd *****************
  5668 ;; Defined at:
  5669 ;;		line 86 in file "/Applications/microchip/xc8/v1.32/sources/common/ftadd.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  f1              3   45[COMRAM] float 
  5672 ;;  f2              3   48[COMRAM] float 
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;  exp1            1   56[COMRAM] unsigned char 
  5675 ;;  exp2            1   55[COMRAM] unsigned char 
  5676 ;;  sign            1   54[COMRAM] unsigned char 
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  3   45[COMRAM] float 
  5679 ;; Registers used:
  5680 ;;		wreg, status,2, status,0, cstack
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5686 ;;      Params:         6       0       0       0       0       0       0
  5687 ;;      Locals:         3       0       0       0       0       0       0
  5688 ;;      Temps:          3       0       0       0       0       0       0
  5689 ;;      Totals:        12       0       0       0       0       0       0
  5690 ;;Total ram usage:       12 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; Hardware stack levels required when called:    1
  5693 ;; This function calls:
  5694 ;;		___ftpack
  5695 ;; This function is called by:
  5696 ;;		_BMP180_init
  5697 ;;		_BMP180_getTemperature
  5698 ;;		___ftsub
  5699 ;;		_floor
  5700 ;;		_log
  5701 ;;		_eval_poly
  5702 ;;		_BMP180_getPressure
  5703 ;;		_BMP180_sealevel
  5704 ;;		_BMP180_altitude
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           	psect	text34
  5709  000F58                     __ptext34:
  5710                           	opt stack 0
  5711  000F58                     ___ftadd:
  5712                           	opt stack 25
  5713                           
  5714                           ;incstack = 0
  5715  000F58  FFFF               	dw	65535
  5716  000F5A  C030  F034         	movff	___ftadd@f1+2,??___ftadd
  5717  000F5E  6A35               	clrf	(??___ftadd+1)& (0+255),c
  5718  000F60  6A36               	clrf	(??___ftadd+2)& (0+255),c
  5719  000F62  342F               	rlcf	___ftadd@f1+1,w,c
  5720  000F64  3634               	rlcf	??___ftadd& (0+255),f,c
  5721  000F66  E301               	bnc	u2321
  5722  000F68  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  5723  000F6A                     u2321:
  5724  000F6A  5034               	movf	??___ftadd,w,c
  5725  000F6C  6E39               	movwf	___ftadd@exp1,c
  5726  000F6E  C033  F034         	movff	___ftadd@f2+2,??___ftadd
  5727  000F72  6A35               	clrf	(??___ftadd+1)& (0+255),c
  5728  000F74  6A36               	clrf	(??___ftadd+2)& (0+255),c
  5729  000F76  3432               	rlcf	___ftadd@f2+1,w,c
  5730  000F78  3634               	rlcf	??___ftadd& (0+255),f,c
  5731  000F7A  E301               	bnc	u2331
  5732  000F7C  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  5733  000F7E                     u2331:
  5734  000F7E  5034               	movf	??___ftadd,w,c
  5735  000F80  6E38               	movwf	___ftadd@exp2,c
  5736  000F82  5039               	movf	___ftadd@exp1,w,c
  5737  000F84  B4D8               	btfsc	status,2,c
  5738  000F86  D00C               	goto	l1788
  5739  000F88  5038               	movf	___ftadd@exp2,w,c
  5740  000F8A  5C39               	subwf	___ftadd@exp1,w,c
  5741  000F8C  B0D8               	btfsc	status,0,c
  5742  000F8E  D00F               	goto	l4521
  5743  000F90  5039               	movf	___ftadd@exp1,w,c
  5744  000F92  0800               	sublw	0
  5745  000F94  2438               	addwf	___ftadd@exp2,w,c
  5746  000F96  6E34               	movwf	??___ftadd& (0+255),c
  5747  000F98  0E19               	movlw	25
  5748  000F9A  5C34               	subwf	??___ftadd,w,c
  5749  000F9C  A0D8               	btfss	status,0,c
  5750  000F9E  D007               	goto	l4521
  5751  000FA0                     l1788:
  5752  000FA0  C031  F02E         	movff	___ftadd@f2,?___ftadd
  5753  000FA4  C032  F02F         	movff	___ftadd@f2+1,?___ftadd+1
  5754  000FA8  C033  F030         	movff	___ftadd@f2+2,?___ftadd+2
  5755  000FAC  D0AB               	goto	l1789
  5756  000FAE                     l4521:
  5757  000FAE  5038               	movf	___ftadd@exp2,w,c
  5758  000FB0  B4D8               	btfsc	status,2,c
  5759  000FB2  D00C               	goto	l1792
  5760  000FB4  5039               	movf	___ftadd@exp1,w,c
  5761  000FB6  5C38               	subwf	___ftadd@exp2,w,c
  5762  000FB8  B0D8               	btfsc	status,0,c
  5763  000FBA  D00F               	goto	l4527
  5764  000FBC  5038               	movf	___ftadd@exp2,w,c
  5765  000FBE  0800               	sublw	0
  5766  000FC0  2439               	addwf	___ftadd@exp1,w,c
  5767  000FC2  6E34               	movwf	??___ftadd& (0+255),c
  5768  000FC4  0E19               	movlw	25
  5769  000FC6  5C34               	subwf	??___ftadd,w,c
  5770  000FC8  A0D8               	btfss	status,0,c
  5771  000FCA  D007               	goto	l4527
  5772  000FCC                     l1792:
  5773  000FCC  C02E  F02E         	movff	___ftadd@f1,?___ftadd
  5774  000FD0  C02F  F02F         	movff	___ftadd@f1+1,?___ftadd+1
  5775  000FD4  C030  F030         	movff	___ftadd@f1+2,?___ftadd+2
  5776  000FD8  D095               	goto	l1789
  5777  000FDA                     l4527:
  5778  000FDA  0E06               	movlw	6
  5779  000FDC  6E37               	movwf	___ftadd@sign,c
  5780  000FDE  BE30               	btfsc	___ftadd@f1+2,7,c
  5781  000FE0  8E37               	bsf	___ftadd@sign,7,c
  5782  000FE2  BE33               	btfsc	___ftadd@f2+2,7,c
  5783  000FE4  8C37               	bsf	___ftadd@sign,6,c
  5784  000FE6  8E2F               	bsf	___ftadd@f1+1,7,c
  5785  000FE8  0EFF               	movlw	255
  5786  000FEA  162E               	andwf	___ftadd@f1,f,c
  5787  000FEC  0EFF               	movlw	255
  5788  000FEE  162F               	andwf	___ftadd@f1+1,f,c
  5789  000FF0  0E00               	movlw	0
  5790  000FF2  1630               	andwf	___ftadd@f1+2,f,c
  5791  000FF4  8E32               	bsf	___ftadd@f2+1,7,c
  5792  000FF6  0EFF               	movlw	255
  5793  000FF8  1631               	andwf	___ftadd@f2,f,c
  5794  000FFA  0EFF               	movlw	255
  5795  000FFC  1632               	andwf	___ftadd@f2+1,f,c
  5796  000FFE  0E00               	movlw	0
  5797  001000  1633               	andwf	___ftadd@f2+2,f,c
  5798  001002  5038               	movf	___ftadd@exp2,w,c
  5799  001004  5C39               	subwf	___ftadd@exp1,w,c
  5800  001006  B0D8               	btfsc	status,0,c
  5801  001008  D01A               	goto	l4553
  5802  00100A                     l4543:
  5803  00100A  90D8               	bcf	status,0,c
  5804  00100C  3631               	rlcf	___ftadd@f2,f,c
  5805  00100E  3632               	rlcf	___ftadd@f2+1,f,c
  5806  001010  3633               	rlcf	___ftadd@f2+2,f,c
  5807  001012  0638               	decf	___ftadd@exp2,f,c
  5808  001014  5038               	movf	___ftadd@exp2,w,c
  5809  001016  1839               	xorwf	___ftadd@exp1,w,c
  5810  001018  B4D8               	btfsc	status,2,c
  5811  00101A  D00D               	goto	l4551
  5812  00101C  0637               	decf	___ftadd@sign,f,c
  5813  00101E  C037  F034         	movff	___ftadd@sign,??___ftadd
  5814  001022  0E07               	movlw	7
  5815  001024  1634               	andwf	??___ftadd,f,c
  5816  001026  B4D8               	btfsc	status,2,c
  5817  001028  D006               	goto	l4551
  5818  00102A  D7EF               	goto	l4543
  5819  00102C                     l4549:
  5820  00102C  90D8               	bcf	status,0,c
  5821  00102E  3230               	rrcf	___ftadd@f1+2,f,c
  5822  001030  322F               	rrcf	___ftadd@f1+1,f,c
  5823  001032  322E               	rrcf	___ftadd@f1,f,c
  5824  001034  2A39               	incf	___ftadd@exp1,f,c
  5825  001036                     l4551:
  5826  001036  5038               	movf	___ftadd@exp2,w,c
  5827  001038  6239               	cpfseq	___ftadd@exp1,c
  5828  00103A  D7F8               	goto	l4549
  5829  00103C  D01D               	goto	l1803
  5830  00103E                     l4553:
  5831  00103E  5039               	movf	___ftadd@exp1,w,c
  5832  001040  5C38               	subwf	___ftadd@exp2,w,c
  5833  001042  B0D8               	btfsc	status,0,c
  5834  001044  D019               	goto	l1803
  5835  001046                     l4555:
  5836  001046  90D8               	bcf	status,0,c
  5837  001048  362E               	rlcf	___ftadd@f1,f,c
  5838  00104A  362F               	rlcf	___ftadd@f1+1,f,c
  5839  00104C  3630               	rlcf	___ftadd@f1+2,f,c
  5840  00104E  0639               	decf	___ftadd@exp1,f,c
  5841  001050  5038               	movf	___ftadd@exp2,w,c
  5842  001052  1839               	xorwf	___ftadd@exp1,w,c
  5843  001054  B4D8               	btfsc	status,2,c
  5844  001056  D00D               	goto	l4563
  5845  001058  0637               	decf	___ftadd@sign,f,c
  5846  00105A  C037  F034         	movff	___ftadd@sign,??___ftadd
  5847  00105E  0E07               	movlw	7
  5848  001060  1634               	andwf	??___ftadd,f,c
  5849  001062  B4D8               	btfsc	status,2,c
  5850  001064  D006               	goto	l4563
  5851  001066  D7EF               	goto	l4555
  5852  001068                     l4561:
  5853  001068  90D8               	bcf	status,0,c
  5854  00106A  3233               	rrcf	___ftadd@f2+2,f,c
  5855  00106C  3232               	rrcf	___ftadd@f2+1,f,c
  5856  00106E  3231               	rrcf	___ftadd@f2,f,c
  5857  001070  2A38               	incf	___ftadd@exp2,f,c
  5858  001072                     l4563:
  5859  001072  5038               	movf	___ftadd@exp2,w,c
  5860  001074  6239               	cpfseq	___ftadd@exp1,c
  5861  001076  D7F8               	goto	l4561
  5862  001078                     l1803:
  5863  001078  AE37               	btfss	___ftadd@sign,7,c
  5864  00107A  D00C               	goto	l1812
  5865  00107C  0EFF               	movlw	255
  5866  00107E  1A2E               	xorwf	___ftadd@f1,f,c
  5867  001080  0EFF               	movlw	255
  5868  001082  1A2F               	xorwf	___ftadd@f1+1,f,c
  5869  001084  0EFF               	movlw	255
  5870  001086  1A30               	xorwf	___ftadd@f1+2,f,c
  5871  001088  0E01               	movlw	1
  5872  00108A  262E               	addwf	___ftadd@f1,f,c
  5873  00108C  0E00               	movlw	0
  5874  00108E  222F               	addwfc	___ftadd@f1+1,f,c
  5875  001090  0E00               	movlw	0
  5876  001092  2230               	addwfc	___ftadd@f1+2,f,c
  5877  001094                     l1812:
  5878  001094  AC37               	btfss	___ftadd@sign,6,c
  5879  001096  D00C               	goto	l4569
  5880  001098  0EFF               	movlw	255
  5881  00109A  1A31               	xorwf	___ftadd@f2,f,c
  5882  00109C  0EFF               	movlw	255
  5883  00109E  1A32               	xorwf	___ftadd@f2+1,f,c
  5884  0010A0  0EFF               	movlw	255
  5885  0010A2  1A33               	xorwf	___ftadd@f2+2,f,c
  5886  0010A4  0E01               	movlw	1
  5887  0010A6  2631               	addwf	___ftadd@f2,f,c
  5888  0010A8  0E00               	movlw	0
  5889  0010AA  2232               	addwfc	___ftadd@f2+1,f,c
  5890  0010AC  0E00               	movlw	0
  5891  0010AE  2233               	addwfc	___ftadd@f2+2,f,c
  5892  0010B0                     l4569:
  5893  0010B0  0E00               	movlw	0
  5894  0010B2  6E37               	movwf	___ftadd@sign,c
  5895  0010B4  502E               	movf	___ftadd@f1,w,c
  5896  0010B6  2631               	addwf	___ftadd@f2,f,c
  5897  0010B8  502F               	movf	___ftadd@f1+1,w,c
  5898  0010BA  2232               	addwfc	___ftadd@f2+1,f,c
  5899  0010BC  5030               	movf	___ftadd@f1+2,w,c
  5900  0010BE  2233               	addwfc	___ftadd@f2+2,f,c
  5901  0010C0  AE33               	btfss	___ftadd@f2+2,7,c
  5902  0010C2  D00E               	goto	l4579
  5903  0010C4  0EFF               	movlw	255
  5904  0010C6  1A31               	xorwf	___ftadd@f2,f,c
  5905  0010C8  0EFF               	movlw	255
  5906  0010CA  1A32               	xorwf	___ftadd@f2+1,f,c
  5907  0010CC  0EFF               	movlw	255
  5908  0010CE  1A33               	xorwf	___ftadd@f2+2,f,c
  5909  0010D0  0E01               	movlw	1
  5910  0010D2  2631               	addwf	___ftadd@f2,f,c
  5911  0010D4  0E00               	movlw	0
  5912  0010D6  2232               	addwfc	___ftadd@f2+1,f,c
  5913  0010D8  0E00               	movlw	0
  5914  0010DA  2233               	addwfc	___ftadd@f2+2,f,c
  5915  0010DC  0E01               	movlw	1
  5916  0010DE  6E37               	movwf	___ftadd@sign,c
  5917  0010E0                     l4579:
  5918  0010E0  C031  F001         	movff	___ftadd@f2,___ftpack@arg
  5919  0010E4  C032  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5920  0010E8  C033  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5921  0010EC  C039  F004         	movff	___ftadd@exp1,___ftpack@exp
  5922  0010F0  C037  F005         	movff	___ftadd@sign,___ftpack@sign
  5923  0010F4  ECAC  F00D         	call	___ftpack	;wreg free
  5924  0010F8  C001  F02E         	movff	?___ftpack,?___ftadd
  5925  0010FC  C002  F02F         	movff	?___ftpack+1,?___ftadd+1
  5926  001100  C003  F030         	movff	?___ftpack+2,?___ftadd+2
  5927  001104                     l1789:
  5928  001104  0012               	return	
  5929  001106  FFFF               	dw	65535	; errata NOP
  5930  001108                     __end_of___ftadd:
  5931                           	opt stack 0
  5932                           tblptru	equ	0xFF8
  5933                           tblptrh	equ	0xFF7
  5934                           tblptrl	equ	0xFF6
  5935                           tablat	equ	0xFF5
  5936                           prodh	equ	0xFF4
  5937                           prodl	equ	0xFF3
  5938                           postinc0	equ	0xFEE
  5939                           wreg	equ	0xFE8
  5940                           indf2	equ	0xFDF
  5941                           postinc2	equ	0xFDE
  5942                           postdec2	equ	0xFDD
  5943                           fsr2h	equ	0xFDA
  5944                           fsr2l	equ	0xFD9
  5945                           status	equ	0xFD8
  5946                           
  5947 ;; *************** function ___ftpack *****************
  5948 ;; Defined at:
  5949 ;;		line 62 in file "/Applications/microchip/xc8/v1.32/sources/common/float.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  arg             3    0[COMRAM] unsigned um
  5952 ;;  exp             1    3[COMRAM] unsigned char 
  5953 ;;  sign            1    4[COMRAM] unsigned char 
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;		None
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  3    0[COMRAM] float 
  5958 ;; Registers used:
  5959 ;;		wreg, status,2, status,0
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5965 ;;      Params:         5       0       0       0       0       0       0
  5966 ;;      Locals:         0       0       0       0       0       0       0
  5967 ;;      Temps:          3       0       0       0       0       0       0
  5968 ;;      Totals:         8       0       0       0       0       0       0
  5969 ;;Total ram usage:        8 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; This function calls:
  5972 ;;		Nothing
  5973 ;; This function is called by:
  5974 ;;		___altoft
  5975 ;;		___awtoft
  5976 ;;		___ftadd
  5977 ;;		___ftdiv
  5978 ;;		___ftmul
  5979 ;;		___lbtoft
  5980 ;;		___lltoft
  5981 ;;		___lwtoft
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           	psect	text35
  5986  001B58                     __ptext35:
  5987                           	opt stack 0
  5988  001B58                     ___ftpack:
  5989                           	opt stack 29
  5990                           
  5991                           ;incstack = 0
  5992  001B58  FFFF               	dw	65535
  5993  001B5A  5004               	movf	___ftpack@exp,w,c
  5994  001B5C  B4D8               	btfsc	status,2,c
  5995  001B5E  D005               	goto	l4455
  5996  001B60  5001               	movf	___ftpack@arg,w,c
  5997  001B62  1002               	iorwf	___ftpack@arg+1,w,c
  5998  001B64  1003               	iorwf	___ftpack@arg+2,w,c
  5999  001B66  A4D8               	btfss	status,2,c
  6000  001B68  D00C               	goto	l4461
  6001  001B6A                     l4455:
  6002  001B6A  0E00               	movlw	0
  6003  001B6C  6E01               	movwf	?___ftpack,c
  6004  001B6E  0E00               	movlw	0
  6005  001B70  6E02               	movwf	?___ftpack+1,c
  6006  001B72  0E00               	movlw	0
  6007  001B74  6E03               	movwf	?___ftpack+2,c
  6008  001B76  D044               	goto	l1751
  6009  001B78                     l4459:
  6010  001B78  2A04               	incf	___ftpack@exp,f,c
  6011  001B7A  90D8               	bcf	status,0,c
  6012  001B7C  3203               	rrcf	___ftpack@arg+2,f,c
  6013  001B7E  3202               	rrcf	___ftpack@arg+1,f,c
  6014  001B80  3201               	rrcf	___ftpack@arg,f,c
  6015  001B82                     l4461:
  6016  001B82  0E00               	movlw	0
  6017  001B84  1401               	andwf	___ftpack@arg,w,c
  6018  001B86  6E06               	movwf	??___ftpack& (0+255),c
  6019  001B88  0E00               	movlw	0
  6020  001B8A  1402               	andwf	___ftpack@arg+1,w,c
  6021  001B8C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6022  001B8E  0EFE               	movlw	254
  6023  001B90  1403               	andwf	___ftpack@arg+2,w,c
  6024  001B92  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6025  001B94  5006               	movf	??___ftpack,w,c
  6026  001B96  1007               	iorwf	??___ftpack+1,w,c
  6027  001B98  1008               	iorwf	??___ftpack+2,w,c
  6028  001B9A  B4D8               	btfsc	status,2,c
  6029  001B9C  D00C               	goto	l4467
  6030  001B9E  D7EC               	goto	l4459
  6031  001BA0                     l4463:
  6032  001BA0  2A04               	incf	___ftpack@exp,f,c
  6033  001BA2  0E01               	movlw	1
  6034  001BA4  2601               	addwf	___ftpack@arg,f,c
  6035  001BA6  0E00               	movlw	0
  6036  001BA8  2202               	addwfc	___ftpack@arg+1,f,c
  6037  001BAA  0E00               	movlw	0
  6038  001BAC  2203               	addwfc	___ftpack@arg+2,f,c
  6039  001BAE  90D8               	bcf	status,0,c
  6040  001BB0  3203               	rrcf	___ftpack@arg+2,f,c
  6041  001BB2  3202               	rrcf	___ftpack@arg+1,f,c
  6042  001BB4  3201               	rrcf	___ftpack@arg,f,c
  6043  001BB6                     l4467:
  6044  001BB6  0E00               	movlw	0
  6045  001BB8  1401               	andwf	___ftpack@arg,w,c
  6046  001BBA  6E06               	movwf	??___ftpack& (0+255),c
  6047  001BBC  0E00               	movlw	0
  6048  001BBE  1402               	andwf	___ftpack@arg+1,w,c
  6049  001BC0  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6050  001BC2  0EFF               	movlw	255
  6051  001BC4  1403               	andwf	___ftpack@arg+2,w,c
  6052  001BC6  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6053  001BC8  5006               	movf	??___ftpack,w,c
  6054  001BCA  1007               	iorwf	??___ftpack+1,w,c
  6055  001BCC  1008               	iorwf	??___ftpack+2,w,c
  6056  001BCE  B4D8               	btfsc	status,2,c
  6057  001BD0  D006               	goto	l4471
  6058  001BD2  D7E6               	goto	l4463
  6059  001BD4                     l4469:
  6060  001BD4  0604               	decf	___ftpack@exp,f,c
  6061  001BD6  90D8               	bcf	status,0,c
  6062  001BD8  3601               	rlcf	___ftpack@arg,f,c
  6063  001BDA  3602               	rlcf	___ftpack@arg+1,f,c
  6064  001BDC  3603               	rlcf	___ftpack@arg+2,f,c
  6065  001BDE                     l4471:
  6066  001BDE  AE02               	btfss	___ftpack@arg+1,7,c
  6067  001BE0  D7F9               	goto	l4469
  6068  001BE2  A004               	btfss	___ftpack@exp,0,c
  6069  001BE4  9E02               	bcf	___ftpack@arg+1,7,c
  6070  001BE6  90D8               	bcf	status,0,c
  6071  001BE8  3204               	rrcf	___ftpack@exp,f,c
  6072  001BEA  5004               	movf	___ftpack@exp,w,c
  6073  001BEC  1203               	iorwf	___ftpack@arg+2,f,c
  6074  001BEE  5005               	movf	___ftpack@sign,w,c
  6075  001BF0  A4D8               	btfss	status,2,c
  6076  001BF2  8E03               	bsf	___ftpack@arg+2,7,c
  6077  001BF4  C001  F001         	movff	___ftpack@arg,?___ftpack
  6078  001BF8  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6079  001BFC  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6080  001C00                     l1751:
  6081  001C00  0012               	return	
  6082  001C02  FFFF               	dw	65535	; errata NOP
  6083  001C04                     __end_of___ftpack:
  6084                           	opt stack 0
  6085                           tblptru	equ	0xFF8
  6086                           tblptrh	equ	0xFF7
  6087                           tblptrl	equ	0xFF6
  6088                           tablat	equ	0xFF5
  6089                           prodh	equ	0xFF4
  6090                           prodl	equ	0xFF3
  6091                           postinc0	equ	0xFEE
  6092                           wreg	equ	0xFE8
  6093                           indf2	equ	0xFDF
  6094                           postinc2	equ	0xFDE
  6095                           postdec2	equ	0xFDD
  6096                           fsr2h	equ	0xFDA
  6097                           fsr2l	equ	0xFD9
  6098                           status	equ	0xFD8
  6099                           
  6100 ;; *************** function _I2Cdev_readBytes *****************
  6101 ;; Defined at:
  6102 ;;		line 43 in file "../../C_Library/I2Cdev.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  devAddr         1    wreg     unsigned char 
  6105 ;;  regAddr         1    6[COMRAM] unsigned char 
  6106 ;;  length          1    7[COMRAM] unsigned char 
  6107 ;;  data            2    8[COMRAM] PTR unsigned char 
  6108 ;;		 -> BMP180_getPressure@data(3), BMP180_getTemperature@data(2), BMP180_readUInt@data(2), BMP180_readInt@data(2), 
  6109 ;;		 -> I2C_Bytes(3), mpu6050(15), I2Cdev_writeBits@b(1), I2Cdev_writeBit@b(1), 
  6110 ;;		 -> I2Cdev_readBits@b(1), I2Cdev_readBit@b(1), 
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;  devAddr         1   16[COMRAM] unsigned char 
  6113 ;;  count           1   17[COMRAM] char 
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  1    wreg      char 
  6116 ;; Registers used:
  6117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6123 ;;      Params:         4       0       0       0       0       0       0
  6124 ;;      Locals:         2       0       0       0       0       0       0
  6125 ;;      Temps:          6       0       0       0       0       0       0
  6126 ;;      Totals:        12       0       0       0       0       0       0
  6127 ;;Total ram usage:       12 bytes
  6128 ;; Hardware stack levels used:    1
  6129 ;; Hardware stack levels required when called:    2
  6130 ;; This function calls:
  6131 ;;		_IdleI2C
  6132 ;;		_ReadI2C
  6133 ;;		_WriteI2C
  6134 ;;		___wmul
  6135 ;; This function is called by:
  6136 ;;		_BMP180_readInt
  6137 ;;		_BMP180_getTemperature
  6138 ;;		_I2Cdev_readByte
  6139 ;;		_MPU6050_getMotion6
  6140 ;;		_MPU6050_getAcceleration
  6141 ;;		_MPU6050_getAccelerationX
  6142 ;;		_MPU6050_getAccelerationY
  6143 ;;		_MPU6050_getAccelerationZ
  6144 ;;		_MPU6050_getTemperature
  6145 ;;		_MPU6050_getRotation
  6146 ;;		_MPU6050_getRotationX
  6147 ;;		_MPU6050_getRotationY
  6148 ;;		_MPU6050_getRotationZ
  6149 ;;		_MPU6050_getExternalSensorWord
  6150 ;;		_MPU6050_getExternalSensorDWord
  6151 ;;		_MPU6050_getFIFOCount
  6152 ;;		_MPU6050_getFIFOBytes
  6153 ;;		_MPU6050_getXAccelOffset
  6154 ;;		_MPU6050_getYAccelOffset
  6155 ;;		_MPU6050_getZAccelOffset
  6156 ;;		_MPU6050_getXGyroOffset
  6157 ;;		_MPU6050_getYGyroOffset
  6158 ;;		_MPU6050_getZGyroOffset
  6159 ;;		_MPU6050_readMemoryBlock
  6160 ;;		_MS_5803_ADC
  6161 ;;		_MS_5803_init
  6162 ;;		_BMP180_readUInt
  6163 ;;		_BMP180_getPressure
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	text36
  6168  001604                     __ptext36:
  6169                           	opt stack 0
  6170  001604                     _I2Cdev_readBytes:
  6171                           	opt stack 26
  6172                           
  6173                           ;incstack = 0
  6174  001604  FFFF               	dw	65535
  6175                           
  6176                           ;I2Cdev_readBytes@devAddr stored from wreg
  6177  001606  6E11               	movwf	I2Cdev_readBytes@devAddr,c
  6178                           
  6179                           ;I2Cdev.c: 44: int8_t count = 0;
  6180  001608  0E00               	movlw	0
  6181  00160A  6E12               	movwf	I2Cdev_readBytes@count,c
  6182                           
  6183                           ;I2Cdev.c: 47: IdleI2C();
  6184  00160C  ECF2  F011         	call	_IdleI2C	;wreg free
  6185                           
  6186                           ;I2Cdev.c: 48: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  6187  001610  80C5               	bsf	4037,0,c	;volatile
  6188  001612                     l125:
  6189  001612  B0C5               	btfsc	4037,0,c	;volatile
  6190  001614  D7FE               	goto	l125
  6191                           
  6192                           ;I2Cdev.c: 51: IdleI2C();
  6193  001616  ECF2  F011         	call	_IdleI2C	;wreg free
  6194                           
  6195                           ;I2Cdev.c: 52: WriteI2C(devAddr << 1 | 0x00);
  6196  00161A  5011               	movf	I2Cdev_readBytes@devAddr,w,c
  6197  00161C  2411               	addwf	I2Cdev_readBytes@devAddr,w,c
  6198  00161E  ECAB  F00F         	call	_WriteI2C
  6199                           
  6200                           ;I2Cdev.c: 55: IdleI2C();
  6201  001622  ECF2  F011         	call	_IdleI2C	;wreg free
  6202                           
  6203                           ;I2Cdev.c: 56: WriteI2C(regAddr);
  6204  001626  5007               	movf	I2Cdev_readBytes@regAddr,w,c
  6205  001628  ECAB  F00F         	call	_WriteI2C
  6206                           
  6207                           ;I2Cdev.c: 59: IdleI2C();
  6208  00162C  ECF2  F011         	call	_IdleI2C	;wreg free
  6209                           
  6210                           ;I2Cdev.c: 60: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  6211  001630  82C5               	bsf	4037,1,c	;volatile
  6212  001632                     l128:
  6213  001632  B2C5               	btfsc	4037,1,c	;volatile
  6214  001634  D7FE               	goto	l128
  6215                           
  6216                           ;I2Cdev.c: 63: IdleI2C();
  6217  001636  ECF2  F011         	call	_IdleI2C	;wreg free
  6218                           
  6219                           ;I2Cdev.c: 64: WriteI2C(devAddr << 1 | 0x01);
  6220  00163A  80D8               	bsf	status,0,c
  6221  00163C  3411               	rlcf	I2Cdev_readBytes@devAddr,w,c
  6222  00163E  ECAB  F00F         	call	_WriteI2C
  6223                           
  6224                           ;I2Cdev.c: 66: for (count = 0; count < length; count++) {
  6225  001642  0E00               	movlw	0
  6226  001644  6E12               	movwf	I2Cdev_readBytes@count,c
  6227  001646  D03B               	goto	l4933
  6228  001648                     l4913:
  6229                           
  6230                           ;I2Cdev.c: 68: IdleI2C();
  6231  001648  ECF2  F011         	call	_IdleI2C	;wreg free
  6232                           
  6233                           ;I2Cdev.c: 69: data[count] = ReadI2C();
  6234  00164C  5012               	movf	I2Cdev_readBytes@count,w,c
  6235  00164E  6E01               	movwf	___wmul@multiplier,c
  6236  001650  6A02               	clrf	___wmul@multiplier+1,c
  6237  001652  BE01               	btfsc	___wmul@multiplier,7,c
  6238  001654  0602               	decf	___wmul@multiplier+1,f,c
  6239  001656  0E00               	movlw	0
  6240  001658  6E04               	movwf	___wmul@multiplicand+1,c
  6241  00165A  0E01               	movlw	1
  6242  00165C  6E03               	movwf	___wmul@multiplicand,c
  6243  00165E  EC6F  F011         	call	___wmul	;wreg free
  6244  001662  5001               	movf	?___wmul,w,c
  6245  001664  2409               	addwf	I2Cdev_readBytes@data,w,c
  6246  001666  6ED9               	movwf	fsr2l,c
  6247  001668  5002               	movf	?___wmul+1,w,c
  6248  00166A  200A               	addwfc	I2Cdev_readBytes@data+1,w,c
  6249  00166C  6EDA               	movwf	fsr2h,c
  6250  00166E  EC2F  F011         	call	_ReadI2C	;wreg free
  6251  001672  6EDF               	movwf	indf2,c
  6252                           
  6253                           ;I2Cdev.c: 71: if (count == length - 1) {
  6254  001674  C012  F00B         	movff	I2Cdev_readBytes@count,??_I2Cdev_readBytes
  6255  001678  6A0C               	clrf	(??_I2Cdev_readBytes+1)& (0+255),c
  6256  00167A  BE0B               	btfsc	??_I2Cdev_readBytes& (0+255),7,c
  6257  00167C  060C               	decf	(??_I2Cdev_readBytes+1)& (0+255),f,c
  6258  00167E  0EFF               	movlw	255
  6259  001680  6E0D               	movwf	(??_I2Cdev_readBytes+2)& (0+255),c
  6260  001682  0EFF               	movlw	255
  6261  001684  6E0E               	movwf	(??_I2Cdev_readBytes+3)& (0+255),c
  6262  001686  5008               	movf	I2Cdev_readBytes@length,w,c
  6263  001688  6E0F               	movwf	(??_I2Cdev_readBytes+4)& (0+255),c
  6264  00168A  6A10               	clrf	(??_I2Cdev_readBytes+5)& (0+255),c
  6265  00168C  500D               	movf	??_I2Cdev_readBytes+2,w,c
  6266  00168E  260F               	addwf	??_I2Cdev_readBytes+4,f,c
  6267  001690  500E               	movf	??_I2Cdev_readBytes+3,w,c
  6268  001692  2210               	addwfc	??_I2Cdev_readBytes+5,f,c
  6269  001694  500C               	movf	??_I2Cdev_readBytes+1,w,c
  6270  001696  1810               	xorwf	??_I2Cdev_readBytes+5,w,c
  6271  001698  E102               	bnz	u3025
  6272  00169A  500B               	movf	??_I2Cdev_readBytes,w,c
  6273  00169C  180F               	xorwf	??_I2Cdev_readBytes+4,w,c
  6274  00169E                     u3025:
  6275  00169E  A4D8               	btfss	status,2,c
  6276  0016A0  D007               	goto	l4925
  6277                           
  6278                           ;I2Cdev.c: 73: IdleI2C();
  6279  0016A2  ECF2  F011         	call	_IdleI2C	;wreg free
  6280                           
  6281                           ;I2Cdev.c: 74: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  6282  0016A6  8AC5               	bsf	4037,5,c	;volatile
  6283  0016A8  88C5               	bsf	4037,4,c	;volatile
  6284  0016AA                     l134:
  6285  0016AA  A8C5               	btfss	4037,4,c	;volatile
  6286  0016AC  D007               	goto	l4931
  6287  0016AE  D7FD               	goto	l134
  6288  0016B0                     l4925:
  6289                           
  6290                           ;I2Cdev.c: 77: IdleI2C();
  6291  0016B0  ECF2  F011         	call	_IdleI2C	;wreg free
  6292                           
  6293                           ;I2Cdev.c: 78: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  6294  0016B4  9AC5               	bcf	4037,5,c	;volatile
  6295  0016B6  88C5               	bsf	4037,4,c	;volatile
  6296  0016B8                     l138:
  6297  0016B8  B8C5               	btfsc	4037,4,c	;volatile
  6298  0016BA  D7FE               	goto	l138
  6299  0016BC                     l4931:
  6300  0016BC  2A12               	incf	I2Cdev_readBytes@count,f,c
  6301  0016BE                     l4933:
  6302  0016BE  5008               	movf	I2Cdev_readBytes@length,w,c
  6303  0016C0  6E0B               	movwf	??_I2Cdev_readBytes& (0+255),c
  6304  0016C2  6A0C               	clrf	(??_I2Cdev_readBytes+1)& (0+255),c
  6305  0016C4  C012  F00D         	movff	I2Cdev_readBytes@count,??_I2Cdev_readBytes+2
  6306  0016C8  6A0E               	clrf	(??_I2Cdev_readBytes+3)& (0+255),c
  6307  0016CA  BE0D               	btfsc	(??_I2Cdev_readBytes+2)& (0+255),7,c
  6308  0016CC  060E               	decf	(??_I2Cdev_readBytes+3)& (0+255),f,c
  6309  0016CE  500E               	movf	??_I2Cdev_readBytes+3,w,c
  6310  0016D0  0A80               	xorlw	128
  6311  0016D2  6E0F               	movwf	(??_I2Cdev_readBytes+4)& (0+255),c
  6312  0016D4  500B               	movf	??_I2Cdev_readBytes,w,c
  6313  0016D6  5C0D               	subwf	??_I2Cdev_readBytes+2,w,c
  6314  0016D8  500C               	movf	??_I2Cdev_readBytes+1,w,c
  6315  0016DA  0A80               	xorlw	128
  6316  0016DC  580F               	subwfb	(??_I2Cdev_readBytes+4)& (0+255),w,c
  6317  0016DE  A0D8               	btfss	status,0,c
  6318  0016E0  D7B3               	goto	l4913
  6319                           
  6320                           ;I2Cdev.c: 79: }
  6321                           ;I2Cdev.c: 80: }
  6322                           ;I2Cdev.c: 83: IdleI2C();
  6323  0016E2  ECF2  F011         	call	_IdleI2C	;wreg free
  6324                           
  6325                           ;I2Cdev.c: 84: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  6326  0016E6  84C5               	bsf	4037,2,c	;volatile
  6327  0016E8                     l142:
  6328  0016E8  B4C5               	btfsc	4037,2,c	;volatile
  6329  0016EA  D7FE               	goto	l142
  6330                           
  6331                           ;I2Cdev.c: 86: return count;
  6332  0016EC  5012               	movf	I2Cdev_readBytes@count,w,c
  6333  0016EE  0012               	return	
  6334  0016F0  FFFF               	dw	65535	; errata NOP
  6335  0016F2                     __end_of_I2Cdev_readBytes:
  6336                           	opt stack 0
  6337                           tblptru	equ	0xFF8
  6338                           tblptrh	equ	0xFF7
  6339                           tblptrl	equ	0xFF6
  6340                           tablat	equ	0xFF5
  6341                           prodh	equ	0xFF4
  6342                           prodl	equ	0xFF3
  6343                           postinc0	equ	0xFEE
  6344                           wreg	equ	0xFE8
  6345                           indf2	equ	0xFDF
  6346                           postinc2	equ	0xFDE
  6347                           postdec2	equ	0xFDD
  6348                           fsr2h	equ	0xFDA
  6349                           fsr2l	equ	0xFD9
  6350                           status	equ	0xFD8
  6351                           
  6352 ;; *************** function ___wmul *****************
  6353 ;; Defined at:
  6354 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;  multiplier      2    0[COMRAM] unsigned int 
  6357 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;  product         2    4[COMRAM] unsigned int 
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  2    0[COMRAM] unsigned int 
  6362 ;; Registers used:
  6363 ;;		wreg, status,2, status,0, prodl, prodh
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6369 ;;      Params:         4       0       0       0       0       0       0
  6370 ;;      Locals:         2       0       0       0       0       0       0
  6371 ;;      Temps:          0       0       0       0       0       0       0
  6372 ;;      Totals:         6       0       0       0       0       0       0
  6373 ;;Total ram usage:        6 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		_I2Cdev_readBytes
  6379 ;;		_eval_poly
  6380 ;;		_I2Cdev_readWords
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text37
  6385  0022DE                     __ptext37:
  6386                           	opt stack 0
  6387  0022DE                     ___wmul:
  6388                           	opt stack 26
  6389                           
  6390                           ;incstack = 0
  6391  0022DE  FFFF               	dw	65535
  6392  0022E0  5001               	movf	___wmul@multiplier,w,c
  6393  0022E2  0203               	mulwf	___wmul@multiplicand,c
  6394  0022E4  CFF3 F005          	movff	prodl,___wmul@product
  6395  0022E8  CFF4 F006          	movff	prodh,___wmul@product+1
  6396  0022EC  5001               	movf	___wmul@multiplier,w,c
  6397  0022EE  0204               	mulwf	___wmul@multiplicand+1,c
  6398  0022F0  50F3               	movf	prodl,w,c
  6399  0022F2  2606               	addwf	___wmul@product+1,f,c
  6400  0022F4  5002               	movf	___wmul@multiplier+1,w,c
  6401  0022F6  0203               	mulwf	___wmul@multiplicand,c
  6402  0022F8  50F3               	movf	prodl,w,c
  6403  0022FA  2606               	addwf	___wmul@product+1,f,c
  6404  0022FC  C005  F001         	movff	___wmul@product,?___wmul
  6405  002300  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6406  002304  0012               	return	
  6407  002306  FFFF               	dw	65535	; errata NOP
  6408  002308                     __end_of___wmul:
  6409                           	opt stack 0
  6410                           tblptru	equ	0xFF8
  6411                           tblptrh	equ	0xFF7
  6412                           tblptrl	equ	0xFF6
  6413                           tablat	equ	0xFF5
  6414                           prodh	equ	0xFF4
  6415                           prodl	equ	0xFF3
  6416                           postinc0	equ	0xFEE
  6417                           wreg	equ	0xFE8
  6418                           indf2	equ	0xFDF
  6419                           postinc2	equ	0xFDE
  6420                           postdec2	equ	0xFDD
  6421                           fsr2h	equ	0xFDA
  6422                           fsr2l	equ	0xFD9
  6423                           status	equ	0xFD8
  6424                           
  6425 ;; *************** function _WriteI2C *****************
  6426 ;; Defined at:
  6427 ;;		line 12 in file "/Applications/microchip/xc8/v1.32/sources/pic18/plib/i2c/i2c_writ.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;  data_out        1    wreg     unsigned char 
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;  data_out        1    2[COMRAM] unsigned char 
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  1    wreg      char 
  6434 ;; Registers used:
  6435 ;;		wreg, status,2, status,0, cstack
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6441 ;;      Params:         0       0       0       0       0       0       0
  6442 ;;      Locals:         1       0       0       0       0       0       0
  6443 ;;      Temps:          1       0       0       0       0       0       0
  6444 ;;      Totals:         2       0       0       0       0       0       0
  6445 ;;Total ram usage:        2 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    1
  6448 ;; This function calls:
  6449 ;;		_IdleI2C
  6450 ;; This function is called by:
  6451 ;;		_I2Cdev_readBytes
  6452 ;;		_I2Cdev_writeBytes
  6453 ;;		_I2Cdev_readWords
  6454 ;;		_I2Cdev_writeWords
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           	psect	text38
  6459  001F56                     __ptext38:
  6460                           	opt stack 0
  6461  001F56                     _WriteI2C:
  6462                           	opt stack 27
  6463                           
  6464                           ;incstack = 0
  6465  001F56  FFFF               	dw	65535
  6466                           
  6467                           ;WriteI2C@data_out stored from wreg
  6468  001F58  6E03               	movwf	WriteI2C@data_out,c
  6469  001F5A  C003  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  6470  001F5E  BEC6               	btfsc	4038,7,c	;volatile
  6471  001F60  D02C               	goto	l1412
  6472                           
  6473                           ;	Return value of _WriteI2C is never used
  6474  001F62  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  6475  001F66  0E0F               	movlw	15
  6476  001F68  1602               	andwf	??_WriteI2C,f,c
  6477  001F6A  5002               	movf	??_WriteI2C,w,c
  6478  001F6C  0A08               	xorlw	8
  6479  001F6E  B4D8               	btfsc	status,2,c
  6480  001F70  D00F               	goto	l4735
  6481  001F72  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  6482  001F76  0E0F               	movlw	15
  6483  001F78  1602               	andwf	??_WriteI2C,f,c
  6484  001F7A  5002               	movf	??_WriteI2C,w,c
  6485  001F7C  0A0B               	xorlw	11
  6486  001F7E  B4D8               	btfsc	status,2,c
  6487  001F80  D007               	goto	l4735
  6488  001F82  88C6               	bsf	4038,4,c	;volatile
  6489  001F84                     l1415:
  6490  001F84  A69E               	btfss	3998,3,c	;volatile
  6491  001F86  D7FE               	goto	l1415
  6492  001F88  B4C7               	btfsc	4039,2,c	;volatile
  6493  001F8A  D017               	goto	l1412
  6494  001F8C  50C7               	movf	4039,w,c	;volatile
  6495  001F8E  D015               	goto	l1412
  6496  001F90                     l4735:
  6497  001F90  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  6498  001F94  0E0F               	movlw	15
  6499  001F96  1602               	andwf	??_WriteI2C,f,c
  6500  001F98  5002               	movf	??_WriteI2C,w,c
  6501  001F9A  0A08               	xorlw	8
  6502  001F9C  B4D8               	btfsc	status,2,c
  6503  001F9E  D008               	goto	l1424
  6504  001FA0  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  6505  001FA4  0E0F               	movlw	15
  6506  001FA6  1602               	andwf	??_WriteI2C,f,c
  6507  001FA8  5002               	movf	??_WriteI2C,w,c
  6508  001FAA  0A0B               	xorlw	11
  6509  001FAC  A4D8               	btfss	status,2,c
  6510  001FAE  D005               	goto	l1412
  6511  001FB0                     l1424:
  6512  001FB0  B0C7               	btfsc	4039,0,c	;volatile
  6513  001FB2  D7FE               	goto	l1424
  6514  001FB4  ECF2  F011         	call	_IdleI2C	;wreg free
  6515  001FB8  50C5               	movf	4037,w,c	;volatile
  6516  001FBA                     l1412:
  6517  001FBA  0012               	return	
  6518  001FBC  FFFF               	dw	65535	; errata NOP
  6519  001FBE                     __end_of_WriteI2C:
  6520                           	opt stack 0
  6521                           tblptru	equ	0xFF8
  6522                           tblptrh	equ	0xFF7
  6523                           tblptrl	equ	0xFF6
  6524                           tablat	equ	0xFF5
  6525                           prodh	equ	0xFF4
  6526                           prodl	equ	0xFF3
  6527                           postinc0	equ	0xFEE
  6528                           wreg	equ	0xFE8
  6529                           indf2	equ	0xFDF
  6530                           postinc2	equ	0xFDE
  6531                           postdec2	equ	0xFDD
  6532                           fsr2h	equ	0xFDA
  6533                           fsr2l	equ	0xFD9
  6534                           status	equ	0xFD8
  6535                           
  6536 ;; *************** function _IdleI2C *****************
  6537 ;; Defined at:
  6538 ;;		line 24 in file "/Applications/microchip/xc8/v1.32/sources/pic18/plib/i2c/i2c_idle.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;		None
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;		None
  6543 ;; Return value:  Size  Location     Type
  6544 ;;		None               void
  6545 ;; Registers used:
  6546 ;;		wreg, status,2, status,0
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6552 ;;      Params:         0       0       0       0       0       0       0
  6553 ;;      Locals:         0       0       0       0       0       0       0
  6554 ;;      Temps:          1       0       0       0       0       0       0
  6555 ;;      Totals:         1       0       0       0       0       0       0
  6556 ;;Total ram usage:        1 bytes
  6557 ;; Hardware stack levels used:    1
  6558 ;; This function calls:
  6559 ;;		Nothing
  6560 ;; This function is called by:
  6561 ;;		_I2Cdev_readBytes
  6562 ;;		_I2Cdev_writeBytes
  6563 ;;		_WriteI2C
  6564 ;;		_I2Cdev_readWords
  6565 ;;		_I2Cdev_writeWords
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           	psect	text39
  6570  0023E4                     __ptext39:
  6571                           	opt stack 0
  6572  0023E4                     _IdleI2C:
  6573                           	opt stack 27
  6574                           
  6575                           ;incstack = 0
  6576  0023E4  FFFF               	dw	65535
  6577  0023E6                     l4487:
  6578  0023E6  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
  6579  0023EA  0E1F               	movlw	31
  6580  0023EC  1601               	andwf	??_IdleI2C,f,c
  6581  0023EE  B4D8               	btfsc	status,2,c
  6582  0023F0  B4C7               	btfsc	4039,2,c	;volatile
  6583  0023F2  D7F9               	goto	l4487
  6584  0023F4  0012               	return	
  6585  0023F6  FFFF               	dw	65535	; errata NOP
  6586  0023F8                     __end_of_IdleI2C:
  6587                           	opt stack 0
  6588                           tblptru	equ	0xFF8
  6589                           tblptrh	equ	0xFF7
  6590                           tblptrl	equ	0xFF6
  6591                           tablat	equ	0xFF5
  6592                           prodh	equ	0xFF4
  6593                           prodl	equ	0xFF3
  6594                           postinc0	equ	0xFEE
  6595                           wreg	equ	0xFE8
  6596                           indf2	equ	0xFDF
  6597                           postinc2	equ	0xFDE
  6598                           postdec2	equ	0xFDD
  6599                           fsr2h	equ	0xFDA
  6600                           fsr2l	equ	0xFD9
  6601                           status	equ	0xFD8
  6602                           
  6603 ;; *************** function _ReadI2C *****************
  6604 ;; Defined at:
  6605 ;;		line 11 in file "/Applications/microchip/xc8/v1.32/sources/pic18/plib/i2c/i2c_read.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;		None
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;		None
  6610 ;; Return value:  Size  Location     Type
  6611 ;;                  1    wreg      unsigned char 
  6612 ;; Registers used:
  6613 ;;		wreg, status,2, status,0
  6614 ;; Tracked objects:
  6615 ;;		On entry : 0/0
  6616 ;;		On exit  : 0/0
  6617 ;;		Unchanged: 0/0
  6618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6619 ;;      Params:         0       0       0       0       0       0       0
  6620 ;;      Locals:         0       0       0       0       0       0       0
  6621 ;;      Temps:          1       0       0       0       0       0       0
  6622 ;;      Totals:         1       0       0       0       0       0       0
  6623 ;;Total ram usage:        1 bytes
  6624 ;; Hardware stack levels used:    1
  6625 ;; This function calls:
  6626 ;;		Nothing
  6627 ;; This function is called by:
  6628 ;;		_I2Cdev_readBytes
  6629 ;;		_I2Cdev_readWords
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           	psect	text40
  6634  00225E                     __ptext40:
  6635                           	opt stack 0
  6636  00225E                     _ReadI2C:
  6637                           	opt stack 27
  6638                           
  6639                           ;incstack = 0
  6640  00225E  FFFF               	dw	65535
  6641  002260  CFC6 F001          	movff	4038,??_ReadI2C	;volatile
  6642  002264  0E0F               	movlw	15
  6643  002266  1601               	andwf	??_ReadI2C,f,c
  6644  002268  5001               	movf	??_ReadI2C,w,c
  6645  00226A  0A08               	xorlw	8
  6646  00226C  B4D8               	btfsc	status,2,c
  6647  00226E  D007               	goto	l1390
  6648  002270  CFC6 F001          	movff	4038,??_ReadI2C	;volatile
  6649  002274  0E0F               	movlw	15
  6650  002276  1601               	andwf	??_ReadI2C,f,c
  6651  002278  5001               	movf	??_ReadI2C,w,c
  6652  00227A  0A0B               	xorlw	11
  6653  00227C  B4D8               	btfsc	status,2,c
  6654  00227E                     l1390:
  6655  00227E  86C5               	bsf	4037,3,c	;volatile
  6656  002280                     l1391:
  6657  002280  A0C7               	btfss	4039,0,c	;volatile
  6658  002282  D7FE               	goto	l1391
  6659  002284  50C9               	movf	4041,w,c	;volatile
  6660  002286  0012               	return	
  6661  002288  FFFF               	dw	65535	; errata NOP
  6662  00228A                     __end_of_ReadI2C:
  6663                           	opt stack 0
  6664                           tblptru	equ	0xFF8
  6665                           tblptrh	equ	0xFF7
  6666                           tblptrl	equ	0xFF6
  6667                           tablat	equ	0xFF5
  6668                           prodh	equ	0xFF4
  6669                           prodl	equ	0xFF3
  6670                           postinc0	equ	0xFEE
  6671                           wreg	equ	0xFE8
  6672                           indf2	equ	0xFDF
  6673                           postinc2	equ	0xFDE
  6674                           postdec2	equ	0xFDD
  6675                           fsr2h	equ	0xFDA
  6676                           fsr2l	equ	0xFD9
  6677                           status	equ	0xFD8
  6678                           tblptru	equ	0xFF8
  6679                           tblptrh	equ	0xFF7
  6680                           tblptrl	equ	0xFF6
  6681                           tablat	equ	0xFF5
  6682                           prodh	equ	0xFF4
  6683                           prodl	equ	0xFF3
  6684                           postinc0	equ	0xFEE
  6685                           wreg	equ	0xFE8
  6686                           indf2	equ	0xFDF
  6687                           postinc2	equ	0xFDE
  6688                           postdec2	equ	0xFDD
  6689                           fsr2h	equ	0xFDA
  6690                           fsr2l	equ	0xFD9
  6691                           status	equ	0xFD8
  6692                           
  6693                           	psect	rparam
  6694  0000                     tblptru	equ	0xFF8
  6695                           tblptrh	equ	0xFF7
  6696                           tblptrl	equ	0xFF6
  6697                           tablat	equ	0xFF5
  6698                           prodh	equ	0xFF4
  6699                           prodl	equ	0xFF3
  6700                           postinc0	equ	0xFEE
  6701                           wreg	equ	0xFE8
  6702                           indf2	equ	0xFDF
  6703                           postinc2	equ	0xFDE
  6704                           postdec2	equ	0xFDD
  6705                           fsr2h	equ	0xFDA
  6706                           fsr2l	equ	0xFD9
  6707                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         167
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     44     159
    BANK1           256      0      52
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 

    sp__convertFrom16To8	PTR unsigned char  size(2) Largest target is 2
		 -> convertFrom16To8@arrayData(BANK0[2]), 

    I2Cdev_writeBytes@data	PTR unsigned char  size(2) Largest target is 2
		 -> BMP180_startPressure@data(COMRAM[2]), BMP180_startTemperature@data(COMRAM[2]), NULL(NULL[0]), I2Cdev_writeByte@data(COMRAM[1]), 

    I2Cdev_readBytes@data	PTR unsigned char  size(2) Largest target is 15
		 -> BMP180_getPressure@data(COMRAM[3]), BMP180_getTemperature@data(COMRAM[2]), BMP180_readUInt@data(COMRAM[2]), BMP180_readInt@data(COMRAM[2]), 
		 -> I2C_Bytes(BANK0[3]), mpu6050(BANK0[15]), I2Cdev_writeBits@b(COMRAM[1]), I2Cdev_writeBit@b(COMRAM[1]), 
		 -> I2Cdev_readBits@b(COMRAM[1]), I2Cdev_readBit@b(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _setupCANTxRx->_Delay10KTCYx
    _CAN_Init->_CAN_SetMode
    _initI2C_USART->_OpenUSART
    _flashLED->_delayzz
    _BMP180_startTemperature->_I2Cdev_writeBytes
    _I2Cdev_writeBytes->_WriteI2C
    _BMP180_init->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___ftadd
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lwtoft->___ftpack
    _BMP180_readInt->_I2Cdev_readBytes
    _BMP180_getTemperature->___ftadd
    ___lbtoft->___ftpack
    ___ftneg->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___awtoft
    ___ftadd->___ftneg
    _I2Cdev_readBytes->___wmul
    _WriteI2C->_IdleI2C

Critical Paths under _main in BANK0

    _main->_BMP180_init
    _BMP180_init->_pow

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  130666
                                             40 BANK0      4     4      0
              _BMP180_getTemperature
                        _BMP180_init
            _BMP180_startTemperature
                       _CAN_Transmit
                           ___lwtoft
                           _flashLED
                      _initI2C_USART
                       _setupCANTxRx
 ---------------------------------------------------------------------------------
 (1) _setupCANTxRx                                         0     0      0      66
                           _CAN_Init
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (2) _CAN_Init                                             0     0      0      44
                        _CAN_SetMode
 ---------------------------------------------------------------------------------
 (3) _CAN_SetMode                                          1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initI2C_USART                                        0     0      0     348
                       _Delay10KTCYx
                            _OpenI2C
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     229
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1      97
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _flashLED                                             2     2      0     116
                                              4 COMRAM     2     2      0
                            _delayzz
 ---------------------------------------------------------------------------------
 (2) _delayzz                                              4     4      0      92
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Transmit                                         5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _BMP180_startTemperature                              5     3      2    1022
                                              9 COMRAM     5     3      2
                  _I2Cdev_writeBytes
 ---------------------------------------------------------------------------------
 (2) _I2Cdev_writeBytes                                    6     2      4     951
                                              3 COMRAM     6     2      4
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _BMP180_init                                         68    66      2  104750
                                             11 BANK0     29    27      2
                     _BMP180_readInt
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lwtoft
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 17    11      6   77309
                                             89 COMRAM     6     0      6
                                              0 BANK0     11    11      0
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3   25836
                                             69 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                 13    10      3   39978
                                             76 COMRAM    13    10      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                7     2      5     354
                                             69 COMRAM     7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3    8904
                                             57 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     436
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     411
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     560
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4    2138
                                             15 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           12     5      7   11959
                                             57 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    5286
                                             57 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    2409
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    1963
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2048
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _BMP180_readInt                                       7     5      2    6062
                                             18 COMRAM     7     5      2
                   _I2Cdev_readBytes
 ---------------------------------------------------------------------------------
 (1) _BMP180_getTemperature                               16    13      3   22204
                                             57 COMRAM    16    13      3
                   _I2Cdev_readBytes
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lbtoft
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    1863
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     469
                                             42 COMRAM     3     0      3
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    5719
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    3473
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    5055
                                             45 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1841
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _I2Cdev_readBytes                                    12     8      4    5386
                                              6 COMRAM    12     8      4
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     689
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              1 COMRAM     2     2      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (4) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ReadI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP180_getTemperature
     _I2Cdev_readBytes
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
       ___wmul
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___ftneg
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
     ___lbtoft
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _BMP180_init
     _BMP180_readInt
       _I2Cdev_readBytes
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
         ___wmul
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___ftneg
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
     ___lwtoft
       ___ftpack
     _pow
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
       ___fttol
       ___lltoft
         ___ftpack
       _exp
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _frexp
   _BMP180_startTemperature
     _I2Cdev_writeBytes
       _IdleI2C
       _WriteI2C
         _IdleI2C
   _CAN_Transmit
   ___lwtoft
     ___ftpack
   _flashLED
     _delayzz
   _initI2C_USART
     _Delay10KTCYx
     _OpenI2C
     _OpenUSART
   _setupCANTxRx
     _CAN_Init
       _CAN_SetMode
     _Delay10KTCYx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      34       6       20.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     2C      9F       4       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     132       9        0.0%
DATA                 0      0     132      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Dec 11 21:32:03 2015

                               BMP180_getTemperature@result 0043  
                                              ___altoft@exp 0018  
                                               _SSPSTATbits 000FC7  
                                             ___altoft@sign 0019  
                                                        _D1 0108  
                                                        _D2 010C  
                                                        _T2 0114  
                                                        _MB 00AB  
                                                        _MC 00AD  
                                                        _MD 00AF  
                                                        _c5 0078  
                                                        _c6 007B  
                                                        _p0 0084  
                                                        _p1 0087  
                                                        _p2 008A  
                                                        _dT 0074  
                                                        _x0 008D  
                                                        _x1 0090  
                                                        _y0 0096  
                                                        _x2 0093  
                                                        _y1 0099  
                                                        _y2 009C  
                                               __CFG_BOR$ON 000000  
                                                        _mc 007E  
                                                        _md 0081  
                                       ___wmul@multiplicand 0003  
                                              __CFG_CP0$OFF 000000  
                                              __CFG_CP1$OFF 000000  
                                              __CFG_CP2$OFF 000000  
                                              __CFG_CP3$OFF 000000  
                                               __CFG_OSC$HS 000000  
                                              ___ftadd@exp1 0039  
                                              ___ftadd@exp2 0038  
                                              ___ftadd@sign 0037  
                                                       _AC1 009F  
                                                       _AC2 00A1  
                                                       _AC3 00A3  
                                                       _AC4 00A5  
                                                       _AC5 00A7  
                                                       l200 20D2  
                                                       _AC6 00A9  
                                                       l125 1612  
                                                       l142 16E8  
                                                       l134 16AA  
                                                       l128 1632  
                                                       l138 16B8  
                                                       l194 2088  
                                              __CFG_CPB$OFF 000000  
                                                       _VB1 00B3  
                                                       _VB2 00B5  
                                              __CFG_CPD$OFF 000000  
                                                       _exp 0D50  
                                                       _log 13D8  
                                                       _pow 1108  
                                              __CFG_BORV$25 000000  
                                                       wreg 000FE8  
                                      __end_of_CAN_Transmit 1EEE  
                                             _initI2C_USART 2232  
                                              __CFG_LVP$OFF 000000  
                                      __size_of_BMP180_init 0714  
                                              ___ftdiv@cntr 0016  
                                              ___ftdiv@sign 001B  
                                              __CFG_WDT$OFF 000000  
                                                      l2015 0F54  
                                                      l2018 0E14  
                                                      l2035 1D3A  
                                                      l2027 1600  
                                                      l2019 0F48  
                                                      l1412 1FBA  
                                                      l2029 15F4  
                                                      l1350 1FEE  
                                                      l1415 1F84  
                                                      l2039 17D8  
                                                      l1351 1FF8  
                                                      l1424 1FB0  
                                                      l1248 21B8  
                                                      l1352 1FFA  
                                                      l2057 14FE  
                                                      l1353 2004  
                                                      l1354 2006  
                                                      l1347 1FE2  
                                                      l1284 1E8C  
                                                      l1356 201A  
                                                      l1349 1FEC  
                                                      l1390 227E  
                                                      l1391 2280  
                                                      l1803 1078  
                                                      l1812 1094  
                                                      l1820 1A7C  
                                                      l5021 0DD4  
                                                      l1661 23A0  
                                                      l1751 1C00  
                                                      l1823 1A4C  
                                                      l5015 0DA2  
                                                      l5009 0D6A  
                                                      l1835 18C0  
                                                      l5043 0F1E  
                                                      l5115 20C4  
                                                      l1845 22CE  
                                                      l1829 1DCE  
                                                      l5109 20A8  
                                                      l1855 1B54  
                                                      l1792 0FCC  
                                                      l4521 0FAE  
                                                      l4505 1E0E  
                                                      l4507 1E1A  
                                                      l5227 21B2  
                                                      l1788 0FA0  
                                                      l4461 1B82  
                                                      l1789 1104  
                                                      l4613 1860  
                                                      l5181 113E  
                                                      l4471 1BDE  
                                                      l4463 1BA0  
                                                      l4455 1B6A  
                                                      l4551 1036  
                                                      l4543 100A  
                                                      l4527 0FDA  
                                                      l4623 1888  
                                                      l5167 211A  
                                                      l4703 1CD4  
                                                      l4561 1068  
                                                      l4553 103E  
                                                      l4609 1850  
                                                      l5281 1FD6  
                                                      l4467 1BB6  
                                                      l4459 1B78  
                                                      l4563 1072  
                                                      l4555 1046  
                                                      l4619 1878  
                                                      l4635 1D70  
                                                      l5195 11CE  
                                                      l5187 1156  
                                                      l1995 1286  
                                                      l5611 2294  
                                                      l4469 1BD4  
                                                      l4549 102C  
                                                      l4645 1DCC  
                                                      l4487 23E6  
                                                      l4735 1F90  
                                                      l4823 2154  
                                                      l4639 1DA0  
                                                      l4655 1A9C  
                                                      l1999 127A  
                                                      l5199 11F4  
                                                      l5527 0D40  
                                                      l5543 21EC  
                                                      l4913 1648  
                                                      l4569 10B0  
                                                      l5561 13CC  
                                                      l4673 1AF6  
                                                      l4841 1552  
                                                      l5289 1FE4  
                                                      l4931 16BC  
                                                      l4579 10E0  
                                                      l4595 181E  
                                                      l4691 1B44  
                                                      l4683 1B1E  
                                                      ?_exp 004D  
                                                      l4925 16B0  
                                                      l4933 16BE  
                                                      l4589 17F8  
                                                      l4685 1B2A  
                                                      l4677 1B06  
                                                      l4845 1560  
                                                      ?_log 0046  
                                                      l4775 19E8  
                                                      l4687 1B2E  
                                                      l4769 19C2  
                                                      l4857 190C  
                                                      l4849 157A  
                                                      l4795 1A26  
                                                      l4859 198E  
                                                      l4973 2026  
                                                      l4893 17A2  
                                                      l4877 1756  
                                                      l4975 2032  
                                                      l4889 1794  
                                                      l4993 1420  
                                                      l4969 23C0  
                                                      l6753 1C26  
                                                      l4987 13FA  
                                                      l6769 1C90  
                                                      ?_pow 005A  
                                                      _OFF2 0110  
                                                      u3025 169E  
                                                      u2321 0F6A  
                                                      u2305 1DF4  
                                                      u3210 0DEE  
                                                      u2331 0F7E  
                                                      u3215 0DE6  
                                                      u3240 0F12  
                                                      u3216 0DF0  
                                                      u2531 17EE  
                                                      u2621 1A92  
                                                      u3165 13EC  
                                                      u2710 1CFC  
                                                      u2551 1808  
                                                      u2560 1810  
                                                      u2640 1ABA  
                                                      u3435 1168  
                                                      u2645 1AB2  
                                                      u3445 11B0  
                                                      u2670 1B0C  
                                                      u2718 1CFE  
                                                      u2831 19B8  
                                                      u2851 19D2  
                                                      u2915 1542  
                                                      u4507 1C86  
                                                      u2860 19DA  
                                                      u4517 1C9C  
                                                      u4527 23A6  
                                                      u2960 1720  
                                                      u3855 1E7A  
                                                      u2968 1722  
                                                      u4497 1C48  
                                                      u2995 1784  
                                                      _TEMP 00CA  
                                              __CFG_PWRT$ON 000000  
                                                      _mbar 011C  
                                                      _main 1C04  
                                              ___ftpack@arg 0001  
                                              ___ftpack@exp 0004  
                                                      fsr2h 000FDA  
                                                      indf2 000FDF  
                                                      fsr2l 000FD9  
                                                      exp@x 004D  
                                                      log@x 0046  
                                                      pow@x 005A  
                                                      pow@y 005D  
                                                      prodh 000FF4  
                                                      prodl 000FF3  
                                                      start 0002  
                                 ??_BMP180_startTemperature 000C  
                                           __end_of_IdleI2C 23F8  
                                          _BMP180_init$3530 00F5  
                                          _BMP180_init$3531 00EC  
                                          _BMP180_init$3532 00E6  
                                          _BMP180_init$3527 00F8  
                                          _BMP180_init$3528 00E9  
                                          _BMP180_init$3529 00F2  
                                          __end_of_CAN_Init 1F56  
                                              ___ftmul@cntr 0029  
                                              ___ftmul@sign 002A  
                                           __end_of_ReadI2C 228A  
                                           __end_of_OpenI2C 239C  
                                         _I2Cdev_writeBytes 207E  
                                              ___fttol@exp1 000F  
                                                     ??_exp 0050  
                                                     ??_log 0049  
                                              ___fttol@lval 000B  
                                                     ??_pow 0060  
                                             __CFG_OSCS$OFF 000000  
                                        ?_I2Cdev_writeBytes 0004  
                                                     ?_main 0001  
                                           __end_of___ftadd 1108  
                                           __end_of___ftdiv 1A80  
                                           __end_of___ftneg 22DE  
                                           __end_of___ftmul 18C4  
                                           __end_of___ftsub 2232  
                                           __end_of___fttol 1B58  
                                                     _RCSTA 000FAB  
                                                     _SPBRG 000FAF  
                                                     _TRISB 000F93  
                                     __size_of_Delay10KTCYx 001C  
                                                     _TXSTA 000FAC  
                                             __CFG_WRT0$OFF 000000  
                                             __CFG_WRT1$OFF 000000  
                                             __CFG_WRT2$OFF 000000  
                                           __end_of_delayzz 21BC  
                                             __CFG_WRT3$OFF 000000  
                                              ___lltoft@exp 0011  
                                            __CFG_EBTR0$OFF 000000  
                                                     _Sens2 006C  
                                            __CFG_EBTR1$OFF 000000  
                                       ??_I2Cdev_writeBytes 0008  
                                            __CFG_EBTR2$OFF 000000  
                                            __CFG_EBTR3$OFF 000000  
                                            ?_initI2C_USART 0001  
                                             __CFG_STVR$OFF 000000  
                                             __CFG_WRTB$OFF 000000  
                                    ?_BMP180_getTemperature 003A  
                                             __CFG_WRTC$OFF 000000  
                                             __CFG_WRTD$OFF 000000  
                                      __size_of_CAN_SetMode 0018  
                                            __CFG_EBTRB$OFF 000000  
                                             ___awtoft@sign 000C  
                                                     _floor 1502  
                                                     _ldexp 16F2  
                                                     _frexp 1CA8  
                                                     _errno 0122  
                                                     _tempC 011F  
                                             ___ftpack@sign 0005  
                                                     tablat 000FF5  
                                                     pow@yi 00DA  
                                                     status 000FD8  
                                               exp@exponent 0057  
                                               ldexp@newexp 0049  
                                 __end_of_I2Cdev_writeBytes 20DC  
                                           __initialization 2358  
                                               log@exponent 0049  
                                              __end_of_main 1CA8  
                                              _Delay10KTCYx 239C  
                                                    ??_main 00FB  
                                             ___fttol@sign1 000A  
                                             __activetblptr 000002  
                                     I2Cdev_readBytes@count 0012  
                                   I2Cdev_writeBytes@length 0005  
                                                    _ADCON0 000FC2  
                                                    _ADCON1 000FC1  
                                                    ?_floor 003A  
                                                    ?_ldexp 0046  
                                                    ?_frexp 0001  
                                          __end_of___altoft 1E66  
                                                    _CANCON 000F6F  
                                    BMP180_getTemperature@T 003A  
                                          __end_of_WriteI2C 1FBE  
                                    BMP180_getTemperature@a 0047  
                                          __end_of___awtoft 217A  
                                          __end_of___ftpack 1C04  
                                          __end_of___lbtoft 2358  
                                          __end_of___lltoft 207E  
                                               OpenI2C@slew 0001  
                                          __end_of___lwtoft 2330  
                                                 ??_IdleI2C 0001  
                                                    _RXB0D0 000F66  
                                                    _RXB0D1 000F67  
                                                    _RXB0D2 000F68  
                                                    _RXB0D3 000F69  
                                                    _RXB0D4 000F6A  
                                                    _RXB0D5 000F6B  
                                                    _RXB0D6 000F6C  
                                                    _RXB0D7 000F6D  
                                            __CFG_WDTPS$128 000000  
                                                    _TXB0D0 000F46  
                                                    _TXB0D1 000F47  
                                                    _TXB0D2 000F48  
                                                    _TXB0D3 000F49  
                                                    _TXB0D4 000F4A  
                                                    _TXB0D5 000F4B  
                                                    _TXB0D6 000F4C  
                                                    _TXB0D7 000F4D  
                                                    _SSPADD 000FC8  
                                                    _SSPBUF 000FC9  
                                                 ??_ReadI2C 0001  
                                                 ??_OpenI2C 0002  
                                                    _Offset 0068  
                                          __end_of_flashLED 22B4  
                                        __size_of_OpenUSART 0060  
                                  __end_of_I2Cdev_readBytes 16F2  
                                                    ___ftge 1D3E  
                                                    ___wmul 22DE  
                                                 ??___ftadd 0034  
                                                    __error 00BA  
                                                 ??___ftdiv 0013  
                                                _Resolution 00B1  
                                                 ??___ftneg 002E  
                                                 ??___ftmul 0022  
                                                 ??___ftsub 0040  
                                                 ??___fttol 0005  
                                                    clear_0 235E  
                                                    clear_1 236A  
                                                 ??_delayzz 0001  
                                                    floor@i 003D  
                                     __size_of_CAN_Transmit 0088  
                                                    floor@x 003A  
                                     ___ftmul@f3_as_product 0026  
                                           ??_initI2C_USART 0004  
                                              __mediumconst 0000  
                                                    tblptrh 000FF7  
                                                    tblptrl 000FF6  
                                                    tblptru 000FF8  
                                                 ?_CAN_Init 0001  
                                          __end_ofexp@coeff 061F  
                                          __end_oflog@coeff 063A  
                                                __accesstop 0060  
                                   __end_of__initialization 2370  
                                                ___altoft@c 0010  
                                                ___ftadd@f1 002E  
                                                ___ftadd@f2 0031  
                                                ___ftge@ff1 0001  
                                                ___ftge@ff2 0004  
                                        CAN_SetMode@canMode 0001  
                                              eval_poly@res 0043  
                                                ___ftdiv@f1 000D  
                                                ___ftdiv@f2 0010  
                                                ___ftdiv@f3 0017  
                                                ___ftneg@f1 002B  
                                                ___awtoft@c 0009  
                                                ___lbtoft@c 000C  
                                                ___ftmul@f1 001C  
                                                ___ftmul@f2 001F  
                                __size_of_I2Cdev_writeBytes 005E  
                                                ___ftsub@f1 003A  
                                                ___ftsub@f2 003D  
                                                ___fttol@f1 0001  
                                            __pcstackCOMRAM 0001  
                                              _CAN_Transmit 1E66  
                                                ___lltoft@c 0009  
                                             __end_of_floor 1604  
                                             __end_of_ldexp 17DC  
                                             __end_of_frexp 1D3E  
                                                ___lwtoft@c 0009  
                                                ??_CAN_Init 0002  
                                         __end_of_OpenUSART 201E  
                                                   ??_floor 003D  
                                                   ??_ldexp 004B  
                                                   ??_frexp 0006  
                                                __pbssBANK0 0060  
                                                __pbssBANK1 0100  
                                        __size_of_eval_poly 00E2  
                                _BMP180_getTemperature$3533 0040  
                                   __size_of_BMP180_readInt 0052  
                                  I2Cdev_writeBytes@devAddr 0008  
                                    I2Cdev_readBytes@length 0008  
                                                   ?___ftge 0001  
                                  I2Cdev_writeBytes@regAddr 0004  
                                                   ?___wmul 0001  
                                                 ?___altoft 0010  
                                        BMP180_readInt@data 0018  
                                 convertFrom16To8@arrayData 00D1  
                                                   _CANSTAT 000F6E  
                                                 ?_WriteI2C 0001  
                                                 ?___awtoft 0009  
                                                 ?___ftpack 0001  
                                                 ?___lbtoft 0009  
                                                 ?___lltoft 0009  
                                                   _BRGCON1 000F70  
                                                   _BRGCON2 000F71  
                                                   _BRGCON3 000F72  
                                   BMP180_getTemperature@tu 003D  
                                                 ?___lwtoft 0009  
                                   ??_BMP180_getTemperature 003D  
                               BMP180_startTemperature@data 000C  
                                             ??_BMP180_init 0060  
                                                   _RXB0CON 000F60  
                                                   _RXB1CON 000F50  
                                                   _TXB0DLC 000F45  
                                                   _TXB0CON 000F40  
                                                 ?_flashLED 0001  
                                                   _SSPCON1 000FC6  
                                                   _SSPCON2 000FC5  
                                                   _SSPSTAT 000FC7  
                                                   _IdleI2C 23E4  
                                                 _I2C_Bytes 00CE  
                                                   _MidByte 00B9  
                                                   _ReadI2C 225E  
                                                   _OpenI2C 237A  
                                                   _LowByte 00B8  
                                                   __Hparam 0000  
                                                   __Lparam 0000  
                                           __size_of___ftge 0094  
                                                   ___ftadd 0F58  
                                                   ___ftdiv 19A6  
                                                   ___ftneg 22B4  
                                           __size_of___wmul 002A  
                                                   ___ftmul 17DC  
                                                   ___ftsub 21F8  
                                                   ___fttol 1A80  
                                              __psmallconst 0600  
                                                ??___altoft 0014  
                                                   __pcinit 2358  
                                               _Sensitivity 0070  
                                                ??_WriteI2C 0002  
                                                ??___awtoft 000C  
                                                ??___ftpack 0006  
                                                ??___lbtoft 000C  
                                         __end_of_eval_poly 19A6  
                                                   __ramtop 0600  
                                                   _delayzz 217A  
                                                ??___lltoft 000D  
                                                   __ptext0 1C04  
                                                   __ptext1 23D0  
                                                   __ptext2 1EEE  
                                                   __ptext3 23B8  
                                                   __ptext4 2232  
                                                   __ptext5 1FBE  
                                                   __ptext6 237A  
                                                   __ptext7 239C  
                                                   __ptext8 228A  
                                                   __ptext9 217A  
                                                   _mbarInt 0118  
                                                   _mpu6050 00BB  
                                                ??___lwtoft 000C  
                                             ??_CAN_SetMode 0001  
                                              __size_of_exp 0208  
                                              __size_of_log 012A  
                                              __size_of_pow 0182  
                                             ?_setupCANTxRx 0001  
                                                ??_flashLED 0005  
                                      end_of_initialization 2370  
                                                   exp@sign 0059  
                                       __end_of_BMP180_init 0D50  
                                  ?_BMP180_startTemperature 000A  
                                             __Lmediumconst 0000  
                                                   pow@sign 00D9  
                                                 _RCSTAbits 000FAB  
                                                   postdec2 000FDD  
                                                   postinc0 000FEE  
                                                   postinc2 000FDE  
                                         ?_I2Cdev_readBytes 0007  
                                        ??_I2Cdev_readBytes 000B  
                                            ??_setupCANTxRx 0003  
                                                 _TRISBbits 000F93  
                                                 _TRISCbits 000F94  
                                       __end_of_CAN_SetMode 23D0  
                                         __size_of_CAN_Init 0068  
                                               ___ftdiv@exp 001A  
                                            _BMP180_readInt 20DC  
                                                 _TXSTAbits 000FAC  
                                               ___ftmul@exp 0025  
                                     I2Cdev_writeBytes@data 0006  
                                            __end_of___ftge 1DD2  
                                            __end_of___wmul 2308  
                                                floor@expon 0040  
                                       start_initialization 2358  
                                                eval_poly@d 003D  
                                                eval_poly@n 003F  
                                                eval_poly@x 003A  
                                               _BMP180_init 063C  
                                     __end_of_initI2C_USART 225E  
                                                ldexp@value 0046  
                           __end_of_BMP180_startTemperature 21F8  
                                               __end_of_exp 0F58  
                                               __end_of_log 1502  
                                               __end_of_pow 128A  
                                          WriteI2C@data_out 0003  
                                      I2Cdev_readBytes@data 0009  
                                    __end_of_BMP180_readInt 212E  
                                                frexp@value 0001  
                                                 _OpenUSART 1FBE  
                                                  ??___ftge 0007  
                                                  ??___wmul 0005  
                                         __size_of___altoft 0094  
                                         __size_of_WriteI2C 0068  
                                         __size_of___awtoft 004C  
                                         __size_of___ftpack 00AC  
                                         __size_of___lbtoft 0028  
                                               _CAN_SetMode 23B8  
                                         __size_of___lltoft 0060  
                            __size_of_BMP180_getTemperature 014E  
                                         __size_of___lwtoft 0028  
                             __end_of_BMP180_getTemperature 13D8  
                                             __pcstackBANK0 00D3  
                                   I2Cdev_readBytes@devAddr 0011  
                                         __size_of_flashLED 002A  
                                           ?_BMP180_readInt 0013  
                                                  ?_IdleI2C 0001  
                                                ?_OpenUSART 0001  
                                   I2Cdev_readBytes@regAddr 0007  
                                                  ?_ReadI2C 0001  
                                                  ?_OpenI2C 0001  
                                      __end_of_setupCANTxRx 23E4  
                                                  ?___ftadd 002E  
                                                  ?___ftdiv 000D  
                                                  ?___ftneg 002B  
                                                  ?___ftmul 001C  
                                                  ?___ftsub 003A  
                                                  ?___fttol 0001  
                                             ?_Delay10KTCYx 0001  
                                         CAN_Transmit@canId 0004  
                                                  ?_delayzz 0001  
                                               __smallconst 0600  
                                                 _eval_poly 18C4  
                                       BMP180_readInt@value 0013  
                                                  _CAN_Init 1EEE  
                                            __size_of_floor 0102  
                                            __size_of_ldexp 00EA  
                                            __size_of_frexp 0096  
                                              _receivedData 0100  
                                            ___wmul@product 0005  
                                                  _LATBbits 000F8A  
                                                  _PIE1bits 000F9D  
                                                  _PIR1bits 000F9E  
                                                  _RXB0SIDH 000F61  
                                                  _RXB0SIDL 000F62  
                                            ??_Delay10KTCYx 0001  
                                                  _RXF0SIDL 000F01  
                                                  _RXF1SIDL 000F05  
                                                  _RXF2SIDL 000F09  
                                                  _RXF3SIDL 000F0D  
                                                  _RXF4SIDL 000F11  
                                                  _RXF5SIDL 000F15  
                         BMP180_startTemperature@resultBool 000E  
                                                  _TXB0SIDH 000F41  
                                                  _TXB0SIDL 000F42  
                                                  _RXM0SIDH 000F18  
                          __size_of_BMP180_startTemperature 003C  
                                                  _RXM0SIDL 000F19  
                                                  _RXM1SIDH 000F1C  
                                                  _RXM1SIDL 000F1D  
                                                _ADCON0bits 000FC2  
                                         ___wmul@multiplier 0001  
                                                ?_eval_poly 003A  
                                          Delay10KTCYx@unit 0002  
                                 __size_of_I2Cdev_readBytes 00EE  
                                                  _HighByte 00B7  
                                     BMP180_readInt@address 0017  
                                          OpenI2C@sync_mode 0002  
                                               ??_OpenUSART 0003  
                                          __size_of_IdleI2C 0014  
                                           OpenUSART@config 0003  
                                             BMP180_init@b1 00E3  
                                             BMP180_init@c3 00E0  
                                             BMP180_init@c4 00EF  
                                                 frexp@eptr 0004  
                                          __size_of_ReadI2C 002C  
                                                  __Hrparam 0000  
                                          __size_of_OpenI2C 0022  
                                                  __Lrparam 0000  
                                             ?_CAN_Transmit 0001  
                                          __size_of___ftadd 01B0  
                                          __size_of___ftdiv 00DA  
                                          __size_of___ftneg 002A  
                                                  ___altoft 1DD2  
                                          __size_of___ftmul 00E8  
                                          __size_of___ftsub 003A  
                                          __size_of___fttol 00D8  
                                                  _WriteI2C 1F56  
                                                  ___awtoft 212E  
                                                  ___ftpack 1B58  
                                                  ___lbtoft 2330  
                                                  ___lltoft 201E  
                                                  ___lwtoft 2308  
                                          __size_of_delayzz 0042  
                                                  _exp$3543 0054  
                                              ?_BMP180_init 00DE  
                                                  __ptext10 1E66  
                                                  __ptext11 21BC  
                                                  __ptext20 1A80  
                                                  __ptext12 207E  
                                                  __ptext21 1D3E  
                                                  __ptext13 063C  
                                                  __ptext30 2330  
                                                  __ptext22 1DD2  
                                                  __ptext14 1108  
                                                  __ptext31 22B4  
                                                  __ptext23 18C4  
                                                  __ptext15 13D8  
                                                  __ptext40 225E  
                                                  __ptext32 17DC  
                                                  __ptext24 21F8  
                                                  __ptext16 0D50  
                                                  __ptext33 19A6  
                                                  __ptext25 212E  
                                                  __ptext17 16F2  
                                                  __ptext34 0F58  
                                                  __ptext26 201E  
                                                  __ptext18 1502  
                                                  __ptext35 1B58  
                                                  __ptext27 2308  
                                                  __ptext19 1CA8  
                                                  __ptext36 1604  
                                                  __ptext28 20DC  
                                                  __ptext37 22DE  
                                                  __ptext29 128A  
                                                  __ptext38 1F56  
                                                  __ptext39 23E4  
                                                  _flashLED 228A  
                                                  _pow$3541 00D3  
                                                  _pow$3542 00D6  
                                     __size_of_setupCANTxRx 0014  
                                             __size_of_main 00A4  
                                                  _sendData 0060  
                                                  delayzz@i 0001  
                                                  delayzz@j 0003  
                                             flashLED@count 0005  
                                            ??_CAN_Transmit 0001  
                                                  main@temp 00FC  
                                                  exp@coeff 0601  
                                                  log@coeff 061F  
                                              ?_CAN_SetMode 0001  
                                                _INTCONbits 000FF2  
                                               ??_eval_poly 0041  
                                            OpenUSART@spbrg 0001  
                                          ??_BMP180_readInt 0015  
                                              _sensorCoeffs 0124  
                                              _setupCANTxRx 23D0  
                                      __end_of_Delay10KTCYx 23B8  
                                   _BMP180_startTemperature 21BC  
                                    __size_of_initI2C_USART 002C  
                                        I2Cdev_writeBytes@i 0009  
                                               _SSPCON1bits 000FC6  
                                          _I2Cdev_readBytes 1604  
                                               _SSPCON2bits 000FC5  
                                     _BMP180_getTemperature 128A  
                                 BMP180_getTemperature@data 0045  
