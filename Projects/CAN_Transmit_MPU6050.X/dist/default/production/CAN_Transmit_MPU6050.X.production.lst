

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Dec 11 17:33:43 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F458
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           	psect	smallconst
    46  000600                     __psmallconst:
    47                           	opt stack 0
    48  000600  00                 	db	0
    49  000601                     exp@coeff:
    50                           	opt stack 0
    51  000601  00                 	db	0
    52  000602  80                 	db	128
    53  000603  3F                 	db	63
    54  000604  72                 	db	114
    55  000605  31                 	db	49
    56  000606  3F                 	db	63
    57  000607  FE                 	db	254
    58  000608  75                 	db	117
    59  000609  3E                 	db	62
    60  00060A  58                 	db	88
    61  00060B  63                 	db	99
    62  00060C  3D                 	db	61
    63  00060D  95                 	db	149
    64  00060E  1D                 	db	29
    65  00060F  3C                 	db	60
    66  000610  C5                 	db	197
    67  000611  AE                 	db	174
    68  000612  3A                 	db	58
    69  000613  79                 	db	121
    70  000614  21                 	db	33
    71  000615  39                 	db	57
    72  000616  94                 	db	148
    73  000617  80                 	db	128
    74  000618  37                 	db	55
    75  000619  93                 	db	147
    76  00061A  A7                 	db	167
    77  00061B  35                 	db	53
    78  00061C  56                 	db	86
    79  00061D  15                 	db	21
    80  00061E  34                 	db	52
    81  00061F                     __end_ofexp@coeff:
    82                           	opt stack 0
    83  00061F                     log@coeff:
    84                           	opt stack 0
    85  00061F  00                 	db	0
    86  000620  00                 	db	0
    87  000621  00                 	db	0
    88  000622  00                 	db	0
    89  000623  80                 	db	128
    90  000624  3F                 	db	63
    91  000625  F0                 	db	240
    92  000626  FF                 	db	255
    93  000627  BE                 	db	190
    94  000628  E2                 	db	226
    95  000629  A9                 	db	169
    96  00062A  3E                 	db	62
    97  00062B  83                 	db	131
    98  00062C  76                 	db	118
    99  00062D  BE                 	db	190
   100  00062E  AE                 	db	174
   101  00062F  2B                 	db	43
   102  000630  3E                 	db	62
   103  000631  3C                 	db	60
   104  000632  C3                 	db	195
   105  000633  BD                 	db	189
   106  000634  D2                 	db	210
   107  000635  13                 	db	19
   108  000636  3D                 	db	61
   109  000637  78                 	db	120
   110  000638  D3                 	db	211
   111  000639  BB                 	db	187
   112  00063A                     __end_oflog@coeff:
   113                           	opt stack 0
   114  0000                     _ADCON0	set	4034
   115  0000                     _ADCON0bits	set	4034
   116  0000                     _ADCON1	set	4033
   117  0000                     _BRGCON1	set	3952
   118  0000                     _BRGCON2	set	3953
   119  0000                     _BRGCON3	set	3954
   120  0000                     _CANCON	set	3951
   121  0000                     _CANSTAT	set	3950
   122  0000                     _INTCONbits	set	4082
   123  0000                     _LATBbits	set	3978
   124  0000                     _PIE1bits	set	3997
   125  0000                     _PIR1bits	set	3998
   126  0000                     _RCSTA	set	4011
   127  0000                     _RCSTAbits	set	4011
   128  0000                     _RXB0CON	set	3936
   129  0000                     _RXB0D0	set	3942
   130  0000                     _RXB0D1	set	3943
   131  0000                     _RXB0D2	set	3944
   132  0000                     _RXB0D3	set	3945
   133  0000                     _RXB0D4	set	3946
   134  0000                     _RXB0D5	set	3947
   135  0000                     _RXB0D6	set	3948
   136  0000                     _RXB0D7	set	3949
   137  0000                     _RXB0SIDH	set	3937
   138  0000                     _RXB0SIDL	set	3938
   139  0000                     _RXB1CON	set	3920
   140  0000                     _RXF0SIDL	set	3841
   141  0000                     _RXF1SIDL	set	3845
   142  0000                     _RXF2SIDL	set	3849
   143  0000                     _RXF3SIDL	set	3853
   144  0000                     _RXF4SIDL	set	3857
   145  0000                     _RXF5SIDL	set	3861
   146  0000                     _RXM0SIDH	set	3864
   147  0000                     _RXM0SIDL	set	3865
   148  0000                     _RXM1SIDH	set	3868
   149  0000                     _RXM1SIDL	set	3869
   150  0000                     _SPBRG	set	4015
   151  0000                     _SSPADD	set	4040
   152  0000                     _SSPBUF	set	4041
   153  0000                     _SSPCON1	set	4038
   154  0000                     _SSPCON1bits	set	4038
   155  0000                     _SSPCON2	set	4037
   156  0000                     _SSPCON2bits	set	4037
   157  0000                     _SSPSTAT	set	4039
   158  0000                     _SSPSTATbits	set	4039
   159  0000                     _TRISB	set	3987
   160  0000                     _TRISBbits	set	3987
   161  0000                     _TRISCbits	set	3988
   162  0000                     _TXB0CON	set	3904
   163  0000                     _TXB0D0	set	3910
   164  0000                     _TXB0D1	set	3911
   165  0000                     _TXB0D2	set	3912
   166  0000                     _TXB0D3	set	3913
   167  0000                     _TXB0D4	set	3914
   168  0000                     _TXB0D5	set	3915
   169  0000                     _TXB0D6	set	3916
   170  0000                     _TXB0D7	set	3917
   171  0000                     _TXB0DLC	set	3909
   172  0000                     _TXB0SIDH	set	3905
   173  0000                     _TXB0SIDL	set	3906
   174  0000                     _TXSTA	set	4012
   175  0000                     _TXSTAbits	set	4012
   176                           
   177                           ; #config settings
   178  00063A  00                 	db	0	; dummy byte at the end
   179  0000                     
   180                           	psect	cinit
   181  000E02                     __pcinit:
   182                           	opt stack 0
   183  000E02                     start_initialization:
   184                           	opt stack 0
   185  000E02                     __initialization:
   186                           	opt stack 0
   187                           
   188                           ; Clear objects allocated to BANK0 (124 bytes)
   189  000E02  EE00  F060         	lfsr	0,__pbssBANK0
   190  000E06  0E7C               	movlw	124
   191  000E08                     clear_0:
   192  000E08  6AEE               	clrf	postinc0,c
   193  000E0A  06E8               	decf	wreg,f,c
   194  000E0C  E1FD               	bnz	clear_0
   195                           
   196                           ; Clear objects allocated to COMRAM (43 bytes)
   197  000E0E  EE00  F034         	lfsr	0,__pbssCOMRAM
   198  000E12  0E2B               	movlw	43
   199  000E14                     clear_1:
   200  000E14  6AEE               	clrf	postinc0,c
   201  000E16  06E8               	decf	wreg,f,c
   202  000E18  E1FD               	bnz	clear_1
   203  000E1A                     end_of_initialization:
   204                           	opt stack 0
   205  000E1A                     __end_of__initialization:
   206                           	opt stack 0
   207  000E1A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   208  000E1C  6EF8               	movwf	tblptru,c
   209  000E1E  0100               	movlb	0
   210  000E20  EF1E  F003         	goto	_main	;jump to C main() function
   211                           tblptru	equ	0xFF8
   212                           postinc0	equ	0xFEE
   213                           wreg	equ	0xFE8
   214                           
   215                           	psect	bssCOMRAM
   216  000034                     __pbssCOMRAM:
   217                           	opt stack 0
   218  000034                     _AC1:
   219                           	opt stack 0
   220  000034                     	ds	2
   221  000036                     _AC2:
   222                           	opt stack 0
   223  000036                     	ds	2
   224  000038                     _AC3:
   225                           	opt stack 0
   226  000038                     	ds	2
   227  00003A                     _AC4:
   228                           	opt stack 0
   229  00003A                     	ds	2
   230  00003C                     _AC5:
   231                           	opt stack 0
   232  00003C                     	ds	2
   233  00003E                     _MC:
   234                           	opt stack 0
   235  00003E                     	ds	2
   236  000040                     _MD:
   237                           	opt stack 0
   238  000040                     	ds	2
   239  000042                     _Resolution:
   240                           	opt stack 0
   241  000042                     	ds	2
   242  000044                     _VB1:
   243                           	opt stack 0
   244  000044                     	ds	2
   245  000046                     _VB2:
   246                           	opt stack 0
   247  000046                     	ds	2
   248  000048                     _HighByte:
   249                           	opt stack 0
   250  000048                     	ds	1
   251  000049                     _LowByte:
   252                           	opt stack 0
   253  000049                     	ds	1
   254  00004A                     _MidByte:
   255                           	opt stack 0
   256  00004A                     	ds	1
   257  00004B                     __error:
   258                           	opt stack 0
   259  00004B                     	ds	1
   260  00004C                     _mpu6050:
   261                           	opt stack 0
   262  00004C                     	ds	15
   263  00005B                     _TEMP:
   264                           	opt stack 0
   265  00005B                     	ds	4
   266                           tblptru	equ	0xFF8
   267                           postinc0	equ	0xFEE
   268                           wreg	equ	0xFE8
   269                           
   270                           	psect	bssBANK0
   271  000060                     __pbssBANK0:
   272                           	opt stack 0
   273  000060                     _receivedData:
   274                           	opt stack 0
   275  000060                     	ds	8
   276  000068                     _sendData:
   277                           	opt stack 0
   278  000068                     	ds	8
   279  000070                     _D1:
   280                           	opt stack 0
   281  000070                     	ds	4
   282  000074                     _D2:
   283                           	opt stack 0
   284  000074                     	ds	4
   285  000078                     _OFF2:
   286                           	opt stack 0
   287  000078                     	ds	4
   288  00007C                     _Offset:
   289                           	opt stack 0
   290  00007C                     	ds	4
   291  000080                     _Sens2:
   292                           	opt stack 0
   293  000080                     	ds	4
   294  000084                     _Sensitivity:
   295                           	opt stack 0
   296  000084                     	ds	4
   297  000088                     _T2:
   298                           	opt stack 0
   299  000088                     	ds	4
   300  00008C                     _dT:
   301                           	opt stack 0
   302  00008C                     	ds	4
   303  000090                     _mbarInt:
   304                           	opt stack 0
   305  000090                     	ds	4
   306  000094                     _c5:
   307                           	opt stack 0
   308  000094                     	ds	3
   309  000097                     _c6:
   310                           	opt stack 0
   311  000097                     	ds	3
   312  00009A                     _mbar:
   313                           	opt stack 0
   314  00009A                     	ds	3
   315  00009D                     _mc:
   316                           	opt stack 0
   317  00009D                     	ds	3
   318  0000A0                     _md:
   319                           	opt stack 0
   320  0000A0                     	ds	3
   321  0000A3                     _p0:
   322                           	opt stack 0
   323  0000A3                     	ds	3
   324  0000A6                     _p1:
   325                           	opt stack 0
   326  0000A6                     	ds	3
   327  0000A9                     _p2:
   328                           	opt stack 0
   329  0000A9                     	ds	3
   330  0000AC                     _tempC:
   331                           	opt stack 0
   332  0000AC                     	ds	3
   333  0000AF                     _x0:
   334                           	opt stack 0
   335  0000AF                     	ds	3
   336  0000B2                     _x1:
   337                           	opt stack 0
   338  0000B2                     	ds	3
   339  0000B5                     _x2:
   340                           	opt stack 0
   341  0000B5                     	ds	3
   342  0000B8                     _y0:
   343                           	opt stack 0
   344  0000B8                     	ds	3
   345  0000BB                     _y1:
   346                           	opt stack 0
   347  0000BB                     	ds	3
   348  0000BE                     _y2:
   349                           	opt stack 0
   350  0000BE                     	ds	3
   351  0000C1                     _AC6:
   352                           	opt stack 0
   353  0000C1                     	ds	2
   354  0000C3                     _MB:
   355                           	opt stack 0
   356  0000C3                     	ds	2
   357  0000C5                     _errno:
   358                           	opt stack 0
   359  0000C5                     	ds	2
   360  0000C7                     _sensorCoeffs:
   361                           	opt stack 0
   362  0000C7                     	ds	16
   363  0000D7                     _I2C_Bytes:
   364                           	opt stack 0
   365  0000D7                     	ds	3
   366  0000DA                     convertFrom16To8@arrayData:
   367                           	opt stack 0
   368  0000DA                     	ds	2
   369                           tblptru	equ	0xFF8
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           
   373                           	psect	cstackCOMRAM
   374  000001                     __pcstackCOMRAM:
   375                           	opt stack 0
   376  000001                     ??_IdleI2C:
   377  000001                     ??_ReadI2C:
   378  000001                     ??_Delay10KTCYx:
   379  000001                     ??_CAN_Transmit:
   380  000001                     ?_convertFrom16To8:
   381                           	opt stack 0
   382  000001                     ?___wmul:
   383                           	opt stack 0
   384  000001                     MPU6050@address:
   385                           	opt stack 0
   386  000001                     CAN_SetMode@canMode:
   387                           	opt stack 0
   388  000001                     OpenI2C@slew:
   389                           	opt stack 0
   390  000001                     delayzz@i:
   391                           	opt stack 0
   392  000001                     convertFrom16To8@dataAll:
   393                           	opt stack 0
   394  000001                     OpenUSART@spbrg:
   395                           	opt stack 0
   396  000001                     ___wmul@multiplier:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x0
   400  000001                     	ds	1
   401  000002                     ??_WriteI2C:
   402  000002                     OpenI2C@sync_mode:
   403                           	opt stack 0
   404  000002                     Delay10KTCYx@unit:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0x1
   408  000002                     	ds	1
   409  000003                     ??_convertFrom16To8:
   410  000003                     OpenUSART@config:
   411                           	opt stack 0
   412  000003                     WriteI2C@data_out:
   413                           	opt stack 0
   414  000003                     delayzz@j:
   415                           	opt stack 0
   416  000003                     ___wmul@multiplicand:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x2
   420  000003                     	ds	1
   421  000004                     I2Cdev_writeBytes@regAddr:
   422                           	opt stack 0
   423  000004                     CAN_Transmit@canId:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x3
   427  000004                     	ds	1
   428  000005                     I2Cdev_writeBytes@length:
   429                           	opt stack 0
   430  000005                     flashLED@count:
   431                           	opt stack 0
   432  000005                     ___wmul@product:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x4
   436  000005                     	ds	1
   437  000006                     I2Cdev_writeBytes@data:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x5
   441  000006                     	ds	1
   442  000007                     I2Cdev_readBytes@regAddr:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x6
   446  000007                     	ds	1
   447  000008                     I2Cdev_readBytes@length:
   448                           	opt stack 0
   449  000008                     I2Cdev_writeBytes@devAddr:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x7
   453  000008                     	ds	1
   454  000009                     I2Cdev_writeBytes@i:
   455                           	opt stack 0
   456  000009                     I2Cdev_readBytes@data:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x8
   460  000009                     	ds	1
   461  00000A                     I2Cdev_writeByte@regAddr:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x9
   465  00000A                     	ds	1
   466  00000B                     ??_I2Cdev_readBytes:
   467  00000B                     I2Cdev_writeByte@data:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0xA
   471  00000B                     	ds	1
   472  00000C                     I2Cdev_writeByte@devAddr:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0xB
   476  00000C                     	ds	5
   477  000011                     I2Cdev_readBytes@devAddr:
   478                           	opt stack 0
   479                           
   480                           ; 1 bytes @ 0x10
   481  000011                     	ds	1
   482  000012                     I2Cdev_readBytes@count:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x11
   486  000012                     	ds	1
   487  000013                     I2Cdev_readByte@regAddr:
   488                           	opt stack 0
   489  000013                     MPU6050_getMotion6@ax:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x12
   493  000013                     	ds	1
   494  000014                     I2Cdev_readByte@data:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x13
   498  000014                     	ds	1
   499  000015                     MPU6050_getMotion6@ay:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x14
   503  000015                     	ds	1
   504  000016                     I2Cdev_readByte@devAddr:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x15
   508  000016                     	ds	1
   509  000017                     I2Cdev_readBits@regAddr:
   510                           	opt stack 0
   511  000017                     I2Cdev_writeBit@regAddr:
   512                           	opt stack 0
   513  000017                     I2Cdev_writeBits@regAddr:
   514                           	opt stack 0
   515  000017                     MPU6050_getMotion6@az:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x16
   519  000017                     	ds	1
   520  000018                     I2Cdev_readBits@bitStart:
   521                           	opt stack 0
   522  000018                     I2Cdev_writeBit@bitNum:
   523                           	opt stack 0
   524  000018                     I2Cdev_writeBits@bitStart:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x17
   528  000018                     	ds	1
   529  000019                     I2Cdev_readBits@length:
   530                           	opt stack 0
   531  000019                     I2Cdev_writeBit@data:
   532                           	opt stack 0
   533  000019                     I2Cdev_writeBits@length:
   534                           	opt stack 0
   535  000019                     MPU6050_getMotion6@gx:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x18
   539  000019                     	ds	1
   540  00001A                     ??_I2Cdev_writeBit:
   541  00001A                     I2Cdev_writeBits@data:
   542                           	opt stack 0
   543  00001A                     I2Cdev_readBits@data:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x19
   547  00001A                     	ds	1
   548  00001B                     ??_I2Cdev_writeBits:
   549  00001B                     MPU6050_getMotion6@gy:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x1A
   553  00001B                     	ds	1
   554  00001C                     ??_I2Cdev_readBits:
   555                           
   556                           ; 0 bytes @ 0x1B
   557  00001C                     	ds	1
   558  00001D                     MPU6050_getMotion6@gz:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x1C
   562  00001D                     	ds	1
   563  00001E                     I2Cdev_writeBits@devAddr:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x1D
   567  00001E                     	ds	1
   568  00001F                     ??_MPU6050_getMotion6:
   569  00001F                     I2Cdev_readBits@count:
   570                           	opt stack 0
   571  00001F                     I2Cdev_writeBits@mask:
   572                           	opt stack 0
   573  00001F                     _I2Cdev_writeBit$423:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x1E
   577  00001F                     	ds	1
   578  000020                     I2Cdev_readBits@devAddr:
   579                           	opt stack 0
   580  000020                     I2Cdev_writeBits@b:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x1F
   584  000020                     	ds	1
   585  000021                     I2Cdev_readBits@mask:
   586                           	opt stack 0
   587  000021                     I2Cdev_writeBit@devAddr:
   588                           	opt stack 0
   589  000021                     MPU6050_setFullScaleGyroRange@range:
   590                           	opt stack 0
   591  000021                     MPU6050_setFullScaleAccelRange@range:
   592                           	opt stack 0
   593  000021                     MPU6050_setClockSource@source:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x20
   597  000021                     	ds	1
   598  000022                     I2Cdev_readBits@b:
   599                           	opt stack 0
   600  000022                     I2Cdev_writeBit@b:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x21
   604  000022                     	ds	1
   605  000023                     MPU6050_setSleepEnabled@enabled:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x22
   609  000023                     	ds	1
   610  000024                     ??_main:
   611                           
   612                           ; 0 bytes @ 0x23
   613  000024                     	ds	1
   614  000025                     main@gx:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x24
   618  000025                     	ds	2
   619  000027                     main@gy:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x26
   623  000027                     	ds	2
   624  000029                     main@gz:
   625                           	opt stack 0
   626                           
   627                           ; 2 bytes @ 0x28
   628  000029                     	ds	2
   629  00002B                     main@AFS_SEL:
   630                           	opt stack 0
   631                           
   632                           ; 1 bytes @ 0x2A
   633  00002B                     	ds	1
   634  00002C                     main@ax:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0x2B
   638  00002C                     	ds	2
   639  00002E                     main@az:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x2D
   643  00002E                     	ds	2
   644  000030                     main@ay:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x2F
   648  000030                     	ds	2
   649  000032                     main@a_unsigned_array:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x31
   653  000032                     	ds	2
   654                           tblptru	equ	0xFF8
   655                           postinc0	equ	0xFEE
   656                           wreg	equ	0xFE8
   657                           
   658 ;;
   659 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   660 ;;
   661 ;; *************** function _main *****************
   662 ;; Defined at:
   663 ;;		line 100 in file "main.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;  AFS_SEL         1   42[COMRAM] unsigned char 
   668 ;;  a_unsigned_a    2   49[COMRAM] unsigned char [2]
   669 ;;  ay              2   47[COMRAM] int 
   670 ;;  az              2   45[COMRAM] int 
   671 ;;  ax              2   43[COMRAM] int 
   672 ;;  gz              2   40[COMRAM] int 
   673 ;;  gy              2   38[COMRAM] int 
   674 ;;  gx              2   36[COMRAM] int 
   675 ;; Return value:  Size  Location     Type
   676 ;;		None               void
   677 ;; Registers used:
   678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   684 ;;      Params:         0       0       0       0       0       0       0
   685 ;;      Locals:        15       0       0       0       0       0       0
   686 ;;      Temps:          1       0       0       0       0       0       0
   687 ;;      Totals:        16       0       0       0       0       0       0
   688 ;;Total ram usage:       16 bytes
   689 ;; Hardware stack levels required when called:    8
   690 ;; This function calls:
   691 ;;		_CAN_Transmit
   692 ;;		_MPU6050_getFullScaleAccelRange
   693 ;;		_MPU6050_getMotion6
   694 ;;		_convertFrom16To8
   695 ;;		_flashLED
   696 ;;		_initI2C_USART
   697 ;;		_initMPU6050
   698 ;;		_setupCANTxRx
   699 ;; This function is called by:
   700 ;;		Startup code after reset
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text0
   705  00063C                     __ptext0:
   706                           	opt stack 0
   707  00063C                     _main:
   708                           	opt stack 23
   709                           
   710                           ; BSR set to: 0
   711                           ;incstack = 0
   712  00063C  FFFF               	dw	65535
   713                           
   714                           ;main.c: 101: int16_t ax, ay, az, gx, gy, gz;
   715                           ;main.c: 102: uint8_t a_unsigned_array[2];
   716                           ;main.c: 103: initI2C_USART();
   717  00063E  EC98  F006         	call	_initI2C_USART	;wreg free
   718                           
   719                           ;main.c: 104: initMPU6050();
   720  000642  ECB5  F007         	call	_initMPU6050	;wreg free
   721                           
   722                           ;main.c: 105: setupCANTxRx();
   723  000646  ECC0  F007         	call	_setupCANTxRx	;wreg free
   724                           
   725                           ;main.c: 108: TRISBbits.TRISB0 = 0;
   726  00064A  9093               	bcf	3987,0,c	;volatile
   727                           
   728                           ;main.c: 109: flashLED();
   729  00064C  ECC4  F006         	call	_flashLED	;wreg free
   730  000650                     l6079:
   731                           
   732                           ;main.c: 111: {
   733                           ;main.c: 113: MPU6050_getMotion6(&ax, &ay, &az, &gx, &gy, &gz);
   734  000650  0E00               	movlw	high main@ax
   735  000652  6E14               	movwf	MPU6050_getMotion6@ax+1,c
   736  000654  0E2C               	movlw	low main@ax
   737  000656  6E13               	movwf	MPU6050_getMotion6@ax,c
   738  000658  0E00               	movlw	high main@ay
   739  00065A  6E16               	movwf	MPU6050_getMotion6@ay+1,c
   740  00065C  0E30               	movlw	low main@ay
   741  00065E  6E15               	movwf	MPU6050_getMotion6@ay,c
   742  000660  0E00               	movlw	high main@az
   743  000662  6E18               	movwf	MPU6050_getMotion6@az+1,c
   744  000664  0E2E               	movlw	low main@az
   745  000666  6E17               	movwf	MPU6050_getMotion6@az,c
   746  000668  0E00               	movlw	high main@gx
   747  00066A  6E1A               	movwf	MPU6050_getMotion6@gx+1,c
   748  00066C  0E25               	movlw	low main@gx
   749  00066E  6E19               	movwf	MPU6050_getMotion6@gx,c
   750  000670  0E00               	movlw	high main@gy
   751  000672  6E1C               	movwf	MPU6050_getMotion6@gy+1,c
   752  000674  0E27               	movlw	low main@gy
   753  000676  6E1B               	movwf	MPU6050_getMotion6@gy,c
   754  000678  0E00               	movlw	high main@gz
   755  00067A  6E1E               	movwf	MPU6050_getMotion6@gz+1,c
   756  00067C  0E29               	movlw	low main@gz
   757  00067E  6E1D               	movwf	MPU6050_getMotion6@gz,c
   758  000680  ECB7  F003         	call	_MPU6050_getMotion6	;wreg free
   759                           
   760                           ;main.c: 114: uint8_t AFS_SEL = MPU6050_getFullScaleAccelRange();
   761  000684  EC23  F007         	call	_MPU6050_getFullScaleAccelRange	;wreg free
   762  000688  6E2B               	movwf	main@AFS_SEL,c
   763                           
   764                           ;main.c: 132: sendData[0] = 1;
   765  00068A  0E01               	movlw	1
   766  00068C  0100               	movlb	0	; () banked
   767  00068E  6F68               	movwf	_sendData& (0+255),b	;volatile
   768                           
   769                           ; BSR set to: 0
   770                           ;main.c: 133: sendData[1] = AFS_SEL;
   771  000690  C02B  F069         	movff	main@AFS_SEL,_sendData+1	;volatile
   772                           
   773                           ; BSR set to: 0
   774                           ;main.c: 136: a_unsigned_array[0] = convertFrom16To8( (uint16_t) ax )[0];
   775  000694  C02C  F001         	movff	main@ax,convertFrom16To8@dataAll
   776  000698  C02D  F002         	movff	main@ax+1,convertFrom16To8@dataAll+1
   777  00069C  ECEE  F006         	call	_convertFrom16To8	;wreg free
   778  0006A0  C001  FFD9         	movff	?_convertFrom16To8,fsr2l
   779  0006A4  C002  FFDA         	movff	?_convertFrom16To8+1,fsr2h
   780  0006A8  50DF               	movf	indf2,w,c
   781  0006AA  6E32               	movwf	main@a_unsigned_array,c
   782                           
   783                           ;main.c: 137: a_unsigned_array[1] = convertFrom16To8( (uint16_t) ax )[1];
   784  0006AC  C02C  F001         	movff	main@ax,convertFrom16To8@dataAll
   785  0006B0  C02D  F002         	movff	main@ax+1,convertFrom16To8@dataAll+1
   786  0006B4  ECEE  F006         	call	_convertFrom16To8	;wreg free
   787  0006B8  0E01               	movlw	1
   788  0006BA  2401               	addwf	?_convertFrom16To8,w,c
   789  0006BC  6ED9               	movwf	fsr2l,c
   790  0006BE  0E00               	movlw	0
   791  0006C0  2002               	addwfc	?_convertFrom16To8+1,w,c
   792  0006C2  6EDA               	movwf	fsr2h,c
   793  0006C4  50DF               	movf	indf2,w,c
   794  0006C6  6E33               	movwf	main@a_unsigned_array+1,c
   795                           
   796                           ;main.c: 138: sendData[2] = a_unsigned_array[0];
   797  0006C8  C032  F06A         	movff	main@a_unsigned_array,_sendData+2	;volatile
   798                           
   799                           ;main.c: 139: sendData[3] = a_unsigned_array[1];
   800  0006CC  C033  F06B         	movff	main@a_unsigned_array+1,_sendData+3	;volatile
   801                           
   802                           ;main.c: 141: a_unsigned_array[0] = convertFrom16To8( (uint16_t) ay )[0];
   803  0006D0  C030  F001         	movff	main@ay,convertFrom16To8@dataAll
   804  0006D4  C031  F002         	movff	main@ay+1,convertFrom16To8@dataAll+1
   805  0006D8  ECEE  F006         	call	_convertFrom16To8	;wreg free
   806  0006DC  C001  FFD9         	movff	?_convertFrom16To8,fsr2l
   807  0006E0  C002  FFDA         	movff	?_convertFrom16To8+1,fsr2h
   808  0006E4  50DF               	movf	indf2,w,c
   809  0006E6  6E32               	movwf	main@a_unsigned_array,c
   810                           
   811                           ;main.c: 142: a_unsigned_array[1] = convertFrom16To8( (uint16_t) ay )[1];
   812  0006E8  C030  F001         	movff	main@ay,convertFrom16To8@dataAll
   813  0006EC  C031  F002         	movff	main@ay+1,convertFrom16To8@dataAll+1
   814  0006F0  ECEE  F006         	call	_convertFrom16To8	;wreg free
   815  0006F4  0E01               	movlw	1
   816  0006F6  2401               	addwf	?_convertFrom16To8,w,c
   817  0006F8  6ED9               	movwf	fsr2l,c
   818  0006FA  0E00               	movlw	0
   819  0006FC  2002               	addwfc	?_convertFrom16To8+1,w,c
   820  0006FE  6EDA               	movwf	fsr2h,c
   821  000700  50DF               	movf	indf2,w,c
   822  000702  6E33               	movwf	main@a_unsigned_array+1,c
   823                           
   824                           ;main.c: 143: sendData[4] = a_unsigned_array[0];
   825  000704  C032  F06C         	movff	main@a_unsigned_array,_sendData+4	;volatile
   826                           
   827                           ;main.c: 144: sendData[5] = a_unsigned_array[1];
   828  000708  C033  F06D         	movff	main@a_unsigned_array+1,_sendData+5	;volatile
   829                           
   830                           ;main.c: 147: a_unsigned_array[0] = convertFrom16To8( (uint16_t) az )[0];
   831  00070C  C02E  F001         	movff	main@az,convertFrom16To8@dataAll
   832  000710  C02F  F002         	movff	main@az+1,convertFrom16To8@dataAll+1
   833  000714  ECEE  F006         	call	_convertFrom16To8	;wreg free
   834  000718  C001  FFD9         	movff	?_convertFrom16To8,fsr2l
   835  00071C  C002  FFDA         	movff	?_convertFrom16To8+1,fsr2h
   836  000720  50DF               	movf	indf2,w,c
   837  000722  6E32               	movwf	main@a_unsigned_array,c
   838                           
   839                           ;main.c: 148: a_unsigned_array[1] = convertFrom16To8( (uint16_t) az )[1];
   840  000724  C02E  F001         	movff	main@az,convertFrom16To8@dataAll
   841  000728  C02F  F002         	movff	main@az+1,convertFrom16To8@dataAll+1
   842  00072C  ECEE  F006         	call	_convertFrom16To8	;wreg free
   843  000730  0E01               	movlw	1
   844  000732  2401               	addwf	?_convertFrom16To8,w,c
   845  000734  6ED9               	movwf	fsr2l,c
   846  000736  0E00               	movlw	0
   847  000738  2002               	addwfc	?_convertFrom16To8+1,w,c
   848  00073A  6EDA               	movwf	fsr2h,c
   849  00073C  50DF               	movf	indf2,w,c
   850  00073E  6E33               	movwf	main@a_unsigned_array+1,c
   851                           
   852                           ;main.c: 149: sendData[6] = a_unsigned_array[0];
   853  000740  C032  F06E         	movff	main@a_unsigned_array,_sendData+6	;volatile
   854                           
   855                           ;main.c: 150: sendData[7] = a_unsigned_array[1];
   856  000744  C033  F06F         	movff	main@a_unsigned_array+1,_sendData+7	;volatile
   857                           
   858                           ;main.c: 152: CAN_Transmit();
   859  000748  ECED  F004         	call	_CAN_Transmit	;wreg free
   860                           
   861                           ;main.c: 154: if (ay > 10)
   862  00074C  5031               	movf	main@ay+1,w,c
   863  00074E  0A80               	xorlw	128
   864  000750  0F80               	addlw	-128
   865  000752  0E0B               	movlw	11
   866  000754  B4D8               	btfsc	status,2,c
   867  000756  5C30               	subwf	main@ay,w,c
   868  000758  B0D8               	btfsc	status,0,c
   869                           
   870                           ;main.c: 155: {
   871                           ;main.c: 156: LATBbits.LATB0 ^= 1;
   872  00075A  708A               	btg	3978,0,c	;volatile
   873                           
   874                           ;main.c: 157: }
   875                           ;main.c: 159: _delay((unsigned long)((25)*(20000000/4000.0)));
   876  00075C  0E7A               	movlw	122
   877  00075E  6E24               	movwf	??_main& (0+255),c
   878  000760  0ED4               	movlw	212
   879  000762                     u3617:
   880  000762  2EE8               	decfsz	wreg,f,c
   881  000764  D7FE               	goto	u3617
   882  000766  2E24               	decfsz	??_main& (0+255),f,c
   883  000768  D7FC               	goto	u3617
   884  00076A  D000               	nop2	
   885  00076C  D771               	goto	l6079
   886  00076E                     __end_of_main:
   887                           	opt stack 0
   888                           tblptru	equ	0xFF8
   889                           postinc0	equ	0xFEE
   890                           wreg	equ	0xFE8
   891                           indf2	equ	0xFDF
   892                           fsr2h	equ	0xFDA
   893                           fsr2l	equ	0xFD9
   894                           status	equ	0xFD8
   895                           
   896 ;; *************** function _setupCANTxRx *****************
   897 ;; Defined at:
   898 ;;		line 211 in file "../../C_Library/pic18f458_badgerloop.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;		None               void
   905 ;; Registers used:
   906 ;;		wreg, status,2, status,0, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   912 ;;      Params:         0       0       0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0       0       0
   914 ;;      Temps:          0       0       0       0       0       0       0
   915 ;;      Totals:         0       0       0       0       0       0       0
   916 ;;Total ram usage:        0 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:    2
   919 ;; This function calls:
   920 ;;		_CAN_Init
   921 ;;		_Delay10KTCYx
   922 ;; This function is called by:
   923 ;;		_main
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text1
   928  000F80                     __ptext1:
   929                           	opt stack 0
   930  000F80                     _setupCANTxRx:
   931                           	opt stack 28
   932                           
   933                           ;incstack = 0
   934  000F80  FFFF               	dw	65535
   935                           
   936                           ;pic18f458_badgerloop.c: 214: TRISBbits.TRISB2 = 0;
   937  000F82  9493               	bcf	3987,2,c	;volatile
   938                           
   939                           ;pic18f458_badgerloop.c: 216: TRISBbits.TRISB3 = 1;
   940  000F84  8693               	bsf	3987,3,c	;volatile
   941                           
   942                           ;pic18f458_badgerloop.c: 219: CAN_Init();
   943  000F86  ECB0  F005         	call	_CAN_Init	;wreg free
   944                           
   945                           ;pic18f458_badgerloop.c: 222: Delay10KTCYx(50);
   946  000F8A  0E32               	movlw	50
   947  000F8C  EC8E  F007         	call	_Delay10KTCYx
   948  000F90  0012               	return	
   949  000F92  FFFF               	dw	65535	; errata NOP
   950  000F94                     __end_of_setupCANTxRx:
   951                           	opt stack 0
   952                           tblptru	equ	0xFF8
   953                           postinc0	equ	0xFEE
   954                           wreg	equ	0xFE8
   955                           indf2	equ	0xFDF
   956                           fsr2h	equ	0xFDA
   957                           fsr2l	equ	0xFD9
   958                           status	equ	0xFD8
   959                           
   960 ;; *************** function _CAN_Init *****************
   961 ;; Defined at:
   962 ;;		line 171 in file "../../C_Library/pic18f458_badgerloop.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;		None               void
   969 ;; Registers used:
   970 ;;		wreg, status,2, status,0, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   976 ;;      Params:         0       0       0       0       0       0       0
   977 ;;      Locals:         0       0       0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0
   979 ;;      Totals:         0       0       0       0       0       0       0
   980 ;;Total ram usage:        0 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; Hardware stack levels required when called:    1
   983 ;; This function calls:
   984 ;;		_CAN_SetMode
   985 ;; This function is called by:
   986 ;;		_setupCANTxRx
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text2
   991  000B60                     __ptext2:
   992                           	opt stack 0
   993  000B60                     _CAN_Init:
   994                           	opt stack 28
   995                           
   996                           ;incstack = 0
   997  000B60  FFFF               	dw	65535
   998                           
   999                           ;pic18f458_badgerloop.c: 173: TRISB = (1<<3);
  1000  000B62  0E08               	movlw	8
  1001  000B64  6E93               	movwf	3987,c	;volatile
  1002                           
  1003                           ;pic18f458_badgerloop.c: 176: CAN_SetMode((0x80));
  1004  000B66  0E80               	movlw	128
  1005  000B68  ECA9  F007         	call	_CAN_SetMode
  1006                           
  1007                           ;pic18f458_badgerloop.c: 185: BRGCON1 = 0x00;
  1008  000B6C  0E00               	movlw	0
  1009  000B6E  6E70               	movwf	3952,c	;volatile
  1010                           
  1011                           ;pic18f458_badgerloop.c: 186: BRGCON2 = 0xBA;
  1012  000B70  0EBA               	movlw	186
  1013  000B72  6E71               	movwf	3953,c	;volatile
  1014                           
  1015                           ;pic18f458_badgerloop.c: 187: BRGCON3 = 0x07;
  1016  000B74  0E07               	movlw	7
  1017  000B76  6E72               	movwf	3954,c	;volatile
  1018                           
  1019                           ;pic18f458_badgerloop.c: 190: RXM0SIDH = 0; RXM0SIDL = 0;
  1020  000B78  0E00               	movlw	0
  1021  000B7A  CFE8 FF18          	movff	wreg,3864
  1022  000B7E  0E00               	movlw	0
  1023  000B80  CFE8 FF19          	movff	wreg,3865
  1024                           
  1025                           ;pic18f458_badgerloop.c: 191: RXM1SIDH = 0; RXM1SIDL = 0;
  1026  000B84  0E00               	movlw	0
  1027  000B86  CFE8 FF1C          	movff	wreg,3868
  1028  000B8A  0E00               	movlw	0
  1029  000B8C  CFE8 FF1D          	movff	wreg,3869
  1030                           
  1031                           ;pic18f458_badgerloop.c: 192: RXF0SIDL = 0;
  1032  000B90  0E00               	movlw	0
  1033  000B92  CFE8 FF01          	movff	wreg,3841
  1034                           
  1035                           ;pic18f458_badgerloop.c: 193: RXF1SIDL = 0;
  1036  000B96  0E00               	movlw	0
  1037  000B98  CFE8 FF05          	movff	wreg,3845
  1038                           
  1039                           ;pic18f458_badgerloop.c: 194: RXF2SIDL = 0;
  1040  000B9C  0E00               	movlw	0
  1041  000B9E  CFE8 FF09          	movff	wreg,3849
  1042                           
  1043                           ;pic18f458_badgerloop.c: 195: RXF3SIDL = 0;
  1044  000BA2  0E00               	movlw	0
  1045  000BA4  CFE8 FF0D          	movff	wreg,3853
  1046                           
  1047                           ;pic18f458_badgerloop.c: 196: RXF4SIDL = 0;
  1048  000BA8  0E00               	movlw	0
  1049  000BAA  CFE8 FF11          	movff	wreg,3857
  1050                           
  1051                           ;pic18f458_badgerloop.c: 197: RXF5SIDL = 0;
  1052  000BAE  0E00               	movlw	0
  1053  000BB0  CFE8 FF15          	movff	wreg,3861
  1054                           
  1055                           ;pic18f458_badgerloop.c: 199: RXB0CON = 0;
  1056  000BB4  0E00               	movlw	0
  1057  000BB6  6E60               	movwf	3936,c	;volatile
  1058                           
  1059                           ;pic18f458_badgerloop.c: 200: RXB1CON = 0;
  1060  000BB8  0E00               	movlw	0
  1061  000BBA  CFE8 FF50          	movff	wreg,3920
  1062                           
  1063                           ;pic18f458_badgerloop.c: 208: CAN_SetMode((0x00));
  1064  000BBE  0E00               	movlw	0
  1065  000BC0  ECA9  F007         	call	_CAN_SetMode
  1066  000BC4  0012               	return	
  1067  000BC6  FFFF               	dw	65535	; errata NOP
  1068  000BC8                     __end_of_CAN_Init:
  1069                           	opt stack 0
  1070                           tblptru	equ	0xFF8
  1071                           postinc0	equ	0xFEE
  1072                           wreg	equ	0xFE8
  1073                           indf2	equ	0xFDF
  1074                           fsr2h	equ	0xFDA
  1075                           fsr2l	equ	0xFD9
  1076                           status	equ	0xFD8
  1077                           
  1078 ;; *************** function _CAN_SetMode *****************
  1079 ;; Defined at:
  1080 ;;		line 162 in file "../../C_Library/pic18f458_badgerloop.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  canMode         1    wreg     unsigned char 
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  canMode         1    0[COMRAM] unsigned char 
  1085 ;; Return value:  Size  Location     Type
  1086 ;;		None               void
  1087 ;; Registers used:
  1088 ;;		wreg, status,2, status,0
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1094 ;;      Params:         0       0       0       0       0       0       0
  1095 ;;      Locals:         1       0       0       0       0       0       0
  1096 ;;      Temps:          0       0       0       0       0       0       0
  1097 ;;      Totals:         1       0       0       0       0       0       0
  1098 ;;Total ram usage:        1 bytes
  1099 ;; Hardware stack levels used:    1
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_CAN_Init
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text3
  1108  000F52                     __ptext3:
  1109                           	opt stack 0
  1110  000F52                     _CAN_SetMode:
  1111                           	opt stack 28
  1112                           
  1113                           ;incstack = 0
  1114  000F52  FFFF               	dw	65535
  1115                           
  1116                           ;CAN_SetMode@canMode stored from wreg
  1117  000F54  6E01               	movwf	CAN_SetMode@canMode,c
  1118                           
  1119                           ;pic18f458_badgerloop.c: 165: CANCON = canMode;
  1120  000F56  C001  FF6F         	movff	CAN_SetMode@canMode,3951	;volatile
  1121  000F5A                     l4053:
  1122  000F5A  506E               	movf	3950,w,c	;volatile
  1123  000F5C  0BE0               	andlw	224
  1124  000F5E  1801               	xorwf	CAN_SetMode@canMode,w,c
  1125  000F60  B4D8               	btfsc	status,2,c
  1126  000F62  0012               	return	
  1127  000F64  FFFF               	dw	65535	; assembler added errata NOP
  1128  000F66  D7F9               	goto	l4053
  1129  000F68  FFFF               	dw	65535	; errata NOP
  1130  000F6A                     __end_of_CAN_SetMode:
  1131                           	opt stack 0
  1132                           tblptru	equ	0xFF8
  1133                           postinc0	equ	0xFEE
  1134                           wreg	equ	0xFE8
  1135                           indf2	equ	0xFDF
  1136                           fsr2h	equ	0xFDA
  1137                           fsr2l	equ	0xFD9
  1138                           status	equ	0xFD8
  1139                           
  1140 ;; *************** function _initMPU6050 *****************
  1141 ;; Defined at:
  1142 ;;		line 254 in file "../../C_Library/pic18f458_badgerloop.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;		None
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;		None
  1147 ;; Return value:  Size  Location     Type
  1148 ;;		None               void
  1149 ;; Registers used:
  1150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1156 ;;      Params:         0       0       0       0       0       0       0
  1157 ;;      Locals:         0       0       0       0       0       0       0
  1158 ;;      Temps:          0       0       0       0       0       0       0
  1159 ;;      Totals:         0       0       0       0       0       0       0
  1160 ;;Total ram usage:        0 bytes
  1161 ;; Hardware stack levels used:    1
  1162 ;; Hardware stack levels required when called:    7
  1163 ;; This function calls:
  1164 ;;		_Delay10KTCYx
  1165 ;;		_MPU6050
  1166 ;;		_MPU6050_initialize
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text4
  1173  000F6A                     __ptext4:
  1174                           	opt stack 0
  1175  000F6A                     _initMPU6050:
  1176                           	opt stack 23
  1177                           
  1178                           ;incstack = 0
  1179  000F6A  FFFF               	dw	65535
  1180                           
  1181                           ;pic18f458_badgerloop.c: 256: MPU6050(0x68);
  1182  000F6C  0E68               	movlw	104
  1183  000F6E  ECD4  F007         	call	_MPU6050
  1184                           
  1185                           ;pic18f458_badgerloop.c: 258: MPU6050_initialize();
  1186  000F72  EC34  F007         	call	_MPU6050_initialize	;wreg free
  1187                           
  1188                           ;pic18f458_badgerloop.c: 261: Delay10KTCYx(50);
  1189  000F76  0E32               	movlw	50
  1190  000F78  EC8E  F007         	call	_Delay10KTCYx
  1191  000F7C  0012               	return	
  1192  000F7E  FFFF               	dw	65535	; errata NOP
  1193  000F80                     __end_of_initMPU6050:
  1194                           	opt stack 0
  1195                           tblptru	equ	0xFF8
  1196                           postinc0	equ	0xFEE
  1197                           wreg	equ	0xFE8
  1198                           indf2	equ	0xFDF
  1199                           fsr2h	equ	0xFDA
  1200                           fsr2l	equ	0xFD9
  1201                           status	equ	0xFD8
  1202                           
  1203 ;; *************** function _MPU6050_initialize *****************
  1204 ;; Defined at:
  1205 ;;		line 62 in file "../../C_Library/MPU6050.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;		None
  1210 ;; Return value:  Size  Location     Type
  1211 ;;		None               void
  1212 ;; Registers used:
  1213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1219 ;;      Params:         0       0       0       0       0       0       0
  1220 ;;      Locals:         0       0       0       0       0       0       0
  1221 ;;      Temps:          0       0       0       0       0       0       0
  1222 ;;      Totals:         0       0       0       0       0       0       0
  1223 ;;Total ram usage:        0 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; Hardware stack levels required when called:    6
  1226 ;; This function calls:
  1227 ;;		_MPU6050_setClockSource
  1228 ;;		_MPU6050_setFullScaleAccelRange
  1229 ;;		_MPU6050_setFullScaleGyroRange
  1230 ;;		_MPU6050_setSleepEnabled
  1231 ;; This function is called by:
  1232 ;;		_initMPU6050
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text5
  1237  000E68                     __ptext5:
  1238                           	opt stack 0
  1239  000E68                     _MPU6050_initialize:
  1240                           	opt stack 23
  1241                           
  1242                           ;incstack = 0
  1243  000E68  FFFF               	dw	65535
  1244                           
  1245                           ;MPU6050.c: 63: MPU6050_setClockSource(0x01);
  1246  000E6A  0E01               	movlw	1
  1247  000E6C  EC61  F007         	call	_MPU6050_setClockSource
  1248                           
  1249                           ;MPU6050.c: 64: MPU6050_setFullScaleGyroRange(0x00);
  1250  000E70  0E00               	movlw	0
  1251  000E72  EC43  F007         	call	_MPU6050_setFullScaleGyroRange
  1252                           
  1253                           ;MPU6050.c: 65: MPU6050_setFullScaleAccelRange(0x00);
  1254  000E76  0E00               	movlw	0
  1255  000E78  EC52  F007         	call	_MPU6050_setFullScaleAccelRange
  1256                           
  1257                           ;MPU6050.c: 66: MPU6050_setSleepEnabled(0);
  1258  000E7C  0E00               	movlw	0
  1259  000E7E  EC9C  F007         	call	_MPU6050_setSleepEnabled
  1260  000E82  0012               	return	
  1261  000E84  FFFF               	dw	65535	; errata NOP
  1262  000E86                     __end_of_MPU6050_initialize:
  1263                           	opt stack 0
  1264                           tblptru	equ	0xFF8
  1265                           postinc0	equ	0xFEE
  1266                           wreg	equ	0xFE8
  1267                           indf2	equ	0xFDF
  1268                           fsr2h	equ	0xFDA
  1269                           fsr2l	equ	0xFD9
  1270                           status	equ	0xFD8
  1271                           
  1272 ;; *************** function _MPU6050_setSleepEnabled *****************
  1273 ;; Defined at:
  1274 ;;		line 2382 in file "../../C_Library/MPU6050.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  enabled         1    wreg     unsigned char 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  enabled         1   34[COMRAM] unsigned char 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;		None               void
  1281 ;; Registers used:
  1282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1288 ;;      Params:         0       0       0       0       0       0       0
  1289 ;;      Locals:         1       0       0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0
  1291 ;;      Totals:         1       0       0       0       0       0       0
  1292 ;;Total ram usage:        1 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    5
  1295 ;; This function calls:
  1296 ;;		_I2Cdev_writeBit
  1297 ;; This function is called by:
  1298 ;;		_MPU6050_initialize
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text6
  1303  000F38                     __ptext6:
  1304                           	opt stack 0
  1305  000F38                     _MPU6050_setSleepEnabled:
  1306                           	opt stack 23
  1307                           
  1308                           ;incstack = 0
  1309  000F38  FFFF               	dw	65535
  1310                           
  1311                           ;MPU6050_setSleepEnabled@enabled stored from wreg
  1312  000F3A  6E23               	movwf	MPU6050_setSleepEnabled@enabled,c
  1313                           
  1314                           ;MPU6050.c: 2383: I2Cdev_writeBit(mpu6050.devAddr, 0x6B, 6, enabled);
  1315  000F3C  0E6B               	movlw	107
  1316  000F3E  6E17               	movwf	I2Cdev_writeBit@regAddr,c
  1317  000F40  0E06               	movlw	6
  1318  000F42  6E18               	movwf	I2Cdev_writeBit@bitNum,c
  1319  000F44  C023  F019         	movff	MPU6050_setSleepEnabled@enabled,I2Cdev_writeBit@data
  1320  000F48  504C               	movf	_mpu6050,w,c
  1321  000F4A  EC71  F005         	call	_I2Cdev_writeBit
  1322  000F4E  0012               	return	
  1323  000F50  FFFF               	dw	65535	; errata NOP
  1324  000F52                     __end_of_MPU6050_setSleepEnabled:
  1325                           	opt stack 0
  1326                           tblptru	equ	0xFF8
  1327                           postinc0	equ	0xFEE
  1328                           wreg	equ	0xFE8
  1329                           indf2	equ	0xFDF
  1330                           fsr2h	equ	0xFDA
  1331                           fsr2l	equ	0xFD9
  1332                           status	equ	0xFD8
  1333                           
  1334 ;; *************** function _I2Cdev_writeBit *****************
  1335 ;; Defined at:
  1336 ;;		line 344 in file "../../C_Library/I2Cdev.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  devAddr         1    wreg     unsigned char 
  1339 ;;  regAddr         1   22[COMRAM] unsigned char 
  1340 ;;  bitNum          1   23[COMRAM] unsigned char 
  1341 ;;  data            1   24[COMRAM] unsigned char 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  devAddr         1   32[COMRAM] unsigned char 
  1344 ;;  b               1   33[COMRAM] unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      unsigned char 
  1347 ;; Registers used:
  1348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1354 ;;      Params:         3       0       0       0       0       0       0
  1355 ;;      Locals:         4       0       0       0       0       0       0
  1356 ;;      Temps:          5       0       0       0       0       0       0
  1357 ;;      Totals:        12       0       0       0       0       0       0
  1358 ;;Total ram usage:       12 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; Hardware stack levels required when called:    4
  1361 ;; This function calls:
  1362 ;;		_I2Cdev_readByte
  1363 ;;		_I2Cdev_writeByte
  1364 ;; This function is called by:
  1365 ;;		_MPU6050_setSleepEnabled
  1366 ;;		_MPU6050_setAuxVDDIOLevel
  1367 ;;		_MPU6050_setAccelXSelfTest
  1368 ;;		_MPU6050_setAccelYSelfTest
  1369 ;;		_MPU6050_setAccelZSelfTest
  1370 ;;		_MPU6050_setTempFIFOEnabled
  1371 ;;		_MPU6050_setXGyroFIFOEnabled
  1372 ;;		_MPU6050_setYGyroFIFOEnabled
  1373 ;;		_MPU6050_setZGyroFIFOEnabled
  1374 ;;		_MPU6050_setAccelFIFOEnabled
  1375 ;;		_MPU6050_setSlave2FIFOEnabled
  1376 ;;		_MPU6050_setSlave1FIFOEnabled
  1377 ;;		_MPU6050_setSlave0FIFOEnabled
  1378 ;;		_MPU6050_setMultiMasterEnabled
  1379 ;;		_MPU6050_setWaitForExternalSensorEnabled
  1380 ;;		_MPU6050_setSlave3FIFOEnabled
  1381 ;;		_MPU6050_setSlaveReadWriteTransitionEnabled
  1382 ;;		_MPU6050_setSlaveEnabled
  1383 ;;		_MPU6050_setSlaveWordByteSwap
  1384 ;;		_MPU6050_setSlaveWriteMode
  1385 ;;		_MPU6050_setSlaveWordGroupOffset
  1386 ;;		_MPU6050_setSlave4Enabled
  1387 ;;		_MPU6050_setSlave4InterruptEnabled
  1388 ;;		_MPU6050_setSlave4WriteMode
  1389 ;;		_MPU6050_setInterruptMode
  1390 ;;		_MPU6050_setInterruptDrive
  1391 ;;		_MPU6050_setInterruptLatch
  1392 ;;		_MPU6050_setInterruptLatchClear
  1393 ;;		_MPU6050_setFSyncInterruptLevel
  1394 ;;		_MPU6050_setFSyncInterruptEnabled
  1395 ;;		_MPU6050_setI2CBypassEnabled
  1396 ;;		_MPU6050_setClockOutputEnabled
  1397 ;;		_MPU6050_setIntFreefallEnabled
  1398 ;;		_MPU6050_setIntMotionEnabled
  1399 ;;		_MPU6050_setIntZeroMotionEnabled
  1400 ;;		_MPU6050_setIntFIFOBufferOverflowEnabled
  1401 ;;		_MPU6050_setIntI2CMasterEnabled
  1402 ;;		_MPU6050_setIntDataReadyEnabled
  1403 ;;		_MPU6050_setExternalShadowDelayEnabled
  1404 ;;		_MPU6050_setSlaveDelayEnabled
  1405 ;;		_MPU6050_resetGyroscopePath
  1406 ;;		_MPU6050_resetAccelerometerPath
  1407 ;;		_MPU6050_resetTemperaturePath
  1408 ;;		_MPU6050_setFIFOEnabled
  1409 ;;		_MPU6050_setI2CMasterModeEnabled
  1410 ;;		_MPU6050_switchSPIEnabled
  1411 ;;		_MPU6050_resetFIFO
  1412 ;;		_MPU6050_resetI2CMaster
  1413 ;;		_MPU6050_resetSensors
  1414 ;;		_MPU6050_reset
  1415 ;;		_MPU6050_setWakeCycleEnabled
  1416 ;;		_MPU6050_setTempSensorEnabled
  1417 ;;		_MPU6050_setStandbyXAccelEnabled
  1418 ;;		_MPU6050_setStandbyYAccelEnabled
  1419 ;;		_MPU6050_setStandbyZAccelEnabled
  1420 ;;		_MPU6050_setStandbyXGyroEnabled
  1421 ;;		_MPU6050_setStandbyYGyroEnabled
  1422 ;;		_MPU6050_setStandbyZGyroEnabled
  1423 ;;		_MPU6050_setOTPBankValid
  1424 ;;		_MPU6050_setIntPLLReadyEnabled
  1425 ;;		_MPU6050_setIntDMPEnabled
  1426 ;;		_MPU6050_setDMPEnabled
  1427 ;;		_MPU6050_resetDMP
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text7
  1432  000AE2                     __ptext7:
  1433                           	opt stack 0
  1434  000AE2                     _I2Cdev_writeBit:
  1435                           	opt stack 23
  1436                           
  1437                           ;incstack = 0
  1438  000AE2  FFFF               	dw	65535
  1439                           
  1440                           ;I2Cdev_writeBit@devAddr stored from wreg
  1441  000AE4  6E21               	movwf	I2Cdev_writeBit@devAddr,c
  1442                           
  1443                           ;I2Cdev.c: 345: uint8_t b;
  1444                           ;I2Cdev.c: 346: I2Cdev_readByte(devAddr, regAddr, &b);
  1445  000AE6  C017  F013         	movff	I2Cdev_writeBit@regAddr,I2Cdev_readByte@regAddr
  1446  000AEA  0E00               	movlw	high I2Cdev_writeBit@b
  1447  000AEC  6E15               	movwf	I2Cdev_readByte@data+1,c
  1448  000AEE  0E22               	movlw	low I2Cdev_writeBit@b
  1449  000AF0  6E14               	movwf	I2Cdev_readByte@data,c
  1450  000AF2  5021               	movf	I2Cdev_writeBit@devAddr,w,c
  1451  000AF4  EC7F  F007         	call	_I2Cdev_readByte
  1452                           
  1453                           ;I2Cdev.c: 347: b = (data != 0) ? (b | (1 << bitNum)) : (b & ~(1 << bitNum));
  1454  000AF8  6619               	tstfsz	I2Cdev_writeBit@data,c
  1455  000AFA  D012               	goto	l4025
  1456  000AFC  C018  F01A         	movff	I2Cdev_writeBit@bitNum,??_I2Cdev_writeBit
  1457  000B00  0E01               	movlw	1
  1458  000B02  6E1B               	movwf	(??_I2Cdev_writeBit+1)& (0+255),c
  1459  000B04  2A1A               	incf	??_I2Cdev_writeBit,f,c
  1460  000B06  D002               	goto	u1604
  1461  000B08                     u1605:
  1462  000B08  90D8               	bcf	status,0,c
  1463  000B0A  361B               	rlcf	??_I2Cdev_writeBit+1,f,c
  1464  000B0C                     u1604:
  1465  000B0C  2E1A               	decfsz	??_I2Cdev_writeBit,f,c
  1466  000B0E  D7FC               	goto	u1605
  1467  000B10  501B               	movf	??_I2Cdev_writeBit+1,w,c
  1468  000B12  0AFF               	xorlw	255
  1469  000B14  1422               	andwf	I2Cdev_writeBit@b,w,c
  1470  000B16  6E1C               	movwf	(??_I2Cdev_writeBit+2)& (0+255),c
  1471  000B18  501C               	movf	??_I2Cdev_writeBit+2,w,c
  1472  000B1A  6E1F               	movwf	_I2Cdev_writeBit$423,c
  1473  000B1C  6A20               	clrf	_I2Cdev_writeBit$423+1,c
  1474  000B1E  D015               	goto	l4027
  1475  000B20                     l4025:
  1476  000B20  C018  F01A         	movff	I2Cdev_writeBit@bitNum,??_I2Cdev_writeBit
  1477  000B24  0E01               	movlw	1
  1478  000B26  6E1B               	movwf	(??_I2Cdev_writeBit+1)& (0+255),c
  1479  000B28  6A1C               	clrf	(??_I2Cdev_writeBit+2)& (0+255),c
  1480  000B2A  2A1A               	incf	??_I2Cdev_writeBit,f,c
  1481  000B2C  D003               	goto	u1614
  1482  000B2E                     u1615:
  1483  000B2E  90D8               	bcf	status,0,c
  1484  000B30  361B               	rlcf	??_I2Cdev_writeBit+1,f,c
  1485  000B32  361C               	rlcf	??_I2Cdev_writeBit+2,f,c
  1486  000B34                     u1614:
  1487  000B34  2E1A               	decfsz	??_I2Cdev_writeBit,f,c
  1488  000B36  D7FB               	goto	u1615
  1489  000B38  5022               	movf	I2Cdev_writeBit@b,w,c
  1490  000B3A  6E1D               	movwf	(??_I2Cdev_writeBit+3)& (0+255),c
  1491  000B3C  6A1E               	clrf	(??_I2Cdev_writeBit+4)& (0+255),c
  1492  000B3E  501B               	movf	??_I2Cdev_writeBit+1,w,c
  1493  000B40  101D               	iorwf	??_I2Cdev_writeBit+3,w,c
  1494  000B42  6E1F               	movwf	_I2Cdev_writeBit$423,c
  1495  000B44  501C               	movf	??_I2Cdev_writeBit+2,w,c
  1496  000B46  101E               	iorwf	??_I2Cdev_writeBit+4,w,c
  1497  000B48  6E20               	movwf	_I2Cdev_writeBit$423+1,c
  1498  000B4A                     l4027:
  1499  000B4A  C01F  F022         	movff	_I2Cdev_writeBit$423,I2Cdev_writeBit@b
  1500                           
  1501                           ;I2Cdev.c: 348: return I2Cdev_writeByte(devAddr, regAddr, b);
  1502                           ;	Return value of _I2Cdev_writeBit is never used
  1503  000B4E  C017  F00A         	movff	I2Cdev_writeBit@regAddr,I2Cdev_writeByte@regAddr
  1504  000B52  C022  F00B         	movff	I2Cdev_writeBit@b,I2Cdev_writeByte@data
  1505  000B56  5021               	movf	I2Cdev_writeBit@devAddr,w,c
  1506  000B58  EC70  F007         	call	_I2Cdev_writeByte
  1507  000B5C  0012               	return	
  1508  000B5E  FFFF               	dw	65535	; errata NOP
  1509  000B60                     __end_of_I2Cdev_writeBit:
  1510                           	opt stack 0
  1511                           tblptru	equ	0xFF8
  1512                           postinc0	equ	0xFEE
  1513                           wreg	equ	0xFE8
  1514                           indf2	equ	0xFDF
  1515                           fsr2h	equ	0xFDA
  1516                           fsr2l	equ	0xFD9
  1517                           status	equ	0xFD8
  1518                           
  1519 ;; *************** function _MPU6050_setFullScaleGyroRange *****************
  1520 ;; Defined at:
  1521 ;;		line 251 in file "../../C_Library/MPU6050.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  range           1    wreg     unsigned char 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  range           1   32[COMRAM] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;		None               void
  1528 ;; Registers used:
  1529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1535 ;;      Params:         0       0       0       0       0       0       0
  1536 ;;      Locals:         1       0       0       0       0       0       0
  1537 ;;      Temps:          0       0       0       0       0       0       0
  1538 ;;      Totals:         1       0       0       0       0       0       0
  1539 ;;Total ram usage:        1 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    5
  1542 ;; This function calls:
  1543 ;;		_I2Cdev_writeBits
  1544 ;; This function is called by:
  1545 ;;		_MPU6050_initialize
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text8
  1550  000E86                     __ptext8:
  1551                           	opt stack 0
  1552  000E86                     _MPU6050_setFullScaleGyroRange:
  1553                           	opt stack 23
  1554                           
  1555                           ;incstack = 0
  1556  000E86  FFFF               	dw	65535
  1557                           
  1558                           ;MPU6050_setFullScaleGyroRange@range stored from wreg
  1559  000E88  6E21               	movwf	MPU6050_setFullScaleGyroRange@range,c
  1560                           
  1561                           ;MPU6050.c: 252: I2Cdev_writeBits(mpu6050.devAddr, 0x1B, 4, 2, range);
  1562  000E8A  0E1B               	movlw	27
  1563  000E8C  6E17               	movwf	I2Cdev_writeBits@regAddr,c
  1564  000E8E  0E04               	movlw	4
  1565  000E90  6E18               	movwf	I2Cdev_writeBits@bitStart,c
  1566  000E92  0E02               	movlw	2
  1567  000E94  6E19               	movwf	I2Cdev_writeBits@length,c
  1568  000E96  C021  F01A         	movff	MPU6050_setFullScaleGyroRange@range,I2Cdev_writeBits@data
  1569  000E9A  504C               	movf	_mpu6050,w,c
  1570  000E9C  ECA8  F004         	call	_I2Cdev_writeBits
  1571  000EA0  0012               	return	
  1572  000EA2  FFFF               	dw	65535	; errata NOP
  1573  000EA4                     __end_of_MPU6050_setFullScaleGyroRange:
  1574                           	opt stack 0
  1575                           tblptru	equ	0xFF8
  1576                           postinc0	equ	0xFEE
  1577                           wreg	equ	0xFE8
  1578                           indf2	equ	0xFDF
  1579                           fsr2h	equ	0xFDA
  1580                           fsr2l	equ	0xFD9
  1581                           status	equ	0xFD8
  1582                           
  1583 ;; *************** function _MPU6050_setFullScaleAccelRange *****************
  1584 ;; Defined at:
  1585 ;;		line 327 in file "../../C_Library/MPU6050.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  range           1    wreg     unsigned char 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  range           1   32[COMRAM] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;		None               void
  1592 ;; Registers used:
  1593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1599 ;;      Params:         0       0       0       0       0       0       0
  1600 ;;      Locals:         1       0       0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0
  1602 ;;      Totals:         1       0       0       0       0       0       0
  1603 ;;Total ram usage:        1 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:    5
  1606 ;; This function calls:
  1607 ;;		_I2Cdev_writeBits
  1608 ;; This function is called by:
  1609 ;;		_MPU6050_initialize
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text9
  1614  000EA4                     __ptext9:
  1615                           	opt stack 0
  1616  000EA4                     _MPU6050_setFullScaleAccelRange:
  1617                           	opt stack 23
  1618                           
  1619                           ;incstack = 0
  1620  000EA4  FFFF               	dw	65535
  1621                           
  1622                           ;MPU6050_setFullScaleAccelRange@range stored from wreg
  1623  000EA6  6E21               	movwf	MPU6050_setFullScaleAccelRange@range,c
  1624                           
  1625                           ;MPU6050.c: 328: I2Cdev_writeBits(mpu6050.devAddr, 0x1C, 4, 2, range);
  1626  000EA8  0E1C               	movlw	28
  1627  000EAA  6E17               	movwf	I2Cdev_writeBits@regAddr,c
  1628  000EAC  0E04               	movlw	4
  1629  000EAE  6E18               	movwf	I2Cdev_writeBits@bitStart,c
  1630  000EB0  0E02               	movlw	2
  1631  000EB2  6E19               	movwf	I2Cdev_writeBits@length,c
  1632  000EB4  C021  F01A         	movff	MPU6050_setFullScaleAccelRange@range,I2Cdev_writeBits@data
  1633  000EB8  504C               	movf	_mpu6050,w,c
  1634  000EBA  ECA8  F004         	call	_I2Cdev_writeBits
  1635  000EBE  0012               	return	
  1636  000EC0  FFFF               	dw	65535	; errata NOP
  1637  000EC2                     __end_of_MPU6050_setFullScaleAccelRange:
  1638                           	opt stack 0
  1639                           tblptru	equ	0xFF8
  1640                           postinc0	equ	0xFEE
  1641                           wreg	equ	0xFE8
  1642                           indf2	equ	0xFDF
  1643                           fsr2h	equ	0xFDA
  1644                           fsr2l	equ	0xFD9
  1645                           status	equ	0xFD8
  1646                           
  1647 ;; *************** function _MPU6050_setClockSource *****************
  1648 ;; Defined at:
  1649 ;;		line 2475 in file "../../C_Library/MPU6050.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  source          1    wreg     unsigned char 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  source          1   32[COMRAM] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;		None               void
  1656 ;; Registers used:
  1657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1663 ;;      Params:         0       0       0       0       0       0       0
  1664 ;;      Locals:         1       0       0       0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0       0       0
  1666 ;;      Totals:         1       0       0       0       0       0       0
  1667 ;;Total ram usage:        1 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    5
  1670 ;; This function calls:
  1671 ;;		_I2Cdev_writeBits
  1672 ;; This function is called by:
  1673 ;;		_MPU6050_initialize
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text10
  1678  000EC2                     __ptext10:
  1679                           	opt stack 0
  1680  000EC2                     _MPU6050_setClockSource:
  1681                           	opt stack 23
  1682                           
  1683                           ;incstack = 0
  1684  000EC2  FFFF               	dw	65535
  1685                           
  1686                           ;MPU6050_setClockSource@source stored from wreg
  1687  000EC4  6E21               	movwf	MPU6050_setClockSource@source,c
  1688                           
  1689                           ;MPU6050.c: 2476: I2Cdev_writeBits(mpu6050.devAddr, 0x6B, 2, 3, source);
  1690  000EC6  0E6B               	movlw	107
  1691  000EC8  6E17               	movwf	I2Cdev_writeBits@regAddr,c
  1692  000ECA  0E02               	movlw	2
  1693  000ECC  6E18               	movwf	I2Cdev_writeBits@bitStart,c
  1694  000ECE  0E03               	movlw	3
  1695  000ED0  6E19               	movwf	I2Cdev_writeBits@length,c
  1696  000ED2  C021  F01A         	movff	MPU6050_setClockSource@source,I2Cdev_writeBits@data
  1697  000ED6  504C               	movf	_mpu6050,w,c
  1698  000ED8  ECA8  F004         	call	_I2Cdev_writeBits
  1699  000EDC  0012               	return	
  1700  000EDE  FFFF               	dw	65535	; errata NOP
  1701  000EE0                     __end_of_MPU6050_setClockSource:
  1702                           	opt stack 0
  1703                           tblptru	equ	0xFF8
  1704                           postinc0	equ	0xFEE
  1705                           wreg	equ	0xFE8
  1706                           indf2	equ	0xFDF
  1707                           fsr2h	equ	0xFDA
  1708                           fsr2l	equ	0xFD9
  1709                           status	equ	0xFD8
  1710                           
  1711 ;; *************** function _I2Cdev_writeBits *****************
  1712 ;; Defined at:
  1713 ;;		line 373 in file "../../C_Library/I2Cdev.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  devAddr         1    wreg     unsigned char 
  1716 ;;  regAddr         1   22[COMRAM] unsigned char 
  1717 ;;  bitStart        1   23[COMRAM] unsigned char 
  1718 ;;  length          1   24[COMRAM] unsigned char 
  1719 ;;  data            1   25[COMRAM] unsigned char 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  devAddr         1   29[COMRAM] unsigned char 
  1722 ;;  mask            1   30[COMRAM] unsigned char 
  1723 ;;  b               1   31[COMRAM] unsigned char 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      unsigned char 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1733 ;;      Params:         4       0       0       0       0       0       0
  1734 ;;      Locals:         3       0       0       0       0       0       0
  1735 ;;      Temps:          3       0       0       0       0       0       0
  1736 ;;      Totals:        10       0       0       0       0       0       0
  1737 ;;Total ram usage:       10 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    4
  1740 ;; This function calls:
  1741 ;;		_I2Cdev_readByte
  1742 ;;		_I2Cdev_writeByte
  1743 ;; This function is called by:
  1744 ;;		_MPU6050_setFullScaleGyroRange
  1745 ;;		_MPU6050_setFullScaleAccelRange
  1746 ;;		_MPU6050_setClockSource
  1747 ;;		_MPU6050_setExternalFrameSync
  1748 ;;		_MPU6050_setDLPFMode
  1749 ;;		_MPU6050_setDHPFMode
  1750 ;;		_MPU6050_setMasterClockSpeed
  1751 ;;		_MPU6050_setSlaveDataLength
  1752 ;;		_MPU6050_setSlave4MasterDelay
  1753 ;;		_MPU6050_setAccelerometerPowerOnDelay
  1754 ;;		_MPU6050_setFreefallDetectionCounterDecrement
  1755 ;;		_MPU6050_setMotionDetectionCounterDecrement
  1756 ;;		_MPU6050_setWakeFrequency
  1757 ;;		_MPU6050_setDeviceID
  1758 ;;		_MPU6050_setXGyroOffsetTC
  1759 ;;		_MPU6050_setYGyroOffsetTC
  1760 ;;		_MPU6050_setZGyroOffsetTC
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text11
  1765  000950                     __ptext11:
  1766                           	opt stack 0
  1767  000950                     _I2Cdev_writeBits:
  1768                           	opt stack 23
  1769                           
  1770                           ;incstack = 0
  1771  000950  FFFF               	dw	65535
  1772                           
  1773                           ;I2Cdev_writeBits@devAddr stored from wreg
  1774  000952  6E1E               	movwf	I2Cdev_writeBits@devAddr,c
  1775                           
  1776                           ;I2Cdev.c: 381: uint8_t b;
  1777                           ;I2Cdev.c: 382: if (I2Cdev_readByte(devAddr, regAddr, &b) != 0) {
  1778  000954  C017  F013         	movff	I2Cdev_writeBits@regAddr,I2Cdev_readByte@regAddr
  1779  000958  0E00               	movlw	high I2Cdev_writeBits@b
  1780  00095A  6E15               	movwf	I2Cdev_readByte@data+1,c
  1781  00095C  0E20               	movlw	low I2Cdev_writeBits@b
  1782  00095E  6E14               	movwf	I2Cdev_readByte@data,c
  1783  000960  501E               	movf	I2Cdev_writeBits@devAddr,w,c
  1784  000962  EC7F  F007         	call	_I2Cdev_readByte
  1785  000966  0900               	iorlw	0
  1786  000968  B4D8               	btfsc	status,2,c
  1787  00096A  D035               	goto	l239
  1788                           
  1789                           ;I2Cdev.c: 383: uint8_t mask = ((1 << length) - 1) << (bitStart - length + 1);
  1790  00096C  5019               	movf	I2Cdev_writeBits@length,w,c
  1791  00096E  0800               	sublw	0
  1792  000970  2418               	addwf	I2Cdev_writeBits@bitStart,w,c
  1793  000972  6E1B               	movwf	??_I2Cdev_writeBits& (0+255),c
  1794  000974  0E01               	movlw	1
  1795  000976  261B               	addwf	??_I2Cdev_writeBits,f,c
  1796  000978  C019  F01C         	movff	I2Cdev_writeBits@length,??_I2Cdev_writeBits+1
  1797  00097C  0E01               	movlw	1
  1798  00097E  6E1D               	movwf	(??_I2Cdev_writeBits+2)& (0+255),c
  1799  000980  2A1C               	incf	??_I2Cdev_writeBits+1,f,c
  1800  000982  D002               	goto	u1634
  1801  000984                     u1635:
  1802  000984  90D8               	bcf	status,0,c
  1803  000986  361D               	rlcf	??_I2Cdev_writeBits+2,f,c
  1804  000988                     u1634:
  1805  000988  2E1C               	decfsz	??_I2Cdev_writeBits+1,f,c
  1806  00098A  D7FC               	goto	u1635
  1807  00098C  0EFF               	movlw	255
  1808  00098E  261D               	addwf	??_I2Cdev_writeBits+2,f,c
  1809  000990  2A1B               	incf	??_I2Cdev_writeBits,f,c
  1810  000992  D002               	goto	u1644
  1811  000994                     u1645:
  1812  000994  90D8               	bcf	status,0,c
  1813  000996  361D               	rlcf	??_I2Cdev_writeBits+2,f,c
  1814  000998                     u1644:
  1815  000998  2E1B               	decfsz	??_I2Cdev_writeBits,f,c
  1816  00099A  D7FC               	goto	u1645
  1817  00099C  501D               	movf	??_I2Cdev_writeBits+2,w,c
  1818  00099E  6E1F               	movwf	I2Cdev_writeBits@mask,c
  1819                           
  1820                           ;I2Cdev.c: 384: data <<= (bitStart - length + 1);
  1821  0009A0  5019               	movf	I2Cdev_writeBits@length,w,c
  1822  0009A2  0800               	sublw	0
  1823  0009A4  2418               	addwf	I2Cdev_writeBits@bitStart,w,c
  1824  0009A6  6E1B               	movwf	??_I2Cdev_writeBits& (0+255),c
  1825  0009A8  0E01               	movlw	1
  1826  0009AA  261B               	addwf	??_I2Cdev_writeBits,f,c
  1827  0009AC  281B               	incf	??_I2Cdev_writeBits,w,c
  1828  0009AE  6E1C               	movwf	(??_I2Cdev_writeBits+1)& (0+255),c
  1829  0009B0  D002               	goto	u1650
  1830  0009B2                     u1655:
  1831  0009B2  90D8               	bcf	status,0,c
  1832  0009B4  361A               	rlcf	I2Cdev_writeBits@data,f,c
  1833  0009B6                     u1650:
  1834  0009B6  2E1C               	decfsz	(??_I2Cdev_writeBits+1)& (0+255),f,c
  1835  0009B8  D7FC               	goto	u1655
  1836                           
  1837                           ;I2Cdev.c: 385: data &= mask;
  1838  0009BA  501F               	movf	I2Cdev_writeBits@mask,w,c
  1839  0009BC  161A               	andwf	I2Cdev_writeBits@data,f,c
  1840                           
  1841                           ;I2Cdev.c: 386: b &= ~(mask);
  1842  0009BE  501F               	movf	I2Cdev_writeBits@mask,w,c
  1843  0009C0  0AFF               	xorlw	255
  1844  0009C2  1620               	andwf	I2Cdev_writeBits@b,f,c
  1845                           
  1846                           ;I2Cdev.c: 387: b |= data;
  1847  0009C4  501A               	movf	I2Cdev_writeBits@data,w,c
  1848  0009C6  1220               	iorwf	I2Cdev_writeBits@b,f,c
  1849                           
  1850                           ;I2Cdev.c: 388: return I2Cdev_writeByte(devAddr, regAddr, b);
  1851                           ;	Return value of _I2Cdev_writeBits is never used
  1852  0009C8  C017  F00A         	movff	I2Cdev_writeBits@regAddr,I2Cdev_writeByte@regAddr
  1853  0009CC  C020  F00B         	movff	I2Cdev_writeBits@b,I2Cdev_writeByte@data
  1854  0009D0  501E               	movf	I2Cdev_writeBits@devAddr,w,c
  1855  0009D2  EC70  F007         	call	_I2Cdev_writeByte
  1856  0009D6                     l239:
  1857  0009D6  0012               	return	
  1858  0009D8  FFFF               	dw	65535	; errata NOP
  1859  0009DA                     __end_of_I2Cdev_writeBits:
  1860                           	opt stack 0
  1861                           tblptru	equ	0xFF8
  1862                           postinc0	equ	0xFEE
  1863                           wreg	equ	0xFE8
  1864                           indf2	equ	0xFDF
  1865                           fsr2h	equ	0xFDA
  1866                           fsr2l	equ	0xFD9
  1867                           status	equ	0xFD8
  1868                           
  1869 ;; *************** function _I2Cdev_writeByte *****************
  1870 ;; Defined at:
  1871 ;;		line 286 in file "../../C_Library/I2Cdev.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  devAddr         1    wreg     unsigned char 
  1874 ;;  regAddr         1    9[COMRAM] unsigned char 
  1875 ;;  data            1   10[COMRAM] unsigned char 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  devAddr         1   11[COMRAM] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      unsigned char 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1887 ;;      Params:         2       0       0       0       0       0       0
  1888 ;;      Locals:         1       0       0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0
  1890 ;;      Totals:         3       0       0       0       0       0       0
  1891 ;;Total ram usage:        3 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    3
  1894 ;; This function calls:
  1895 ;;		_I2Cdev_writeBytes
  1896 ;; This function is called by:
  1897 ;;		_I2Cdev_writeBit
  1898 ;;		_I2Cdev_writeBits
  1899 ;;		_MPU6050_setRate
  1900 ;;		_MPU6050_setFreefallDetectionThreshold
  1901 ;;		_MPU6050_setFreefallDetectionDuration
  1902 ;;		_MPU6050_setMotionDetectionThreshold
  1903 ;;		_MPU6050_setMotionDetectionDuration
  1904 ;;		_MPU6050_setZeroMotionDetectionThreshold
  1905 ;;		_MPU6050_setZeroMotionDetectionDuration
  1906 ;;		_MPU6050_setSlaveAddress
  1907 ;;		_MPU6050_setSlaveRegister
  1908 ;;		_MPU6050_setSlave4Address
  1909 ;;		_MPU6050_setSlave4Register
  1910 ;;		_MPU6050_setSlave4OutputByte
  1911 ;;		_MPU6050_setIntEnabled
  1912 ;;		_MPU6050_setSlaveOutputByte
  1913 ;;		_MPU6050_setFIFOByte
  1914 ;;		_MPU6050_setXFineGain
  1915 ;;		_MPU6050_setYFineGain
  1916 ;;		_MPU6050_setZFineGain
  1917 ;;		_MPU6050_setMemoryBank
  1918 ;;		_MPU6050_setMemoryStartAddress
  1919 ;;		_MPU6050_writeMemoryByte
  1920 ;;		_MPU6050_setDMPConfig1
  1921 ;;		_MPU6050_setDMPConfig2
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text12
  1926  000EE0                     __ptext12:
  1927                           	opt stack 0
  1928  000EE0                     _I2Cdev_writeByte:
  1929                           	opt stack 23
  1930                           
  1931                           ;incstack = 0
  1932  000EE0  FFFF               	dw	65535
  1933                           
  1934                           ;I2Cdev_writeByte@devAddr stored from wreg
  1935  000EE2  6E0C               	movwf	I2Cdev_writeByte@devAddr,c
  1936                           
  1937                           ;I2Cdev.c: 287: return I2Cdev_writeBytes(devAddr, regAddr, 1, &data);
  1938  000EE4  C00A  F004         	movff	I2Cdev_writeByte@regAddr,I2Cdev_writeBytes@regAddr
  1939  000EE8  0E01               	movlw	1
  1940  000EEA  6E05               	movwf	I2Cdev_writeBytes@length,c
  1941  000EEC  0E00               	movlw	high I2Cdev_writeByte@data
  1942  000EEE  6E07               	movwf	I2Cdev_writeBytes@data+1,c
  1943  000EF0  0E0B               	movlw	low I2Cdev_writeByte@data
  1944  000EF2  6E06               	movwf	I2Cdev_writeBytes@data,c
  1945  000EF4  500C               	movf	I2Cdev_writeByte@devAddr,w,c
  1946  000EF6  EC48  F006         	call	_I2Cdev_writeBytes
  1947  000EFA  0012               	return	
  1948  000EFC  FFFF               	dw	65535	; errata NOP
  1949  000EFE                     __end_of_I2Cdev_writeByte:
  1950                           	opt stack 0
  1951                           tblptru	equ	0xFF8
  1952                           postinc0	equ	0xFEE
  1953                           wreg	equ	0xFE8
  1954                           indf2	equ	0xFDF
  1955                           fsr2h	equ	0xFDA
  1956                           fsr2l	equ	0xFD9
  1957                           status	equ	0xFD8
  1958                           
  1959 ;; *************** function _I2Cdev_writeBytes *****************
  1960 ;; Defined at:
  1961 ;;		line 254 in file "../../C_Library/I2Cdev.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  devAddr         1    wreg     unsigned char 
  1964 ;;  regAddr         1    3[COMRAM] unsigned char 
  1965 ;;  length          1    4[COMRAM] unsigned char 
  1966 ;;  data            2    5[COMRAM] PTR unsigned char 
  1967 ;;		 -> BMP180_startPressure@data(2), BMP180_startTemperature@data(2), NULL(0), I2Cdev_writeByte@data(1), 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  devAddr         1    7[COMRAM] unsigned char 
  1970 ;;  i               1    8[COMRAM] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      unsigned char 
  1973 ;; Registers used:
  1974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1980 ;;      Params:         4       0       0       0       0       0       0
  1981 ;;      Locals:         2       0       0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0
  1983 ;;      Totals:         6       0       0       0       0       0       0
  1984 ;;Total ram usage:        6 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    2
  1987 ;; This function calls:
  1988 ;;		_IdleI2C
  1989 ;;		_WriteI2C
  1990 ;; This function is called by:
  1991 ;;		_I2Cdev_writeByte
  1992 ;;		_MS_5803_resetSensor
  1993 ;;		_MS_5803_ADC
  1994 ;;		_BMP180_startTemperature
  1995 ;;		_BMP180_startPressure
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text13
  2000  000C90                     __ptext13:
  2001                           	opt stack 0
  2002  000C90                     _I2Cdev_writeBytes:
  2003                           	opt stack 23
  2004                           
  2005                           ;incstack = 0
  2006  000C90  FFFF               	dw	65535
  2007                           
  2008                           ;I2Cdev_writeBytes@devAddr stored from wreg
  2009  000C92  6E08               	movwf	I2Cdev_writeBytes@devAddr,c
  2010                           
  2011                           ;I2Cdev.c: 256: IdleI2C();
  2012  000C94  ECCA  F007         	call	_IdleI2C	;wreg free
  2013                           
  2014                           ;I2Cdev.c: 257: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2015  000C98  80C5               	bsf	4037,0,c	;volatile
  2016  000C9A                     l194:
  2017  000C9A  B0C5               	btfsc	4037,0,c	;volatile
  2018  000C9C  D7FE               	goto	l194
  2019                           
  2020                           ;I2Cdev.c: 260: IdleI2C();
  2021  000C9E  ECCA  F007         	call	_IdleI2C	;wreg free
  2022                           
  2023                           ;I2Cdev.c: 261: WriteI2C(devAddr << 1 | 0x00);
  2024  000CA2  5008               	movf	I2Cdev_writeBytes@devAddr,w,c
  2025  000CA4  2408               	addwf	I2Cdev_writeBytes@devAddr,w,c
  2026  000CA6  ECE4  F005         	call	_WriteI2C
  2027                           
  2028                           ;I2Cdev.c: 264: IdleI2C();
  2029  000CAA  ECCA  F007         	call	_IdleI2C	;wreg free
  2030                           
  2031                           ;I2Cdev.c: 265: WriteI2C(regAddr);
  2032  000CAE  5004               	movf	I2Cdev_writeBytes@regAddr,w,c
  2033  000CB0  ECE4  F005         	call	_WriteI2C
  2034                           
  2035                           ;I2Cdev.c: 267: for (uint8_t i = 0; i < length; i++) {
  2036  000CB4  0E00               	movlw	0
  2037  000CB6  6E09               	movwf	I2Cdev_writeBytes@i,c
  2038  000CB8  D00E               	goto	l4001
  2039  000CBA                     l3995:
  2040                           
  2041                           ;I2Cdev.c: 269: IdleI2C();
  2042  000CBA  ECCA  F007         	call	_IdleI2C	;wreg free
  2043                           
  2044                           ;I2Cdev.c: 270: WriteI2C(data[i]);
  2045  000CBE  5009               	movf	I2Cdev_writeBytes@i,w,c
  2046  000CC0  0D01               	mullw	1
  2047  000CC2  50F3               	movf	prodl,w,c
  2048  000CC4  2406               	addwf	I2Cdev_writeBytes@data,w,c
  2049  000CC6  6ED9               	movwf	fsr2l,c
  2050  000CC8  50F4               	movf	prodh,w,c
  2051  000CCA  2007               	addwfc	I2Cdev_writeBytes@data+1,w,c
  2052  000CCC  6EDA               	movwf	fsr2h,c
  2053  000CCE  50DF               	movf	indf2,w,c
  2054  000CD0  ECE4  F005         	call	_WriteI2C
  2055  000CD4  2A09               	incf	I2Cdev_writeBytes@i,f,c
  2056  000CD6                     l4001:
  2057  000CD6  5005               	movf	I2Cdev_writeBytes@length,w,c
  2058  000CD8  5C09               	subwf	I2Cdev_writeBytes@i,w,c
  2059  000CDA  A0D8               	btfss	status,0,c
  2060  000CDC  D7EE               	goto	l3995
  2061                           
  2062                           ;I2Cdev.c: 271: }
  2063                           ;I2Cdev.c: 274: IdleI2C();
  2064  000CDE  ECCA  F007         	call	_IdleI2C	;wreg free
  2065                           
  2066                           ;I2Cdev.c: 275: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2067  000CE2  84C5               	bsf	4037,2,c	;volatile
  2068  000CE4                     l200:
  2069  000CE4  B4C5               	btfsc	4037,2,c	;volatile
  2070  000CE6  D7FE               	goto	l200
  2071                           
  2072                           ;I2Cdev.c: 277: return 1;
  2073  000CE8  0E01               	movlw	1
  2074  000CEA  0012               	return	
  2075  000CEC  FFFF               	dw	65535	; errata NOP
  2076  000CEE                     __end_of_I2Cdev_writeBytes:
  2077                           	opt stack 0
  2078                           tblptru	equ	0xFF8
  2079                           prodh	equ	0xFF4
  2080                           prodl	equ	0xFF3
  2081                           postinc0	equ	0xFEE
  2082                           wreg	equ	0xFE8
  2083                           indf2	equ	0xFDF
  2084                           fsr2h	equ	0xFDA
  2085                           fsr2l	equ	0xFD9
  2086                           status	equ	0xFD8
  2087                           
  2088 ;; *************** function _MPU6050 *****************
  2089 ;; Defined at:
  2090 ;;		line 51 in file "../../C_Library/MPU6050.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  address         1    wreg     unsigned char 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  address         1    0[COMRAM] unsigned char 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;		None               void
  2097 ;; Registers used:
  2098 ;;		wreg
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2104 ;;      Params:         0       0       0       0       0       0       0
  2105 ;;      Locals:         1       0       0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0
  2107 ;;      Totals:         1       0       0       0       0       0       0
  2108 ;;Total ram usage:        1 bytes
  2109 ;; Hardware stack levels used:    1
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_initMPU6050
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text14
  2118  000FA8                     __ptext14:
  2119                           	opt stack 0
  2120  000FA8                     _MPU6050:
  2121                           	opt stack 29
  2122                           
  2123                           ;incstack = 0
  2124  000FA8  FFFF               	dw	65535
  2125                           
  2126                           ;MPU6050@address stored from wreg
  2127  000FAA  6E01               	movwf	MPU6050@address,c
  2128                           
  2129                           ;MPU6050.c: 52: mpu6050.devAddr = address;
  2130  000FAC  C001  F04C         	movff	MPU6050@address,_mpu6050
  2131  000FB0  0012               	return	
  2132  000FB2  FFFF               	dw	65535	; errata NOP
  2133  000FB4                     __end_of_MPU6050:
  2134                           	opt stack 0
  2135                           tblptru	equ	0xFF8
  2136                           prodh	equ	0xFF4
  2137                           prodl	equ	0xFF3
  2138                           postinc0	equ	0xFEE
  2139                           wreg	equ	0xFE8
  2140                           indf2	equ	0xFDF
  2141                           fsr2h	equ	0xFDA
  2142                           fsr2l	equ	0xFD9
  2143                           status	equ	0xFD8
  2144                           
  2145 ;; *************** function _initI2C_USART *****************
  2146 ;; Defined at:
  2147 ;;		line 230 in file "../../C_Library/pic18f458_badgerloop.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;		None
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;		None
  2152 ;; Return value:  Size  Location     Type
  2153 ;;		None               void
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2161 ;;      Params:         0       0       0       0       0       0       0
  2162 ;;      Locals:         0       0       0       0       0       0       0
  2163 ;;      Temps:          0       0       0       0       0       0       0
  2164 ;;      Totals:         0       0       0       0       0       0       0
  2165 ;;Total ram usage:        0 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    1
  2168 ;; This function calls:
  2169 ;;		_Delay10KTCYx
  2170 ;;		_OpenI2C
  2171 ;;		_OpenUSART
  2172 ;; This function is called by:
  2173 ;;		_main
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text15
  2178  000D30                     __ptext15:
  2179                           	opt stack 0
  2180  000D30                     _initI2C_USART:
  2181                           	opt stack 29
  2182                           
  2183                           ;incstack = 0
  2184  000D30  FFFF               	dw	65535
  2185                           
  2186                           ;pic18f458_badgerloop.c: 232: TRISCbits.RC6 = 0;
  2187  000D32  9C94               	bcf	3988,6,c	;volatile
  2188                           
  2189                           ;pic18f458_badgerloop.c: 233: TRISCbits.RC7 = 1;
  2190  000D34  8E94               	bsf	3988,7,c	;volatile
  2191                           
  2192                           ;pic18f458_badgerloop.c: 239: OpenUSART (0b01111111 &
  2193                           ;pic18f458_badgerloop.c: 240: 0b10111111 &
  2194                           ;pic18f458_badgerloop.c: 241: 0b11111110 &
  2195                           ;pic18f458_badgerloop.c: 242: 0b11111101 &
  2196                           ;pic18f458_badgerloop.c: 243: 0b11111111 &
  2197                           ;pic18f458_badgerloop.c: 244: 0b11111111, 129);
  2198  000D36  0E00               	movlw	0
  2199  000D38  6E02               	movwf	OpenUSART@spbrg+1,c
  2200  000D3A  0E81               	movlw	129
  2201  000D3C  6E01               	movwf	OpenUSART@spbrg,c
  2202  000D3E  0E3C               	movlw	60
  2203  000D40  EC18  F006         	call	_OpenUSART
  2204                           
  2205                           ;pic18f458_badgerloop.c: 247: OpenI2C(0b00001000, 0b10000000);
  2206  000D44  0E80               	movlw	128
  2207  000D46  6E01               	movwf	OpenI2C@slew,c
  2208  000D48  0E08               	movlw	8
  2209  000D4A  EC12  F007         	call	_OpenI2C
  2210                           
  2211                           ;pic18f458_badgerloop.c: 248: SSPADD = ( ( 20000000 / ( 4 * 400000 ) ) - 1 );
  2212  000D4E  0E0B               	movlw	11
  2213  000D50  6EC8               	movwf	4040,c	;volatile
  2214                           
  2215                           ;pic18f458_badgerloop.c: 251: Delay10KTCYx(50);
  2216  000D52  0E32               	movlw	50
  2217  000D54  EC8E  F007         	call	_Delay10KTCYx
  2218  000D58  0012               	return	
  2219  000D5A  FFFF               	dw	65535	; errata NOP
  2220  000D5C                     __end_of_initI2C_USART:
  2221                           	opt stack 0
  2222                           tblptru	equ	0xFF8
  2223                           prodh	equ	0xFF4
  2224                           prodl	equ	0xFF3
  2225                           postinc0	equ	0xFEE
  2226                           wreg	equ	0xFE8
  2227                           indf2	equ	0xFDF
  2228                           fsr2h	equ	0xFDA
  2229                           fsr2l	equ	0xFD9
  2230                           status	equ	0xFD8
  2231                           
  2232 ;; *************** function _OpenUSART *****************
  2233 ;; Defined at:
  2234 ;;		line 21 in file "/Applications/microchip/xc8/v1.32/sources/pic18/plib/USART/uopen.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  config          1    wreg     unsigned char 
  2237 ;;  spbrg           2    0[COMRAM] unsigned int 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  config          1    2[COMRAM] unsigned char 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;		None               void
  2242 ;; Registers used:
  2243 ;;		wreg, status,2
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2249 ;;      Params:         2       0       0       0       0       0       0
  2250 ;;      Locals:         1       0       0       0       0       0       0
  2251 ;;      Temps:          0       0       0       0       0       0       0
  2252 ;;      Totals:         3       0       0       0       0       0       0
  2253 ;;Total ram usage:        3 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_initI2C_USART
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text16
  2263  000C30                     __ptext16:
  2264                           	opt stack 0
  2265  000C30                     _OpenUSART:
  2266                           	opt stack 29
  2267                           
  2268                           ;incstack = 0
  2269  000C30  FFFF               	dw	65535
  2270                           
  2271                           ;OpenUSART@config stored from wreg
  2272  000C32  6E03               	movwf	OpenUSART@config,c
  2273  000C34  0E00               	movlw	0
  2274  000C36  6EAC               	movwf	4012,c	;volatile
  2275  000C38  0E00               	movlw	0
  2276  000C3A  6EAB               	movwf	4011,c	;volatile
  2277  000C3C  B003               	btfsc	OpenUSART@config,0,c
  2278  000C3E  88AC               	bsf	4012,4,c	;volatile
  2279  000C40  A203               	btfss	OpenUSART@config,1,c
  2280  000C42  D002               	goto	l4217
  2281  000C44  8CAC               	bsf	4012,6,c	;volatile
  2282  000C46  8CAB               	bsf	4011,6,c	;volatile
  2283  000C48                     l4217:
  2284  000C48  B403               	btfsc	OpenUSART@config,2,c
  2285  000C4A  8EAC               	bsf	4012,7,c	;volatile
  2286  000C4C  A603               	btfss	OpenUSART@config,3,c
  2287  000C4E  D002               	goto	l1345
  2288  000C50  88AB               	bsf	4011,4,c	;volatile
  2289  000C52  D001               	goto	l4225
  2290  000C54                     l1345:
  2291  000C54  8AAB               	bsf	4011,5,c	;volatile
  2292  000C56                     l4225:
  2293  000C56  A803               	btfss	OpenUSART@config,4,c
  2294  000C58  D002               	goto	l1347
  2295  000C5A  84AC               	bsf	4012,2,c	;volatile
  2296  000C5C  D001               	goto	l1348
  2297  000C5E                     l1347:
  2298  000C5E  94AC               	bcf	4012,2,c	;volatile
  2299  000C60                     l1348:
  2300  000C60  989E               	bcf	3998,4,c	;volatile
  2301  000C62  AC03               	btfss	OpenUSART@config,6,c
  2302  000C64  D002               	goto	l1349
  2303  000C66  8A9D               	bsf	3997,5,c	;volatile
  2304  000C68  D001               	goto	l1350
  2305  000C6A                     l1349:
  2306  000C6A  9A9D               	bcf	3997,5,c	;volatile
  2307  000C6C                     l1350:
  2308  000C6C  9A9E               	bcf	3998,5,c	;volatile
  2309  000C6E  AE03               	btfss	OpenUSART@config,7,c
  2310  000C70  D002               	goto	l1351
  2311  000C72  889D               	bsf	3997,4,c	;volatile
  2312  000C74  D001               	goto	l1352
  2313  000C76                     l1351:
  2314  000C76  989D               	bcf	3997,4,c	;volatile
  2315  000C78                     l1352:
  2316  000C78  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2317  000C7C  8AAC               	bsf	4012,5,c	;volatile
  2318  000C7E  8EAB               	bsf	4011,7,c	;volatile
  2319  000C80  9C94               	bcf	3988,6,c	;volatile
  2320  000C82  8E94               	bsf	3988,7,c	;volatile
  2321  000C84  B8AC               	btfsc	4012,4,c	;volatile
  2322  000C86  BEAC               	btfsc	4012,7,c	;volatile
  2323  000C88  D001               	goto	l1354
  2324  000C8A  8C94               	bsf	3988,6,c	;volatile
  2325  000C8C                     l1354:
  2326  000C8C  0012               	return	
  2327  000C8E  FFFF               	dw	65535	; errata NOP
  2328  000C90                     __end_of_OpenUSART:
  2329                           	opt stack 0
  2330                           tblptru	equ	0xFF8
  2331                           prodh	equ	0xFF4
  2332                           prodl	equ	0xFF3
  2333                           postinc0	equ	0xFEE
  2334                           wreg	equ	0xFE8
  2335                           indf2	equ	0xFDF
  2336                           fsr2h	equ	0xFDA
  2337                           fsr2l	equ	0xFD9
  2338                           status	equ	0xFD8
  2339                           
  2340 ;; *************** function _OpenI2C *****************
  2341 ;; Defined at:
  2342 ;;		line 14 in file "/Applications/microchip/xc8/v1.32/sources/pic18/plib/i2c/i2c_open.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  sync_mode       1    wreg     unsigned char 
  2345 ;;  slew            1    0[COMRAM] unsigned char 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  sync_mode       1    1[COMRAM] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;		None               void
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2357 ;;      Params:         1       0       0       0       0       0       0
  2358 ;;      Locals:         1       0       0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0
  2360 ;;      Totals:         2       0       0       0       0       0       0
  2361 ;;Total ram usage:        2 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_initI2C_USART
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text17
  2371  000E24                     __ptext17:
  2372                           	opt stack 0
  2373  000E24                     _OpenI2C:
  2374                           	opt stack 29
  2375                           
  2376                           ;incstack = 0
  2377  000E24  FFFF               	dw	65535
  2378                           
  2379                           ;OpenI2C@sync_mode stored from wreg
  2380  000E26  6E02               	movwf	OpenI2C@sync_mode,c
  2381  000E28  0E3F               	movlw	63
  2382  000E2A  16C7               	andwf	4039,f,c	;volatile
  2383  000E2C  0E00               	movlw	0
  2384  000E2E  6EC6               	movwf	4038,c	;volatile
  2385  000E30  0E00               	movlw	0
  2386  000E32  6EC5               	movwf	4037,c	;volatile
  2387  000E34  5002               	movf	OpenI2C@sync_mode,w,c
  2388  000E36  12C6               	iorwf	4038,f,c	;volatile
  2389  000E38  5001               	movf	OpenI2C@slew,w,c
  2390  000E3A  12C7               	iorwf	4039,f,c	;volatile
  2391  000E3C  8694               	bsf	3988,3,c	;volatile
  2392  000E3E  8894               	bsf	3988,4,c	;volatile
  2393  000E40  8AC6               	bsf	4038,5,c	;volatile
  2394  000E42  0012               	return	
  2395  000E44  FFFF               	dw	65535	; errata NOP
  2396  000E46                     __end_of_OpenI2C:
  2397                           	opt stack 0
  2398                           tblptru	equ	0xFF8
  2399                           prodh	equ	0xFF4
  2400                           prodl	equ	0xFF3
  2401                           postinc0	equ	0xFEE
  2402                           wreg	equ	0xFE8
  2403                           indf2	equ	0xFDF
  2404                           fsr2h	equ	0xFDA
  2405                           fsr2l	equ	0xFD9
  2406                           status	equ	0xFD8
  2407                           
  2408 ;; *************** function _Delay10KTCYx *****************
  2409 ;; Defined at:
  2410 ;;		line 8 in file "/Applications/microchip/xc8/v1.32/sources/pic18/d10ktcyx.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  unit            1    wreg     unsigned char 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  unit            1    1[COMRAM] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;		None               void
  2417 ;; Registers used:
  2418 ;;		wreg
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2424 ;;      Params:         0       0       0       0       0       0       0
  2425 ;;      Locals:         1       0       0       0       0       0       0
  2426 ;;      Temps:          1       0       0       0       0       0       0
  2427 ;;      Totals:         2       0       0       0       0       0       0
  2428 ;;Total ram usage:        2 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_setupCANTxRx
  2434 ;;		_initI2C_USART
  2435 ;;		_initMPU6050
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text18
  2440  000F1C                     __ptext18:
  2441                           	opt stack 0
  2442  000F1C                     _Delay10KTCYx:
  2443                           	opt stack 29
  2444                           
  2445                           ;incstack = 0
  2446  000F1C  FFFF               	dw	65535
  2447                           
  2448                           ;Delay10KTCYx@unit stored from wreg
  2449  000F1E  6E02               	movwf	Delay10KTCYx@unit,c
  2450  000F20                     l1659:
  2451  000F20  0E0A               	movlw	10
  2452  000F22  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  2453  000F24  0EBE               	movlw	190
  2454  000F26                     u3627:
  2455  000F26  2EE8               	decfsz	wreg,f,c
  2456  000F28  D7FE               	goto	u3627
  2457  000F2A  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  2458  000F2C  D7FC               	goto	u3627
  2459  000F2E  D000               	nop2	
  2460  000F30  2E02               	decfsz	Delay10KTCYx@unit,f,c
  2461  000F32  D7F6               	goto	l1659
  2462  000F34  0012               	return	
  2463  000F36  FFFF               	dw	65535	; errata NOP
  2464  000F38                     __end_of_Delay10KTCYx:
  2465                           	opt stack 0
  2466                           tblptru	equ	0xFF8
  2467                           prodh	equ	0xFF4
  2468                           prodl	equ	0xFF3
  2469                           postinc0	equ	0xFEE
  2470                           wreg	equ	0xFE8
  2471                           indf2	equ	0xFDF
  2472                           fsr2h	equ	0xFDA
  2473                           fsr2l	equ	0xFD9
  2474                           status	equ	0xFD8
  2475                           
  2476 ;; *************** function _flashLED *****************
  2477 ;; Defined at:
  2478 ;;		line 84 in file "main.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  count           2    4[COMRAM] int 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;		None               void
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2492 ;;      Params:         0       0       0       0       0       0       0
  2493 ;;      Locals:         2       0       0       0       0       0       0
  2494 ;;      Temps:          0       0       0       0       0       0       0
  2495 ;;      Totals:         2       0       0       0       0       0       0
  2496 ;;Total ram usage:        2 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    1
  2499 ;; This function calls:
  2500 ;;		_delayzz
  2501 ;; This function is called by:
  2502 ;;		_main
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text19
  2507  000D88                     __ptext19:
  2508                           	opt stack 0
  2509  000D88                     _flashLED:
  2510                           	opt stack 29
  2511                           
  2512                           ;incstack = 0
  2513  000D88  FFFF               	dw	65535
  2514                           
  2515                           ;main.c: 85: int count;
  2516                           ;main.c: 86: count = 10;
  2517  000D8A  0E00               	movlw	0
  2518  000D8C  6E06               	movwf	flashLED@count+1,c
  2519  000D8E  0E0A               	movlw	10
  2520  000D90  6E05               	movwf	flashLED@count,c
  2521  000D92                     l4513:
  2522                           
  2523                           ;main.c: 88: LATBbits.LATB0 = 1;
  2524  000D92  808A               	bsf	3978,0,c	;volatile
  2525                           
  2526                           ;main.c: 89: delayzz();
  2527  000D94  EC77  F006         	call	_delayzz	;wreg free
  2528                           
  2529                           ;main.c: 90: LATBbits.LATB0 = 0;
  2530  000D98  908A               	bcf	3978,0,c	;volatile
  2531                           
  2532                           ;main.c: 91: delayzz();
  2533  000D9A  EC77  F006         	call	_delayzz	;wreg free
  2534                           
  2535                           ;main.c: 92: count--;
  2536  000D9E  0605               	decf	flashLED@count,f,c
  2537  000DA0  A0D8               	btfss	status,0,c
  2538  000DA2  0606               	decf	flashLED@count+1,f,c
  2539                           
  2540                           ;main.c: 93: if (count == 0)
  2541  000DA4  5006               	movf	flashLED@count+1,w,c
  2542  000DA6  1005               	iorwf	flashLED@count,w,c
  2543  000DA8  B4D8               	btfsc	status,2,c
  2544                           
  2545                           ;main.c: 94: {
  2546                           ;main.c: 95: break;
  2547  000DAA  0012               	return	
  2548  000DAC  FFFF               	dw	65535	; assembler added errata NOP
  2549  000DAE  D7F1               	goto	l4513
  2550  000DB0  FFFF               	dw	65535	; errata NOP
  2551  000DB2                     __end_of_flashLED:
  2552                           	opt stack 0
  2553                           tblptru	equ	0xFF8
  2554                           prodh	equ	0xFF4
  2555                           prodl	equ	0xFF3
  2556                           postinc0	equ	0xFEE
  2557                           wreg	equ	0xFE8
  2558                           indf2	equ	0xFDF
  2559                           fsr2h	equ	0xFDA
  2560                           fsr2l	equ	0xFD9
  2561                           status	equ	0xFD8
  2562                           
  2563 ;; *************** function _delayzz *****************
  2564 ;; Defined at:
  2565 ;;		line 128 in file "../../C_Library/pic18f458_badgerloop.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;		None
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  j               2    2[COMRAM] int 
  2570 ;;  i               2    0[COMRAM] int 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;		None               void
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, status,0
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2580 ;;      Params:         0       0       0       0       0       0       0
  2581 ;;      Locals:         4       0       0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0
  2583 ;;      Totals:         4       0       0       0       0       0       0
  2584 ;;Total ram usage:        4 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_flashLED
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text20
  2594  000CEE                     __ptext20:
  2595                           	opt stack 0
  2596  000CEE                     _delayzz:
  2597                           	opt stack 29
  2598                           
  2599                           ;incstack = 0
  2600  000CEE  FFFF               	dw	65535
  2601                           
  2602                           ;pic18f458_badgerloop.c: 129: int i, j;
  2603                           ;pic18f458_badgerloop.c: 130: for(i=0;i<5000;i++)
  2604  000CF0  0E00               	movlw	0
  2605  000CF2  6E02               	movwf	delayzz@i+1,c
  2606  000CF4  0E00               	movlw	0
  2607  000CF6  6E01               	movwf	delayzz@i,c
  2608  000CF8  5002               	movf	delayzz@i+1,w,c
  2609  000CFA  0A80               	xorlw	128
  2610  000CFC  0F6D               	addlw	-147
  2611  000CFE  0E88               	movlw	136
  2612  000D00  B4D8               	btfsc	status,2,c
  2613  000D02  5C01               	subwf	delayzz@i,w,c
  2614  000D04  B0D8               	btfsc	status,0,c
  2615  000D06  D012               	goto	l1248
  2616                           
  2617                           ;pic18f458_badgerloop.c: 131: {
  2618                           ;pic18f458_badgerloop.c: 132: for(j=0;j<2;j++)
  2619  000D08  0E00               	movlw	0
  2620  000D0A  6E04               	movwf	delayzz@j+1,c
  2621  000D0C  0E00               	movlw	0
  2622  000D0E  6E03               	movwf	delayzz@j,c
  2623  000D10  5004               	movf	delayzz@j+1,w,c
  2624  000D12  0A80               	xorlw	128
  2625  000D14  0F80               	addlw	-128
  2626  000D16  0E02               	movlw	2
  2627  000D18  B4D8               	btfsc	status,2,c
  2628  000D1A  5C03               	subwf	delayzz@j,w,c
  2629  000D1C  B0D8               	btfsc	status,0,c
  2630  000D1E  D003               	goto	l4163
  2631                           
  2632                           ;pic18f458_badgerloop.c: 133: {
  2633  000D20  4A03               	infsnz	delayzz@j,f,c
  2634  000D22  2A04               	incf	delayzz@j+1,f,c
  2635  000D24  D7F5               	goto	L1
  2636  000D26                     l4163:
  2637  000D26  4A01               	infsnz	delayzz@i,f,c
  2638  000D28  2A02               	incf	delayzz@i+1,f,c
  2639  000D2A  D7E6               	goto	L2
  2640  000D2C                     l1248:
  2641  000D2C  0012               	return	
  2642  000D2E  FFFF               	dw	65535	; errata NOP
  2643  000D30                     __end_of_delayzz:
  2644                           	opt stack 0
  2645                           tblptru	equ	0xFF8
  2646                           prodh	equ	0xFF4
  2647                           prodl	equ	0xFF3
  2648                           postinc0	equ	0xFEE
  2649                           wreg	equ	0xFE8
  2650                           indf2	equ	0xFDF
  2651                           fsr2h	equ	0xFDA
  2652                           fsr2l	equ	0xFD9
  2653                           status	equ	0xFD8
  2654                           
  2655 ;; *************** function _convertFrom16To8 *****************
  2656 ;; Defined at:
  2657 ;;		line 154 in file "../../C_Library/pic18f458_badgerloop.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  dataAll         2    0[COMRAM] unsigned int 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;		None
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  2    0[COMRAM] PTR unsigned char 
  2664 ;; Registers used:
  2665 ;;		wreg, status,2, status,0
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2671 ;;      Params:         2       0       0       0       0       0       0
  2672 ;;      Locals:         0       0       0       0       0       0       0
  2673 ;;      Temps:          3       0       0       0       0       0       0
  2674 ;;      Totals:         5       0       0       0       0       0       0
  2675 ;;Total ram usage:        5 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_main
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text21
  2685  000DDC                     __ptext21:
  2686                           	opt stack 0
  2687  000DDC                     _convertFrom16To8:
  2688                           	opt stack 30
  2689                           
  2690                           ;incstack = 0
  2691  000DDC  FFFF               	dw	65535
  2692                           
  2693                           ;pic18f458_badgerloop.c: 155: static uint8_t arrayData[2] = { 0x00, 0x00 };
  2694                           ;pic18f458_badgerloop.c: 157: *(arrayData) = (dataAll >> 8) & 0x00FF;
  2695  000DDE  C002  F003         	movff	convertFrom16To8@dataAll+1,??_convertFrom16To8
  2696  000DE2  C003  F004         	movff	??_convertFrom16To8,??_convertFrom16To8+1
  2697  000DE6  6A05               	clrf	(??_convertFrom16To8+2)& (0+255),c
  2698  000DE8  5004               	movf	??_convertFrom16To8+1,w,c
  2699  000DEA  0100               	movlb	0	; () banked
  2700  000DEC  6FDA               	movwf	convertFrom16To8@arrayData& (0+255),b
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;pic18f458_badgerloop.c: 158: arrayData[1] = dataAll & 0x00FF;
  2704  000DEE  C001  F0DB         	movff	convertFrom16To8@dataAll,convertFrom16To8@arrayData+1
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;pic18f458_badgerloop.c: 159: return arrayData;
  2708  000DF2  0100               	movlb	0	; () banked
  2709  000DF4  0E00               	movlw	high convertFrom16To8@arrayData
  2710  000DF6  6E02               	movwf	?_convertFrom16To8+1,c
  2711  000DF8  0100               	movlb	0	; () banked
  2712  000DFA  0EDA               	movlw	low convertFrom16To8@arrayData
  2713  000DFC  6E01               	movwf	?_convertFrom16To8,c
  2714                           
  2715                           ; BSR set to: 0
  2716                           
  2717                           ; BSR set to: 0
  2718  000DFE  0012               	return	
  2719  000E00  FFFF               	dw	65535	; errata NOP
  2720  000E02                     __end_of_convertFrom16To8:
  2721                           	opt stack 0
  2722                           tblptru	equ	0xFF8
  2723                           prodh	equ	0xFF4
  2724                           prodl	equ	0xFF3
  2725                           postinc0	equ	0xFEE
  2726                           wreg	equ	0xFE8
  2727                           indf2	equ	0xFDF
  2728                           fsr2h	equ	0xFDA
  2729                           fsr2l	equ	0xFD9
  2730                           status	equ	0xFD8
  2731                           
  2732 ;; *************** function _MPU6050_getMotion6 *****************
  2733 ;; Defined at:
  2734 ;;		line 1733 in file "../../C_Library/MPU6050.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  ax              2   18[COMRAM] PTR int 
  2737 ;;		 -> main@ax(2), 
  2738 ;;  ay              2   20[COMRAM] PTR int 
  2739 ;;		 -> main@ay(2), 
  2740 ;;  az              2   22[COMRAM] PTR int 
  2741 ;;		 -> main@az(2), 
  2742 ;;  gx              2   24[COMRAM] PTR int 
  2743 ;;		 -> main@gx(2), 
  2744 ;;  gy              2   26[COMRAM] PTR int 
  2745 ;;		 -> main@gy(2), 
  2746 ;;  gz              2   28[COMRAM] PTR int 
  2747 ;;		 -> main@gz(2), 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;		None               void
  2752 ;; Registers used:
  2753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2759 ;;      Params:        12       0       0       0       0       0       0
  2760 ;;      Locals:         0       0       0       0       0       0       0
  2761 ;;      Temps:          2       0       0       0       0       0       0
  2762 ;;      Totals:        14       0       0       0       0       0       0
  2763 ;;Total ram usage:       14 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    3
  2766 ;; This function calls:
  2767 ;;		_I2Cdev_readBytes
  2768 ;; This function is called by:
  2769 ;;		_main
  2770 ;;		_MPU6050_getMotion9
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text22
  2775  00076E                     __ptext22:
  2776                           	opt stack 0
  2777  00076E                     _MPU6050_getMotion6:
  2778                           	opt stack 27
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;incstack = 0
  2782  00076E  FFFF               	dw	65535
  2783                           
  2784                           ;MPU6050.c: 1734: I2Cdev_readBytes(mpu6050.devAddr, 0x3B, 14, mpu6050.buffer);
  2785  000770  0E3B               	movlw	59
  2786  000772  6E07               	movwf	I2Cdev_readBytes@regAddr,c
  2787  000774  0E0E               	movlw	14
  2788  000776  6E08               	movwf	I2Cdev_readBytes@length,c
  2789  000778  0E00               	movlw	high (_mpu6050+1)
  2790  00077A  6E0A               	movwf	I2Cdev_readBytes@data+1,c
  2791  00077C  0E4D               	movlw	low (_mpu6050+1)
  2792  00077E  6E09               	movwf	I2Cdev_readBytes@data,c
  2793  000780  504C               	movf	_mpu6050,w,c
  2794  000782  EC31  F004         	call	_I2Cdev_readBytes
  2795                           
  2796                           ;MPU6050.c: 1735: *ax = (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
  2797  000786  504E               	movf	_mpu6050+2,w,c
  2798  000788  C04D  F01F         	movff	_mpu6050+1,??_MPU6050_getMotion6
  2799  00078C  6A20               	clrf	(??_MPU6050_getMotion6+1)& (0+255),c
  2800  00078E  C01F  F020         	movff	??_MPU6050_getMotion6,??_MPU6050_getMotion6+1
  2801  000792  6A1F               	clrf	??_MPU6050_getMotion6,c
  2802  000794  121F               	iorwf	??_MPU6050_getMotion6,f,c
  2803  000796  0E00               	movlw	0
  2804  000798  1220               	iorwf	??_MPU6050_getMotion6+1,f,c
  2805  00079A  C013  FFD9         	movff	MPU6050_getMotion6@ax,fsr2l
  2806  00079E  C014  FFDA         	movff	MPU6050_getMotion6@ax+1,fsr2h
  2807  0007A2  C01F  FFDE         	movff	??_MPU6050_getMotion6,postinc2
  2808  0007A6  C020  FFDD         	movff	??_MPU6050_getMotion6+1,postdec2
  2809                           
  2810                           ;MPU6050.c: 1736: *ay = (((int16_t)mpu6050.buffer[2]) << 8) | mpu6050.buffer[3];
  2811  0007AA  5050               	movf	_mpu6050+4,w,c
  2812  0007AC  C04F  F01F         	movff	_mpu6050+3,??_MPU6050_getMotion6
  2813  0007B0  6A20               	clrf	(??_MPU6050_getMotion6+1)& (0+255),c
  2814  0007B2  C01F  F020         	movff	??_MPU6050_getMotion6,??_MPU6050_getMotion6+1
  2815  0007B6  6A1F               	clrf	??_MPU6050_getMotion6,c
  2816  0007B8  121F               	iorwf	??_MPU6050_getMotion6,f,c
  2817  0007BA  0E00               	movlw	0
  2818  0007BC  1220               	iorwf	??_MPU6050_getMotion6+1,f,c
  2819  0007BE  C015  FFD9         	movff	MPU6050_getMotion6@ay,fsr2l
  2820  0007C2  C016  FFDA         	movff	MPU6050_getMotion6@ay+1,fsr2h
  2821  0007C6  C01F  FFDE         	movff	??_MPU6050_getMotion6,postinc2
  2822  0007CA  C020  FFDD         	movff	??_MPU6050_getMotion6+1,postdec2
  2823                           
  2824                           ;MPU6050.c: 1737: *az = (((int16_t)mpu6050.buffer[4]) << 8) | mpu6050.buffer[5];
  2825  0007CE  5052               	movf	_mpu6050+6,w,c
  2826  0007D0  C051  F01F         	movff	_mpu6050+5,??_MPU6050_getMotion6
  2827  0007D4  6A20               	clrf	(??_MPU6050_getMotion6+1)& (0+255),c
  2828  0007D6  C01F  F020         	movff	??_MPU6050_getMotion6,??_MPU6050_getMotion6+1
  2829  0007DA  6A1F               	clrf	??_MPU6050_getMotion6,c
  2830  0007DC  121F               	iorwf	??_MPU6050_getMotion6,f,c
  2831  0007DE  0E00               	movlw	0
  2832  0007E0  1220               	iorwf	??_MPU6050_getMotion6+1,f,c
  2833  0007E2  C017  FFD9         	movff	MPU6050_getMotion6@az,fsr2l
  2834  0007E6  C018  FFDA         	movff	MPU6050_getMotion6@az+1,fsr2h
  2835  0007EA  C01F  FFDE         	movff	??_MPU6050_getMotion6,postinc2
  2836  0007EE  C020  FFDD         	movff	??_MPU6050_getMotion6+1,postdec2
  2837                           
  2838                           ;MPU6050.c: 1738: *gx = (((int16_t)mpu6050.buffer[8]) << 8) | mpu6050.buffer[9];
  2839  0007F2  5056               	movf	_mpu6050+10,w,c
  2840  0007F4  C055  F01F         	movff	_mpu6050+9,??_MPU6050_getMotion6
  2841  0007F8  6A20               	clrf	(??_MPU6050_getMotion6+1)& (0+255),c
  2842  0007FA  C01F  F020         	movff	??_MPU6050_getMotion6,??_MPU6050_getMotion6+1
  2843  0007FE  6A1F               	clrf	??_MPU6050_getMotion6,c
  2844  000800  121F               	iorwf	??_MPU6050_getMotion6,f,c
  2845  000802  0E00               	movlw	0
  2846  000804  1220               	iorwf	??_MPU6050_getMotion6+1,f,c
  2847  000806  C019  FFD9         	movff	MPU6050_getMotion6@gx,fsr2l
  2848  00080A  C01A  FFDA         	movff	MPU6050_getMotion6@gx+1,fsr2h
  2849  00080E  C01F  FFDE         	movff	??_MPU6050_getMotion6,postinc2
  2850  000812  C020  FFDD         	movff	??_MPU6050_getMotion6+1,postdec2
  2851                           
  2852                           ;MPU6050.c: 1739: *gy = (((int16_t)mpu6050.buffer[10]) << 8) | mpu6050.buffer[11];
  2853  000816  5058               	movf	_mpu6050+12,w,c
  2854  000818  C057  F01F         	movff	_mpu6050+11,??_MPU6050_getMotion6
  2855  00081C  6A20               	clrf	(??_MPU6050_getMotion6+1)& (0+255),c
  2856  00081E  C01F  F020         	movff	??_MPU6050_getMotion6,??_MPU6050_getMotion6+1
  2857  000822  6A1F               	clrf	??_MPU6050_getMotion6,c
  2858  000824  121F               	iorwf	??_MPU6050_getMotion6,f,c
  2859  000826  0E00               	movlw	0
  2860  000828  1220               	iorwf	??_MPU6050_getMotion6+1,f,c
  2861  00082A  C01B  FFD9         	movff	MPU6050_getMotion6@gy,fsr2l
  2862  00082E  C01C  FFDA         	movff	MPU6050_getMotion6@gy+1,fsr2h
  2863  000832  C01F  FFDE         	movff	??_MPU6050_getMotion6,postinc2
  2864  000836  C020  FFDD         	movff	??_MPU6050_getMotion6+1,postdec2
  2865                           
  2866                           ;MPU6050.c: 1740: *gz = (((int16_t)mpu6050.buffer[12]) << 8) | mpu6050.buffer[13];
  2867  00083A  505A               	movf	_mpu6050+14,w,c
  2868  00083C  C059  F01F         	movff	_mpu6050+13,??_MPU6050_getMotion6
  2869  000840  6A20               	clrf	(??_MPU6050_getMotion6+1)& (0+255),c
  2870  000842  C01F  F020         	movff	??_MPU6050_getMotion6,??_MPU6050_getMotion6+1
  2871  000846  6A1F               	clrf	??_MPU6050_getMotion6,c
  2872  000848  121F               	iorwf	??_MPU6050_getMotion6,f,c
  2873  00084A  0E00               	movlw	0
  2874  00084C  1220               	iorwf	??_MPU6050_getMotion6+1,f,c
  2875  00084E  C01D  FFD9         	movff	MPU6050_getMotion6@gz,fsr2l
  2876  000852  C01E  FFDA         	movff	MPU6050_getMotion6@gz+1,fsr2h
  2877  000856  C01F  FFDE         	movff	??_MPU6050_getMotion6,postinc2
  2878  00085A  C020  FFDD         	movff	??_MPU6050_getMotion6+1,postdec2
  2879  00085E  0012               	return	
  2880  000860  FFFF               	dw	65535	; errata NOP
  2881  000862                     __end_of_MPU6050_getMotion6:
  2882                           	opt stack 0
  2883                           tblptru	equ	0xFF8
  2884                           prodh	equ	0xFF4
  2885                           prodl	equ	0xFF3
  2886                           postinc0	equ	0xFEE
  2887                           wreg	equ	0xFE8
  2888                           indf2	equ	0xFDF
  2889                           postinc2	equ	0xFDE
  2890                           postdec2	equ	0xFDD
  2891                           fsr2h	equ	0xFDA
  2892                           fsr2l	equ	0xFD9
  2893                           status	equ	0xFD8
  2894                           
  2895 ;; *************** function _MPU6050_getFullScaleAccelRange *****************
  2896 ;; Defined at:
  2897 ;;		line 319 in file "../../C_Library/MPU6050.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;		None
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      unsigned char 
  2904 ;; Registers used:
  2905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2911 ;;      Params:         0       0       0       0       0       0       0
  2912 ;;      Locals:         0       0       0       0       0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0       0
  2914 ;;      Totals:         0       0       0       0       0       0       0
  2915 ;;Total ram usage:        0 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    5
  2918 ;; This function calls:
  2919 ;;		_I2Cdev_readBits
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text23
  2926  000E46                     __ptext23:
  2927                           	opt stack 0
  2928  000E46                     _MPU6050_getFullScaleAccelRange:
  2929                           	opt stack 25
  2930                           
  2931                           ;incstack = 0
  2932  000E46  FFFF               	dw	65535
  2933                           
  2934                           ;MPU6050.c: 320: I2Cdev_readBits(mpu6050.devAddr, 0x1C, 4, 2, mpu6050.buffer);
  2935  000E48  0E1C               	movlw	28
  2936  000E4A  6E17               	movwf	I2Cdev_readBits@regAddr,c
  2937  000E4C  0E04               	movlw	4
  2938  000E4E  6E18               	movwf	I2Cdev_readBits@bitStart,c
  2939  000E50  0E02               	movlw	2
  2940  000E52  6E19               	movwf	I2Cdev_readBits@length,c
  2941  000E54  0E00               	movlw	high (_mpu6050+1)
  2942  000E56  6E1B               	movwf	I2Cdev_readBits@data+1,c
  2943  000E58  0E4D               	movlw	low (_mpu6050+1)
  2944  000E5A  6E1A               	movwf	I2Cdev_readBits@data,c
  2945  000E5C  504C               	movf	_mpu6050,w,c
  2946  000E5E  EC31  F005         	call	_I2Cdev_readBits
  2947                           
  2948                           ;MPU6050.c: 321: return mpu6050.buffer[0];
  2949  000E62  504D               	movf	_mpu6050+1,w,c
  2950  000E64  0012               	return	
  2951  000E66  FFFF               	dw	65535	; errata NOP
  2952  000E68                     __end_of_MPU6050_getFullScaleAccelRange:
  2953                           	opt stack 0
  2954                           tblptru	equ	0xFF8
  2955                           prodh	equ	0xFF4
  2956                           prodl	equ	0xFF3
  2957                           postinc0	equ	0xFEE
  2958                           wreg	equ	0xFE8
  2959                           indf2	equ	0xFDF
  2960                           postinc2	equ	0xFDE
  2961                           postdec2	equ	0xFDD
  2962                           fsr2h	equ	0xFDA
  2963                           fsr2l	equ	0xFD9
  2964                           status	equ	0xFD8
  2965                           
  2966 ;; *************** function _I2Cdev_readBits *****************
  2967 ;; Defined at:
  2968 ;;		line 206 in file "../../C_Library/I2Cdev.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  devAddr         1    wreg     unsigned char 
  2971 ;;  regAddr         1   22[COMRAM] unsigned char 
  2972 ;;  bitStart        1   23[COMRAM] unsigned char 
  2973 ;;  length          1   24[COMRAM] unsigned char 
  2974 ;;  data            2   25[COMRAM] PTR unsigned char 
  2975 ;;		 -> mpu6050(15), 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  devAddr         1   31[COMRAM] unsigned char 
  2978 ;;  mask            1   32[COMRAM] unsigned char 
  2979 ;;  b               1   33[COMRAM] unsigned char 
  2980 ;;  count           1   30[COMRAM] unsigned char 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      char 
  2983 ;; Registers used:
  2984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2990 ;;      Params:         5       0       0       0       0       0       0
  2991 ;;      Locals:         4       0       0       0       0       0       0
  2992 ;;      Temps:          3       0       0       0       0       0       0
  2993 ;;      Totals:        12       0       0       0       0       0       0
  2994 ;;Total ram usage:       12 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    4
  2997 ;; This function calls:
  2998 ;;		_I2Cdev_readByte
  2999 ;; This function is called by:
  3000 ;;		_MPU6050_getFullScaleAccelRange
  3001 ;;		_MPU6050_getExternalFrameSync
  3002 ;;		_MPU6050_getDLPFMode
  3003 ;;		_MPU6050_getFullScaleGyroRange
  3004 ;;		_MPU6050_getDHPFMode
  3005 ;;		_MPU6050_getMasterClockSpeed
  3006 ;;		_MPU6050_getSlaveDataLength
  3007 ;;		_MPU6050_getSlave4MasterDelay
  3008 ;;		_MPU6050_getAccelerometerPowerOnDelay
  3009 ;;		_MPU6050_getFreefallDetectionCounterDecrement
  3010 ;;		_MPU6050_getMotionDetectionCounterDecrement
  3011 ;;		_MPU6050_getClockSource
  3012 ;;		_MPU6050_getWakeFrequency
  3013 ;;		_MPU6050_getDeviceID
  3014 ;;		_MPU6050_getXGyroOffsetTC
  3015 ;;		_MPU6050_getYGyroOffsetTC
  3016 ;;		_MPU6050_getZGyroOffsetTC
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           	psect	text24
  3021  000A62                     __ptext24:
  3022                           	opt stack 0
  3023  000A62                     _I2Cdev_readBits:
  3024                           	opt stack 25
  3025                           
  3026                           ;incstack = 0
  3027  000A62  FFFF               	dw	65535
  3028                           
  3029                           ;I2Cdev_readBits@devAddr stored from wreg
  3030  000A64  6E20               	movwf	I2Cdev_readBits@devAddr,c
  3031                           
  3032                           ;I2Cdev.c: 212: uint8_t count, b;
  3033                           ;I2Cdev.c: 213: if ((count = I2Cdev_readByte(devAddr, regAddr, &b)) != 0) {
  3034  000A66  C017  F013         	movff	I2Cdev_readBits@regAddr,I2Cdev_readByte@regAddr
  3035  000A6A  0E00               	movlw	high I2Cdev_readBits@b
  3036  000A6C  6E15               	movwf	I2Cdev_readByte@data+1,c
  3037  000A6E  0E22               	movlw	low I2Cdev_readBits@b
  3038  000A70  6E14               	movwf	I2Cdev_readByte@data,c
  3039  000A72  5020               	movf	I2Cdev_readBits@devAddr,w,c
  3040  000A74  EC7F  F007         	call	_I2Cdev_readByte
  3041  000A78  6E1F               	movwf	I2Cdev_readBits@count,c
  3042  000A7A  501F               	movf	I2Cdev_readBits@count& (0+255),w,c
  3043  000A7C  B4D8               	btfsc	status,2,c
  3044  000A7E  D02F               	goto	l187
  3045                           
  3046                           ;I2Cdev.c: 214: uint8_t mask = ((1 << length) - 1) << (bitStart - length + 1);
  3047  000A80  5019               	movf	I2Cdev_readBits@length,w,c
  3048  000A82  0800               	sublw	0
  3049  000A84  2418               	addwf	I2Cdev_readBits@bitStart,w,c
  3050  000A86  6E1C               	movwf	??_I2Cdev_readBits& (0+255),c
  3051  000A88  0E01               	movlw	1
  3052  000A8A  261C               	addwf	??_I2Cdev_readBits,f,c
  3053  000A8C  C019  F01D         	movff	I2Cdev_readBits@length,??_I2Cdev_readBits+1
  3054  000A90  0E01               	movlw	1
  3055  000A92  6E1E               	movwf	(??_I2Cdev_readBits+2)& (0+255),c
  3056  000A94  2A1D               	incf	??_I2Cdev_readBits+1,f,c
  3057  000A96  D002               	goto	u1764
  3058  000A98                     u1765:
  3059  000A98  90D8               	bcf	status,0,c
  3060  000A9A  361E               	rlcf	??_I2Cdev_readBits+2,f,c
  3061  000A9C                     u1764:
  3062  000A9C  2E1D               	decfsz	??_I2Cdev_readBits+1,f,c
  3063  000A9E  D7FC               	goto	u1765
  3064  000AA0  0EFF               	movlw	255
  3065  000AA2  261E               	addwf	??_I2Cdev_readBits+2,f,c
  3066  000AA4  2A1C               	incf	??_I2Cdev_readBits,f,c
  3067  000AA6  D002               	goto	u1774
  3068  000AA8                     u1775:
  3069  000AA8  90D8               	bcf	status,0,c
  3070  000AAA  361E               	rlcf	??_I2Cdev_readBits+2,f,c
  3071  000AAC                     u1774:
  3072  000AAC  2E1C               	decfsz	??_I2Cdev_readBits,f,c
  3073  000AAE  D7FC               	goto	u1775
  3074  000AB0  501E               	movf	??_I2Cdev_readBits+2,w,c
  3075  000AB2  6E21               	movwf	I2Cdev_readBits@mask,c
  3076                           
  3077                           ;I2Cdev.c: 215: b &= mask;
  3078  000AB4  5021               	movf	I2Cdev_readBits@mask,w,c
  3079  000AB6  1622               	andwf	I2Cdev_readBits@b,f,c
  3080                           
  3081                           ;I2Cdev.c: 216: b >>= (bitStart - length + 1);
  3082  000AB8  5019               	movf	I2Cdev_readBits@length,w,c
  3083  000ABA  0800               	sublw	0
  3084  000ABC  2418               	addwf	I2Cdev_readBits@bitStart,w,c
  3085  000ABE  6E1C               	movwf	??_I2Cdev_readBits& (0+255),c
  3086  000AC0  0E01               	movlw	1
  3087  000AC2  261C               	addwf	??_I2Cdev_readBits,f,c
  3088  000AC4  281C               	incf	??_I2Cdev_readBits,w,c
  3089  000AC6  6E1D               	movwf	(??_I2Cdev_readBits+1)& (0+255),c
  3090  000AC8  D002               	goto	u1780
  3091  000ACA                     u1785:
  3092  000ACA  90D8               	bcf	status,0,c
  3093  000ACC  3222               	rrcf	I2Cdev_readBits@b,f,c
  3094  000ACE                     u1780:
  3095  000ACE  2E1D               	decfsz	(??_I2Cdev_readBits+1)& (0+255),f,c
  3096  000AD0  D7FC               	goto	u1785
  3097                           
  3098                           ;I2Cdev.c: 217: *data = b;
  3099  000AD2  C01A  FFD9         	movff	I2Cdev_readBits@data,fsr2l
  3100  000AD6  C01B  FFDA         	movff	I2Cdev_readBits@data+1,fsr2h
  3101  000ADA  C022  FFDF         	movff	I2Cdev_readBits@b,indf2
  3102  000ADE                     l187:
  3103  000ADE  0012               	return	
  3104  000AE0  FFFF               	dw	65535	; errata NOP
  3105  000AE2                     __end_of_I2Cdev_readBits:
  3106                           	opt stack 0
  3107                           tblptru	equ	0xFF8
  3108                           prodh	equ	0xFF4
  3109                           prodl	equ	0xFF3
  3110                           postinc0	equ	0xFEE
  3111                           wreg	equ	0xFE8
  3112                           indf2	equ	0xFDF
  3113                           postinc2	equ	0xFDE
  3114                           postdec2	equ	0xFDD
  3115                           fsr2h	equ	0xFDA
  3116                           fsr2l	equ	0xFD9
  3117                           status	equ	0xFD8
  3118                           
  3119 ;; *************** function _I2Cdev_readByte *****************
  3120 ;; Defined at:
  3121 ;;		line 95 in file "../../C_Library/I2Cdev.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;  devAddr         1    wreg     unsigned char 
  3124 ;;  regAddr         1   18[COMRAM] unsigned char 
  3125 ;;  data            2   19[COMRAM] PTR unsigned char 
  3126 ;;		 -> mpu6050(15), I2Cdev_writeBits@b(1), I2Cdev_writeBit@b(1), I2Cdev_readBits@b(1), 
  3127 ;;		 -> I2Cdev_readBit@b(1), 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;  devAddr         1   21[COMRAM] unsigned char 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      char 
  3132 ;; Registers used:
  3133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3139 ;;      Params:         3       0       0       0       0       0       0
  3140 ;;      Locals:         1       0       0       0       0       0       0
  3141 ;;      Temps:          0       0       0       0       0       0       0
  3142 ;;      Totals:         4       0       0       0       0       0       0
  3143 ;;Total ram usage:        4 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    3
  3146 ;; This function calls:
  3147 ;;		_I2Cdev_readBytes
  3148 ;; This function is called by:
  3149 ;;		_I2Cdev_readBits
  3150 ;;		_I2Cdev_writeBit
  3151 ;;		_I2Cdev_writeBits
  3152 ;;		_I2Cdev_readBit
  3153 ;;		_MPU6050_getRate
  3154 ;;		_MPU6050_getFreefallDetectionThreshold
  3155 ;;		_MPU6050_getFreefallDetectionDuration
  3156 ;;		_MPU6050_getMotionDetectionThreshold
  3157 ;;		_MPU6050_getMotionDetectionDuration
  3158 ;;		_MPU6050_getZeroMotionDetectionThreshold
  3159 ;;		_MPU6050_getZeroMotionDetectionDuration
  3160 ;;		_MPU6050_getSlaveAddress
  3161 ;;		_MPU6050_getSlaveRegister
  3162 ;;		_MPU6050_getSlave4Address
  3163 ;;		_MPU6050_getSlave4Register
  3164 ;;		_MPU6050_getSlate4InputByte
  3165 ;;		_MPU6050_getIntEnabled
  3166 ;;		_MPU6050_getIntStatus
  3167 ;;		_MPU6050_getExternalSensorByte
  3168 ;;		_MPU6050_getFIFOByte
  3169 ;;		_MPU6050_getXFineGain
  3170 ;;		_MPU6050_getYFineGain
  3171 ;;		_MPU6050_getZFineGain
  3172 ;;		_MPU6050_readMemoryByte
  3173 ;;		_MPU6050_getDMPConfig1
  3174 ;;		_MPU6050_getDMPConfig2
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text25
  3179  000EFE                     __ptext25:
  3180                           	opt stack 0
  3181  000EFE                     _I2Cdev_readByte:
  3182                           	opt stack 23
  3183                           
  3184                           ;incstack = 0
  3185  000EFE  FFFF               	dw	65535
  3186                           
  3187                           ;I2Cdev_readByte@devAddr stored from wreg
  3188  000F00  6E16               	movwf	I2Cdev_readByte@devAddr,c
  3189                           
  3190                           ;I2Cdev.c: 96: return I2Cdev_readBytes(devAddr, regAddr, 1, data);
  3191  000F02  C013  F007         	movff	I2Cdev_readByte@regAddr,I2Cdev_readBytes@regAddr
  3192  000F06  0E01               	movlw	1
  3193  000F08  6E08               	movwf	I2Cdev_readBytes@length,c
  3194  000F0A  C015  F00A         	movff	I2Cdev_readByte@data+1,I2Cdev_readBytes@data+1
  3195  000F0E  C014  F009         	movff	I2Cdev_readByte@data,I2Cdev_readBytes@data
  3196  000F12  5016               	movf	I2Cdev_readByte@devAddr,w,c
  3197  000F14  EC31  F004         	call	_I2Cdev_readBytes
  3198  000F18  0012               	return	
  3199  000F1A  FFFF               	dw	65535	; errata NOP
  3200  000F1C                     __end_of_I2Cdev_readByte:
  3201                           	opt stack 0
  3202                           tblptru	equ	0xFF8
  3203                           prodh	equ	0xFF4
  3204                           prodl	equ	0xFF3
  3205                           postinc0	equ	0xFEE
  3206                           wreg	equ	0xFE8
  3207                           indf2	equ	0xFDF
  3208                           postinc2	equ	0xFDE
  3209                           postdec2	equ	0xFDD
  3210                           fsr2h	equ	0xFDA
  3211                           fsr2l	equ	0xFD9
  3212                           status	equ	0xFD8
  3213                           
  3214 ;; *************** function _I2Cdev_readBytes *****************
  3215 ;; Defined at:
  3216 ;;		line 43 in file "../../C_Library/I2Cdev.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  devAddr         1    wreg     unsigned char 
  3219 ;;  regAddr         1    6[COMRAM] unsigned char 
  3220 ;;  length          1    7[COMRAM] unsigned char 
  3221 ;;  data            2    8[COMRAM] PTR unsigned char 
  3222 ;;		 -> BMP180_getPressure@data(3), BMP180_getTemperature@data(2), BMP180_readUInt@data(2), BMP180_readInt@data(2), 
  3223 ;;		 -> I2C_Bytes(3), mpu6050(15), I2Cdev_writeBits@b(1), I2Cdev_writeBit@b(1), 
  3224 ;;		 -> I2Cdev_readBits@b(1), I2Cdev_readBit@b(1), 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  devAddr         1   16[COMRAM] unsigned char 
  3227 ;;  count           1   17[COMRAM] char 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      char 
  3230 ;; Registers used:
  3231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3237 ;;      Params:         4       0       0       0       0       0       0
  3238 ;;      Locals:         2       0       0       0       0       0       0
  3239 ;;      Temps:          6       0       0       0       0       0       0
  3240 ;;      Totals:        12       0       0       0       0       0       0
  3241 ;;Total ram usage:       12 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    2
  3244 ;; This function calls:
  3245 ;;		_IdleI2C
  3246 ;;		_ReadI2C
  3247 ;;		_WriteI2C
  3248 ;;		___wmul
  3249 ;; This function is called by:
  3250 ;;		_I2Cdev_readByte
  3251 ;;		_MPU6050_getMotion6
  3252 ;;		_MPU6050_getAcceleration
  3253 ;;		_MPU6050_getAccelerationX
  3254 ;;		_MPU6050_getAccelerationY
  3255 ;;		_MPU6050_getAccelerationZ
  3256 ;;		_MPU6050_getTemperature
  3257 ;;		_MPU6050_getRotation
  3258 ;;		_MPU6050_getRotationX
  3259 ;;		_MPU6050_getRotationY
  3260 ;;		_MPU6050_getRotationZ
  3261 ;;		_MPU6050_getExternalSensorWord
  3262 ;;		_MPU6050_getExternalSensorDWord
  3263 ;;		_MPU6050_getFIFOCount
  3264 ;;		_MPU6050_getFIFOBytes
  3265 ;;		_MPU6050_getXAccelOffset
  3266 ;;		_MPU6050_getYAccelOffset
  3267 ;;		_MPU6050_getZAccelOffset
  3268 ;;		_MPU6050_getXGyroOffset
  3269 ;;		_MPU6050_getYGyroOffset
  3270 ;;		_MPU6050_getZGyroOffset
  3271 ;;		_MPU6050_readMemoryBlock
  3272 ;;		_MS_5803_ADC
  3273 ;;		_MS_5803_init
  3274 ;;		_BMP180_readInt
  3275 ;;		_BMP180_readUInt
  3276 ;;		_BMP180_getTemperature
  3277 ;;		_BMP180_getPressure
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text26
  3282  000862                     __ptext26:
  3283                           	opt stack 0
  3284  000862                     _I2Cdev_readBytes:
  3285                           	opt stack 23
  3286                           
  3287                           ;incstack = 0
  3288  000862  FFFF               	dw	65535
  3289                           
  3290                           ;I2Cdev_readBytes@devAddr stored from wreg
  3291  000864  6E11               	movwf	I2Cdev_readBytes@devAddr,c
  3292                           
  3293                           ;I2Cdev.c: 44: int8_t count = 0;
  3294  000866  0E00               	movlw	0
  3295  000868  6E12               	movwf	I2Cdev_readBytes@count,c
  3296                           
  3297                           ;I2Cdev.c: 47: IdleI2C();
  3298  00086A  ECCA  F007         	call	_IdleI2C	;wreg free
  3299                           
  3300                           ;I2Cdev.c: 48: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  3301  00086E  80C5               	bsf	4037,0,c	;volatile
  3302  000870                     l125:
  3303  000870  B0C5               	btfsc	4037,0,c	;volatile
  3304  000872  D7FE               	goto	l125
  3305                           
  3306                           ;I2Cdev.c: 51: IdleI2C();
  3307  000874  ECCA  F007         	call	_IdleI2C	;wreg free
  3308                           
  3309                           ;I2Cdev.c: 52: WriteI2C(devAddr << 1 | 0x00);
  3310  000878  5011               	movf	I2Cdev_readBytes@devAddr,w,c
  3311  00087A  2411               	addwf	I2Cdev_readBytes@devAddr,w,c
  3312  00087C  ECE4  F005         	call	_WriteI2C
  3313                           
  3314                           ;I2Cdev.c: 55: IdleI2C();
  3315  000880  ECCA  F007         	call	_IdleI2C	;wreg free
  3316                           
  3317                           ;I2Cdev.c: 56: WriteI2C(regAddr);
  3318  000884  5007               	movf	I2Cdev_readBytes@regAddr,w,c
  3319  000886  ECE4  F005         	call	_WriteI2C
  3320                           
  3321                           ;I2Cdev.c: 59: IdleI2C();
  3322  00088A  ECCA  F007         	call	_IdleI2C	;wreg free
  3323                           
  3324                           ;I2Cdev.c: 60: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  3325  00088E  82C5               	bsf	4037,1,c	;volatile
  3326  000890                     l128:
  3327  000890  B2C5               	btfsc	4037,1,c	;volatile
  3328  000892  D7FE               	goto	l128
  3329                           
  3330                           ;I2Cdev.c: 63: IdleI2C();
  3331  000894  ECCA  F007         	call	_IdleI2C	;wreg free
  3332                           
  3333                           ;I2Cdev.c: 64: WriteI2C(devAddr << 1 | 0x01);
  3334  000898  80D8               	bsf	status,0,c
  3335  00089A  3411               	rlcf	I2Cdev_readBytes@devAddr,w,c
  3336  00089C  ECE4  F005         	call	_WriteI2C
  3337                           
  3338                           ;I2Cdev.c: 66: for (count = 0; count < length; count++) {
  3339  0008A0  0E00               	movlw	0
  3340  0008A2  6E12               	movwf	I2Cdev_readBytes@count,c
  3341  0008A4  D03B               	goto	l3977
  3342  0008A6                     l3957:
  3343                           
  3344                           ;I2Cdev.c: 68: IdleI2C();
  3345  0008A6  ECCA  F007         	call	_IdleI2C	;wreg free
  3346                           
  3347                           ;I2Cdev.c: 69: data[count] = ReadI2C();
  3348  0008AA  5012               	movf	I2Cdev_readBytes@count,w,c
  3349  0008AC  6E01               	movwf	___wmul@multiplier,c
  3350  0008AE  6A02               	clrf	___wmul@multiplier+1,c
  3351  0008B0  BE01               	btfsc	___wmul@multiplier,7,c
  3352  0008B2  0602               	decf	___wmul@multiplier+1,f,c
  3353  0008B4  0E00               	movlw	0
  3354  0008B6  6E04               	movwf	___wmul@multiplicand+1,c
  3355  0008B8  0E01               	movlw	1
  3356  0008BA  6E03               	movwf	___wmul@multiplicand,c
  3357  0008BC  ECD9  F006         	call	___wmul	;wreg free
  3358  0008C0  5001               	movf	?___wmul,w,c
  3359  0008C2  2409               	addwf	I2Cdev_readBytes@data,w,c
  3360  0008C4  6ED9               	movwf	fsr2l,c
  3361  0008C6  5002               	movf	?___wmul+1,w,c
  3362  0008C8  200A               	addwfc	I2Cdev_readBytes@data+1,w,c
  3363  0008CA  6EDA               	movwf	fsr2h,c
  3364  0008CC  ECAE  F006         	call	_ReadI2C	;wreg free
  3365  0008D0  6EDF               	movwf	indf2,c
  3366                           
  3367                           ;I2Cdev.c: 71: if (count == length - 1) {
  3368  0008D2  C012  F00B         	movff	I2Cdev_readBytes@count,??_I2Cdev_readBytes
  3369  0008D6  6A0C               	clrf	(??_I2Cdev_readBytes+1)& (0+255),c
  3370  0008D8  BE0B               	btfsc	??_I2Cdev_readBytes& (0+255),7,c
  3371  0008DA  060C               	decf	(??_I2Cdev_readBytes+1)& (0+255),f,c
  3372  0008DC  0EFF               	movlw	255
  3373  0008DE  6E0D               	movwf	(??_I2Cdev_readBytes+2)& (0+255),c
  3374  0008E0  0EFF               	movlw	255
  3375  0008E2  6E0E               	movwf	(??_I2Cdev_readBytes+3)& (0+255),c
  3376  0008E4  5008               	movf	I2Cdev_readBytes@length,w,c
  3377  0008E6  6E0F               	movwf	(??_I2Cdev_readBytes+4)& (0+255),c
  3378  0008E8  6A10               	clrf	(??_I2Cdev_readBytes+5)& (0+255),c
  3379  0008EA  500D               	movf	??_I2Cdev_readBytes+2,w,c
  3380  0008EC  260F               	addwf	??_I2Cdev_readBytes+4,f,c
  3381  0008EE  500E               	movf	??_I2Cdev_readBytes+3,w,c
  3382  0008F0  2210               	addwfc	??_I2Cdev_readBytes+5,f,c
  3383  0008F2  500C               	movf	??_I2Cdev_readBytes+1,w,c
  3384  0008F4  1810               	xorwf	??_I2Cdev_readBytes+5,w,c
  3385  0008F6  E102               	bnz	u1515
  3386  0008F8  500B               	movf	??_I2Cdev_readBytes,w,c
  3387  0008FA  180F               	xorwf	??_I2Cdev_readBytes+4,w,c
  3388  0008FC                     u1515:
  3389  0008FC  A4D8               	btfss	status,2,c
  3390  0008FE  D007               	goto	l3969
  3391                           
  3392                           ;I2Cdev.c: 73: IdleI2C();
  3393  000900  ECCA  F007         	call	_IdleI2C	;wreg free
  3394                           
  3395                           ;I2Cdev.c: 74: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  3396  000904  8AC5               	bsf	4037,5,c	;volatile
  3397  000906  88C5               	bsf	4037,4,c	;volatile
  3398  000908                     l134:
  3399  000908  A8C5               	btfss	4037,4,c	;volatile
  3400  00090A  D007               	goto	l3975
  3401  00090C  D7FD               	goto	l134
  3402  00090E                     l3969:
  3403                           
  3404                           ;I2Cdev.c: 77: IdleI2C();
  3405  00090E  ECCA  F007         	call	_IdleI2C	;wreg free
  3406                           
  3407                           ;I2Cdev.c: 78: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  3408  000912  9AC5               	bcf	4037,5,c	;volatile
  3409  000914  88C5               	bsf	4037,4,c	;volatile
  3410  000916                     l138:
  3411  000916  B8C5               	btfsc	4037,4,c	;volatile
  3412  000918  D7FE               	goto	l138
  3413  00091A                     l3975:
  3414  00091A  2A12               	incf	I2Cdev_readBytes@count,f,c
  3415  00091C                     l3977:
  3416  00091C  5008               	movf	I2Cdev_readBytes@length,w,c
  3417  00091E  6E0B               	movwf	??_I2Cdev_readBytes& (0+255),c
  3418  000920  6A0C               	clrf	(??_I2Cdev_readBytes+1)& (0+255),c
  3419  000922  C012  F00D         	movff	I2Cdev_readBytes@count,??_I2Cdev_readBytes+2
  3420  000926  6A0E               	clrf	(??_I2Cdev_readBytes+3)& (0+255),c
  3421  000928  BE0D               	btfsc	(??_I2Cdev_readBytes+2)& (0+255),7,c
  3422  00092A  060E               	decf	(??_I2Cdev_readBytes+3)& (0+255),f,c
  3423  00092C  500E               	movf	??_I2Cdev_readBytes+3,w,c
  3424  00092E  0A80               	xorlw	128
  3425  000930  6E0F               	movwf	(??_I2Cdev_readBytes+4)& (0+255),c
  3426  000932  500B               	movf	??_I2Cdev_readBytes,w,c
  3427  000934  5C0D               	subwf	??_I2Cdev_readBytes+2,w,c
  3428  000936  500C               	movf	??_I2Cdev_readBytes+1,w,c
  3429  000938  0A80               	xorlw	128
  3430  00093A  580F               	subwfb	(??_I2Cdev_readBytes+4)& (0+255),w,c
  3431  00093C  A0D8               	btfss	status,0,c
  3432  00093E  D7B3               	goto	l3957
  3433                           
  3434                           ;I2Cdev.c: 79: }
  3435                           ;I2Cdev.c: 80: }
  3436                           ;I2Cdev.c: 83: IdleI2C();
  3437  000940  ECCA  F007         	call	_IdleI2C	;wreg free
  3438                           
  3439                           ;I2Cdev.c: 84: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  3440  000944  84C5               	bsf	4037,2,c	;volatile
  3441  000946                     l142:
  3442  000946  B4C5               	btfsc	4037,2,c	;volatile
  3443  000948  D7FE               	goto	l142
  3444                           
  3445                           ;I2Cdev.c: 86: return count;
  3446  00094A  5012               	movf	I2Cdev_readBytes@count,w,c
  3447  00094C  0012               	return	
  3448  00094E  FFFF               	dw	65535	; errata NOP
  3449  000950                     __end_of_I2Cdev_readBytes:
  3450                           	opt stack 0
  3451                           tblptru	equ	0xFF8
  3452                           prodh	equ	0xFF4
  3453                           prodl	equ	0xFF3
  3454                           postinc0	equ	0xFEE
  3455                           wreg	equ	0xFE8
  3456                           indf2	equ	0xFDF
  3457                           postinc2	equ	0xFDE
  3458                           postdec2	equ	0xFDD
  3459                           fsr2h	equ	0xFDA
  3460                           fsr2l	equ	0xFD9
  3461                           status	equ	0xFD8
  3462                           
  3463 ;; *************** function ___wmul *****************
  3464 ;; Defined at:
  3465 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  multiplier      2    0[COMRAM] unsigned int 
  3468 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  product         2    4[COMRAM] unsigned int 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  2    0[COMRAM] unsigned int 
  3473 ;; Registers used:
  3474 ;;		wreg, status,2, status,0, prodl, prodh
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3480 ;;      Params:         4       0       0       0       0       0       0
  3481 ;;      Locals:         2       0       0       0       0       0       0
  3482 ;;      Temps:          0       0       0       0       0       0       0
  3483 ;;      Totals:         6       0       0       0       0       0       0
  3484 ;;Total ram usage:        6 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_I2Cdev_readBytes
  3490 ;;		_I2Cdev_readWords
  3491 ;;		_eval_poly
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text27
  3496  000DB2                     __ptext27:
  3497                           	opt stack 0
  3498  000DB2                     ___wmul:
  3499                           	opt stack 24
  3500                           
  3501                           ;incstack = 0
  3502  000DB2  FFFF               	dw	65535
  3503  000DB4  5001               	movf	___wmul@multiplier,w,c
  3504  000DB6  0203               	mulwf	___wmul@multiplicand,c
  3505  000DB8  CFF3 F005          	movff	prodl,___wmul@product
  3506  000DBC  CFF4 F006          	movff	prodh,___wmul@product+1
  3507  000DC0  5001               	movf	___wmul@multiplier,w,c
  3508  000DC2  0204               	mulwf	___wmul@multiplicand+1,c
  3509  000DC4  50F3               	movf	prodl,w,c
  3510  000DC6  2606               	addwf	___wmul@product+1,f,c
  3511  000DC8  5002               	movf	___wmul@multiplier+1,w,c
  3512  000DCA  0203               	mulwf	___wmul@multiplicand,c
  3513  000DCC  50F3               	movf	prodl,w,c
  3514  000DCE  2606               	addwf	___wmul@product+1,f,c
  3515  000DD0  C005  F001         	movff	___wmul@product,?___wmul
  3516  000DD4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3517  000DD8  0012               	return	
  3518  000DDA  FFFF               	dw	65535	; errata NOP
  3519  000DDC                     __end_of___wmul:
  3520                           	opt stack 0
  3521                           tblptru	equ	0xFF8
  3522                           prodh	equ	0xFF4
  3523                           prodl	equ	0xFF3
  3524                           postinc0	equ	0xFEE
  3525                           wreg	equ	0xFE8
  3526                           indf2	equ	0xFDF
  3527                           postinc2	equ	0xFDE
  3528                           postdec2	equ	0xFDD
  3529                           fsr2h	equ	0xFDA
  3530                           fsr2l	equ	0xFD9
  3531                           status	equ	0xFD8
  3532                           
  3533 ;; *************** function _WriteI2C *****************
  3534 ;; Defined at:
  3535 ;;		line 12 in file "/Applications/microchip/xc8/v1.32/sources/pic18/plib/i2c/i2c_writ.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  data_out        1    wreg     unsigned char 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  data_out        1    2[COMRAM] unsigned char 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      char 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2, status,0, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3549 ;;      Params:         0       0       0       0       0       0       0
  3550 ;;      Locals:         1       0       0       0       0       0       0
  3551 ;;      Temps:          1       0       0       0       0       0       0
  3552 ;;      Totals:         2       0       0       0       0       0       0
  3553 ;;Total ram usage:        2 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    1
  3556 ;; This function calls:
  3557 ;;		_IdleI2C
  3558 ;; This function is called by:
  3559 ;;		_I2Cdev_readBytes
  3560 ;;		_I2Cdev_writeBytes
  3561 ;;		_I2Cdev_readWords
  3562 ;;		_I2Cdev_writeWords
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text28
  3567  000BC8                     __ptext28:
  3568                           	opt stack 0
  3569  000BC8                     _WriteI2C:
  3570                           	opt stack 23
  3571                           
  3572                           ;incstack = 0
  3573  000BC8  FFFF               	dw	65535
  3574                           
  3575                           ;WriteI2C@data_out stored from wreg
  3576  000BCA  6E03               	movwf	WriteI2C@data_out,c
  3577  000BCC  C003  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  3578  000BD0  BEC6               	btfsc	4038,7,c	;volatile
  3579  000BD2  D02C               	goto	l1410
  3580                           
  3581                           ;	Return value of _WriteI2C is never used
  3582  000BD4  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  3583  000BD8  0E0F               	movlw	15
  3584  000BDA  1602               	andwf	??_WriteI2C,f,c
  3585  000BDC  5002               	movf	??_WriteI2C,w,c
  3586  000BDE  0A08               	xorlw	8
  3587  000BE0  B4D8               	btfsc	status,2,c
  3588  000BE2  D00F               	goto	l3917
  3589  000BE4  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  3590  000BE8  0E0F               	movlw	15
  3591  000BEA  1602               	andwf	??_WriteI2C,f,c
  3592  000BEC  5002               	movf	??_WriteI2C,w,c
  3593  000BEE  0A0B               	xorlw	11
  3594  000BF0  B4D8               	btfsc	status,2,c
  3595  000BF2  D007               	goto	l3917
  3596  000BF4  88C6               	bsf	4038,4,c	;volatile
  3597  000BF6                     l1413:
  3598  000BF6  A69E               	btfss	3998,3,c	;volatile
  3599  000BF8  D7FE               	goto	l1413
  3600  000BFA  B4C7               	btfsc	4039,2,c	;volatile
  3601  000BFC  D017               	goto	l1410
  3602  000BFE  50C7               	movf	4039,w,c	;volatile
  3603  000C00  D015               	goto	l1410
  3604  000C02                     l3917:
  3605  000C02  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  3606  000C06  0E0F               	movlw	15
  3607  000C08  1602               	andwf	??_WriteI2C,f,c
  3608  000C0A  5002               	movf	??_WriteI2C,w,c
  3609  000C0C  0A08               	xorlw	8
  3610  000C0E  B4D8               	btfsc	status,2,c
  3611  000C10  D008               	goto	l1422
  3612  000C12  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  3613  000C16  0E0F               	movlw	15
  3614  000C18  1602               	andwf	??_WriteI2C,f,c
  3615  000C1A  5002               	movf	??_WriteI2C,w,c
  3616  000C1C  0A0B               	xorlw	11
  3617  000C1E  A4D8               	btfss	status,2,c
  3618  000C20  D005               	goto	l1410
  3619  000C22                     l1422:
  3620  000C22  B0C7               	btfsc	4039,0,c	;volatile
  3621  000C24  D7FE               	goto	l1422
  3622  000C26  ECCA  F007         	call	_IdleI2C	;wreg free
  3623  000C2A  50C5               	movf	4037,w,c	;volatile
  3624  000C2C                     l1410:
  3625  000C2C  0012               	return	
  3626  000C2E  FFFF               	dw	65535	; errata NOP
  3627  000C30                     __end_of_WriteI2C:
  3628                           	opt stack 0
  3629                           tblptru	equ	0xFF8
  3630                           prodh	equ	0xFF4
  3631                           prodl	equ	0xFF3
  3632                           postinc0	equ	0xFEE
  3633                           wreg	equ	0xFE8
  3634                           indf2	equ	0xFDF
  3635                           postinc2	equ	0xFDE
  3636                           postdec2	equ	0xFDD
  3637                           fsr2h	equ	0xFDA
  3638                           fsr2l	equ	0xFD9
  3639                           status	equ	0xFD8
  3640                           
  3641 ;; *************** function _IdleI2C *****************
  3642 ;; Defined at:
  3643 ;;		line 24 in file "/Applications/microchip/xc8/v1.32/sources/pic18/plib/i2c/i2c_idle.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;		None               void
  3650 ;; Registers used:
  3651 ;;		wreg, status,2, status,0
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3657 ;;      Params:         0       0       0       0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0       0       0
  3659 ;;      Temps:          1       0       0       0       0       0       0
  3660 ;;      Totals:         1       0       0       0       0       0       0
  3661 ;;Total ram usage:        1 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_I2Cdev_readBytes
  3667 ;;		_I2Cdev_writeBytes
  3668 ;;		_WriteI2C
  3669 ;;		_I2Cdev_readWords
  3670 ;;		_I2Cdev_writeWords
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text29
  3675  000F94                     __ptext29:
  3676                           	opt stack 0
  3677  000F94                     _IdleI2C:
  3678                           	opt stack 23
  3679                           
  3680                           ;incstack = 0
  3681  000F94  FFFF               	dw	65535
  3682  000F96                     l3893:
  3683  000F96  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
  3684  000F9A  0E1F               	movlw	31
  3685  000F9C  1601               	andwf	??_IdleI2C,f,c
  3686  000F9E  B4D8               	btfsc	status,2,c
  3687  000FA0  B4C7               	btfsc	4039,2,c	;volatile
  3688  000FA2  D7F9               	goto	l3893
  3689  000FA4  0012               	return	
  3690  000FA6  FFFF               	dw	65535	; errata NOP
  3691  000FA8                     __end_of_IdleI2C:
  3692                           	opt stack 0
  3693                           tblptru	equ	0xFF8
  3694                           prodh	equ	0xFF4
  3695                           prodl	equ	0xFF3
  3696                           postinc0	equ	0xFEE
  3697                           wreg	equ	0xFE8
  3698                           indf2	equ	0xFDF
  3699                           postinc2	equ	0xFDE
  3700                           postdec2	equ	0xFDD
  3701                           fsr2h	equ	0xFDA
  3702                           fsr2l	equ	0xFD9
  3703                           status	equ	0xFD8
  3704                           
  3705 ;; *************** function _ReadI2C *****************
  3706 ;; Defined at:
  3707 ;;		line 11 in file "/Applications/microchip/xc8/v1.32/sources/pic18/plib/i2c/i2c_read.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      unsigned char 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2, status,0
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3721 ;;      Params:         0       0       0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0       0       0
  3723 ;;      Temps:          1       0       0       0       0       0       0
  3724 ;;      Totals:         1       0       0       0       0       0       0
  3725 ;;Total ram usage:        1 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; This function calls:
  3728 ;;		Nothing
  3729 ;; This function is called by:
  3730 ;;		_I2Cdev_readBytes
  3731 ;;		_I2Cdev_readWords
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           	psect	text30
  3736  000D5C                     __ptext30:
  3737                           	opt stack 0
  3738  000D5C                     _ReadI2C:
  3739                           	opt stack 24
  3740                           
  3741                           ;incstack = 0
  3742  000D5C  FFFF               	dw	65535
  3743  000D5E  CFC6 F001          	movff	4038,??_ReadI2C	;volatile
  3744  000D62  0E0F               	movlw	15
  3745  000D64  1601               	andwf	??_ReadI2C,f,c
  3746  000D66  5001               	movf	??_ReadI2C,w,c
  3747  000D68  0A08               	xorlw	8
  3748  000D6A  B4D8               	btfsc	status,2,c
  3749  000D6C  D007               	goto	l1388
  3750  000D6E  CFC6 F001          	movff	4038,??_ReadI2C	;volatile
  3751  000D72  0E0F               	movlw	15
  3752  000D74  1601               	andwf	??_ReadI2C,f,c
  3753  000D76  5001               	movf	??_ReadI2C,w,c
  3754  000D78  0A0B               	xorlw	11
  3755  000D7A  B4D8               	btfsc	status,2,c
  3756  000D7C                     l1388:
  3757  000D7C  86C5               	bsf	4037,3,c	;volatile
  3758  000D7E                     l1389:
  3759  000D7E  A0C7               	btfss	4039,0,c	;volatile
  3760  000D80  D7FE               	goto	l1389
  3761  000D82  50C9               	movf	4041,w,c	;volatile
  3762  000D84  0012               	return	
  3763  000D86  FFFF               	dw	65535	; errata NOP
  3764  000D88                     __end_of_ReadI2C:
  3765                           	opt stack 0
  3766                           tblptru	equ	0xFF8
  3767                           prodh	equ	0xFF4
  3768                           prodl	equ	0xFF3
  3769                           postinc0	equ	0xFEE
  3770                           wreg	equ	0xFE8
  3771                           indf2	equ	0xFDF
  3772                           postinc2	equ	0xFDE
  3773                           postdec2	equ	0xFDD
  3774                           fsr2h	equ	0xFDA
  3775                           fsr2l	equ	0xFD9
  3776                           status	equ	0xFD8
  3777                           
  3778 ;; *************** function _CAN_Transmit *****************
  3779 ;; Defined at:
  3780 ;;		line 18 in file "main.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  canId           2    3[COMRAM] unsigned int 
  3785 ;; Return value:  Size  Location     Type
  3786 ;;		None               void
  3787 ;; Registers used:
  3788 ;;		wreg, status,2, status,0
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3794 ;;      Params:         0       0       0       0       0       0       0
  3795 ;;      Locals:         2       0       0       0       0       0       0
  3796 ;;      Temps:          3       0       0       0       0       0       0
  3797 ;;      Totals:         5       0       0       0       0       0       0
  3798 ;;Total ram usage:        5 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_main
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text31
  3808  0009DA                     __ptext31:
  3809                           	opt stack 0
  3810  0009DA                     _CAN_Transmit:
  3811                           	opt stack 30
  3812                           
  3813                           ;incstack = 0
  3814  0009DA  FFFF               	dw	65535
  3815                           
  3816                           ;main.c: 20: uint16_t canId = (1);
  3817  0009DC  0E00               	movlw	0
  3818  0009DE  6E05               	movwf	CAN_Transmit@canId+1,c
  3819  0009E0  0E01               	movlw	1
  3820  0009E2  6E04               	movwf	CAN_Transmit@canId,c
  3821                           
  3822                           ;main.c: 21: canId = (canId<<5);
  3823  0009E4  C004  F001         	movff	CAN_Transmit@canId,??_CAN_Transmit
  3824  0009E8  C005  F002         	movff	CAN_Transmit@canId+1,??_CAN_Transmit+1
  3825  0009EC  0E05               	movlw	5
  3826  0009EE                     u2155:
  3827  0009EE  90D8               	bcf	status,0,c
  3828  0009F0  3601               	rlcf	??_CAN_Transmit,f,c
  3829  0009F2  3602               	rlcf	??_CAN_Transmit+1,f,c
  3830  0009F4  2EE8               	decfsz	wreg,f,c
  3831  0009F6  D7FB               	goto	u2155
  3832  0009F8  C001  F004         	movff	??_CAN_Transmit,CAN_Transmit@canId
  3833  0009FC  C002  F005         	movff	??_CAN_Transmit+1,CAN_Transmit@canId+1
  3834  000A00                     l1284:
  3835  000A00  CF40 F001          	movff	3904,??_CAN_Transmit
  3836  000A04  B601               	btfsc	??_CAN_Transmit,3,c
  3837  000A06  D7FC               	goto	l1284
  3838                           
  3839                           ;main.c: 26: TXB0SIDL = (uint8_t)(canId & 0x00E0);
  3840  000A08  C004  F001         	movff	CAN_Transmit@canId,??_CAN_Transmit
  3841  000A0C  0EE0               	movlw	224
  3842  000A0E  1601               	andwf	??_CAN_Transmit,f,c
  3843  000A10  C001  FF42         	movff	??_CAN_Transmit,3906
  3844                           
  3845                           ;main.c: 27: TXB0SIDH = (uint8_t)((canId>>8)& 0x00FF);
  3846  000A14  C005  F001         	movff	CAN_Transmit@canId+1,??_CAN_Transmit
  3847  000A18  C001  F002         	movff	??_CAN_Transmit,??_CAN_Transmit+1
  3848  000A1C  6A03               	clrf	(??_CAN_Transmit+2)& (0+255),c
  3849  000A1E  C002  FF41         	movff	??_CAN_Transmit+1,3905
  3850                           
  3851                           ;main.c: 31: TXB0DLC = 0x08;
  3852  000A22  0E08               	movlw	8
  3853  000A24  CFE8 FF45          	movff	wreg,3909
  3854                           
  3855                           ;main.c: 34: TXB0D0 = sendData[0];
  3856  000A28  0100               	movlb	0	; () banked
  3857  000A2A  C068  FF46         	movff	_sendData,3910	;volatile
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;main.c: 35: TXB0D1 = sendData[1];
  3861  000A2E  0100               	movlb	0	; () banked
  3862  000A30  C069  FF47         	movff	_sendData+1,3911	;volatile
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;main.c: 36: TXB0D2 = sendData[2];
  3866  000A34  0100               	movlb	0	; () banked
  3867  000A36  C06A  FF48         	movff	_sendData+2,3912	;volatile
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;main.c: 37: TXB0D3 = sendData[3];
  3871  000A3A  0100               	movlb	0	; () banked
  3872  000A3C  C06B  FF49         	movff	_sendData+3,3913	;volatile
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;main.c: 38: TXB0D4 = sendData[4];
  3876  000A40  0100               	movlb	0	; () banked
  3877  000A42  C06C  FF4A         	movff	_sendData+4,3914	;volatile
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;main.c: 39: TXB0D5 = sendData[5];
  3881  000A46  0100               	movlb	0	; () banked
  3882  000A48  C06D  FF4B         	movff	_sendData+5,3915	;volatile
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;main.c: 40: TXB0D6 = sendData[6];
  3886  000A4C  0100               	movlb	0	; () banked
  3887  000A4E  C06E  FF4C         	movff	_sendData+6,3916	;volatile
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;main.c: 41: TXB0D7 = sendData[7];
  3891  000A52  0100               	movlb	0	; () banked
  3892  000A54  C06F  FF4D         	movff	_sendData+7,3917	;volatile
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;main.c: 44: TXB0CON = (1<<3);
  3896  000A58  0E08               	movlw	8
  3897  000A5A  CFE8 FF40          	movff	wreg,3904
  3898                           
  3899                           ; BSR set to: 0
  3900  000A5E  0012               	return	
  3901  000A60  FFFF               	dw	65535	; errata NOP
  3902  000A62                     __end_of_CAN_Transmit:
  3903                           	opt stack 0
  3904                           tblptru	equ	0xFF8
  3905                           prodh	equ	0xFF4
  3906                           prodl	equ	0xFF3
  3907                           postinc0	equ	0xFEE
  3908                           wreg	equ	0xFE8
  3909                           indf2	equ	0xFDF
  3910                           postinc2	equ	0xFDE
  3911                           postdec2	equ	0xFDD
  3912                           fsr2h	equ	0xFDA
  3913                           fsr2l	equ	0xFD9
  3914                           status	equ	0xFD8
  3915                           tblptru	equ	0xFF8
  3916                           prodh	equ	0xFF4
  3917                           prodl	equ	0xFF3
  3918                           postinc0	equ	0xFEE
  3919                           wreg	equ	0xFE8
  3920                           indf2	equ	0xFDF
  3921                           postinc2	equ	0xFDE
  3922                           postdec2	equ	0xFDD
  3923                           fsr2h	equ	0xFDA
  3924                           fsr2l	equ	0xFD9
  3925                           status	equ	0xFD8
  3926                           
  3927                           	psect	rparam
  3928  0000                     tblptru	equ	0xFF8
  3929                           prodh	equ	0xFF4
  3930                           prodl	equ	0xFF3
  3931                           postinc0	equ	0xFEE
  3932                           wreg	equ	0xFE8
  3933                           indf2	equ	0xFDF
  3934                           postinc2	equ	0xFDE
  3935                           postdec2	equ	0xFDD
  3936                           fsr2h	equ	0xFDA
  3937                           fsr2l	equ	0xFD9
  3938                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         167
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     51      94
    BANK0           160      0     124
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sp__convertFrom16To8	PTR unsigned char  size(2) Largest target is 2
		 -> convertFrom16To8@arrayData(BANK0[2]), 

    MPU6050_getMotion6@gz	PTR int  size(2) Largest target is 2
		 -> main@gz(COMRAM[2]), 

    MPU6050_getMotion6@gy	PTR int  size(2) Largest target is 2
		 -> main@gy(COMRAM[2]), 

    MPU6050_getMotion6@gx	PTR int  size(2) Largest target is 2
		 -> main@gx(COMRAM[2]), 

    MPU6050_getMotion6@az	PTR int  size(2) Largest target is 2
		 -> main@az(COMRAM[2]), 

    MPU6050_getMotion6@ay	PTR int  size(2) Largest target is 2
		 -> main@ay(COMRAM[2]), 

    MPU6050_getMotion6@ax	PTR int  size(2) Largest target is 2
		 -> main@ax(COMRAM[2]), 

    I2Cdev_writeBytes@data	PTR unsigned char  size(2) Largest target is 2
		 -> BMP180_startPressure@data(COMRAM[2]), BMP180_startTemperature@data(COMRAM[2]), NULL(NULL[0]), I2Cdev_writeByte@data(COMRAM[1]), 

    I2Cdev_readBits@data	PTR unsigned char  size(2) Largest target is 15
		 -> mpu6050(COMRAM[15]), 

    I2Cdev_readByte@data	PTR unsigned char  size(2) Largest target is 15
		 -> mpu6050(COMRAM[15]), I2Cdev_writeBits@b(COMRAM[1]), I2Cdev_writeBit@b(COMRAM[1]), I2Cdev_readBits@b(COMRAM[1]), 
		 -> I2Cdev_readBit@b(COMRAM[1]), 

    I2Cdev_readBytes@data	PTR unsigned char  size(2) Largest target is 15
		 -> BMP180_getPressure@data(COMRAM[3]), BMP180_getTemperature@data(COMRAM[2]), BMP180_readUInt@data(COMRAM[2]), BMP180_readInt@data(COMRAM[2]), 
		 -> I2C_Bytes(BANK0[3]), mpu6050(COMRAM[15]), I2Cdev_writeBits@b(COMRAM[1]), I2Cdev_writeBit@b(COMRAM[1]), 
		 -> I2Cdev_readBits@b(COMRAM[1]), I2Cdev_readBit@b(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _setupCANTxRx->_Delay10KTCYx
    _CAN_Init->_CAN_SetMode
    _MPU6050_initialize->_MPU6050_setSleepEnabled
    _MPU6050_setSleepEnabled->_I2Cdev_writeBit
    _I2Cdev_writeBit->_I2Cdev_readByte
    _MPU6050_setFullScaleGyroRange->_I2Cdev_writeBits
    _MPU6050_setFullScaleAccelRange->_I2Cdev_writeBits
    _MPU6050_setClockSource->_I2Cdev_writeBits
    _I2Cdev_writeBits->_I2Cdev_readByte
    _I2Cdev_writeByte->_I2Cdev_writeBytes
    _I2Cdev_writeBytes->_WriteI2C
    _initI2C_USART->_OpenUSART
    _flashLED->_delayzz
    _MPU6050_getMotion6->_I2Cdev_readBytes
    _MPU6050_getFullScaleAccelRange->_I2Cdev_readBits
    _I2Cdev_readBits->_I2Cdev_readByte
    _I2Cdev_readByte->_I2Cdev_readBytes
    _I2Cdev_readBytes->___wmul
    _WriteI2C->_IdleI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   89102
                                             35 COMRAM    16    16      0
                       _CAN_Transmit
     _MPU6050_getFullScaleAccelRange
                 _MPU6050_getMotion6
                   _convertFrom16To8
                           _flashLED
                      _initI2C_USART
                        _initMPU6050
                       _setupCANTxRx
 ---------------------------------------------------------------------------------
 (1) _setupCANTxRx                                         0     0      0      66
                           _CAN_Init
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (2) _CAN_Init                                             0     0      0      44
                        _CAN_SetMode
 ---------------------------------------------------------------------------------
 (3) _CAN_SetMode                                          1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initMPU6050                                          0     0      0   69487
                       _Delay10KTCYx
                            _MPU6050
                 _MPU6050_initialize
 ---------------------------------------------------------------------------------
 (2) _MPU6050_initialize                                   0     0      0   69443
             _MPU6050_setClockSource
     _MPU6050_setFullScaleAccelRange
      _MPU6050_setFullScaleGyroRange
            _MPU6050_setSleepEnabled
 ---------------------------------------------------------------------------------
 (3) _MPU6050_setSleepEnabled                              1     1      0   22136
                                             34 COMRAM     1     1      0
                    _I2Cdev_writeBit
 ---------------------------------------------------------------------------------
 (4) _I2Cdev_writeBit                                     12     9      3   22114
                                             22 COMRAM    12     9      3
                    _I2Cdev_readByte
                   _I2Cdev_writeByte
 ---------------------------------------------------------------------------------
 (3) _MPU6050_setFullScaleGyroRange                        1     1      0   15769
                                             32 COMRAM     1     1      0
                   _I2Cdev_writeBits
 ---------------------------------------------------------------------------------
 (3) _MPU6050_setFullScaleAccelRange                       1     1      0   15769
                                             32 COMRAM     1     1      0
                   _I2Cdev_writeBits
 ---------------------------------------------------------------------------------
 (3) _MPU6050_setClockSource                               1     1      0   15769
                                             32 COMRAM     1     1      0
                   _I2Cdev_writeBits
 ---------------------------------------------------------------------------------
 (4) _I2Cdev_writeBits                                    10     6      4   15747
                                             22 COMRAM    10     6      4
                    _I2Cdev_readByte
                   _I2Cdev_writeByte
 ---------------------------------------------------------------------------------
 (5) _I2Cdev_writeByte                                     3     1      2    3668
                                              9 COMRAM     3     1      2
                  _I2Cdev_writeBytes
 ---------------------------------------------------------------------------------
 (6) _I2Cdev_writeBytes                                    6     2      4     951
                                              3 COMRAM     6     2      4
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _MPU6050                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initI2C_USART                                        0     0      0     348
                       _Delay10KTCYx
                            _OpenI2C
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     229
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1      97
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _flashLED                                             2     2      0     116
                                              4 COMRAM     2     2      0
                            _delayzz
 ---------------------------------------------------------------------------------
 (2) _delayzz                                              4     4      0      92
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _convertFrom16To8                                     5     3      2     362
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _MPU6050_getMotion6                                  14     2     12    6106
                                             18 COMRAM    14     2     12
                   _I2Cdev_readBytes
 ---------------------------------------------------------------------------------
 (1) _MPU6050_getFullScaleAccelRange                       0     0      0   12018
                    _I2Cdev_readBits
 ---------------------------------------------------------------------------------
 (2) _I2Cdev_readBits                                     12     7      5   12018
                                             22 COMRAM    12     7      5
                    _I2Cdev_readByte
 ---------------------------------------------------------------------------------
 (5) _I2Cdev_readByte                                      4     1      3    8160
                                             18 COMRAM     4     1      3
                   _I2Cdev_readBytes
 ---------------------------------------------------------------------------------
 (6) _I2Cdev_readBytes                                    12     8      4    5338
                                              6 COMRAM    12     8      4
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     641
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _WriteI2C                                             2     2      0      22
                                              1 COMRAM     2     2      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (8) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ReadI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Transmit                                         5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Transmit
   _MPU6050_getFullScaleAccelRange
     _I2Cdev_readBits
       _I2Cdev_readByte
         _I2Cdev_readBytes
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
           ___wmul
   _MPU6050_getMotion6
     _I2Cdev_readBytes
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
       ___wmul
   _convertFrom16To8
   _flashLED
     _delayzz
   _initI2C_USART
     _Delay10KTCYx
     _OpenI2C
     _OpenUSART
   _initMPU6050
     _Delay10KTCYx
     _MPU6050
     _MPU6050_initialize
       _MPU6050_setClockSource
         _I2Cdev_writeBits
           _I2Cdev_readByte
             _I2Cdev_readBytes
               _IdleI2C
               _ReadI2C
               _WriteI2C
                 _IdleI2C
               ___wmul
           _I2Cdev_writeByte
             _I2Cdev_writeBytes
               _IdleI2C
               _WriteI2C
                 _IdleI2C
       _MPU6050_setFullScaleAccelRange
         _I2Cdev_writeBits
           _I2Cdev_readByte
             _I2Cdev_readBytes
               _IdleI2C
               _ReadI2C
               _WriteI2C
                 _IdleI2C
               ___wmul
           _I2Cdev_writeByte
             _I2Cdev_writeBytes
               _IdleI2C
               _WriteI2C
                 _IdleI2C
       _MPU6050_setFullScaleGyroRange
         _I2Cdev_writeBits
           _I2Cdev_readByte
             _I2Cdev_readBytes
               _IdleI2C
               _ReadI2C
               _WriteI2C
                 _IdleI2C
               ___wmul
           _I2Cdev_writeByte
             _I2Cdev_writeBytes
               _IdleI2C
               _WriteI2C
                 _IdleI2C
       _MPU6050_setSleepEnabled
         _I2Cdev_writeBit
           _I2Cdev_readByte
             _I2Cdev_readBytes
               _IdleI2C
               _ReadI2C
               _WriteI2C
                 _IdleI2C
               ___wmul
           _I2Cdev_writeByte
             _I2Cdev_writeBytes
               _IdleI2C
               _WriteI2C
                 _IdleI2C
   _setupCANTxRx
     _CAN_Init
       _CAN_SetMode
     _Delay10KTCYx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      7C       4       77.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     33      5E       1       98.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DA       9        0.0%
DATA                 0      0      DA      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Dec 11 17:33:43 2015

                                            __size_of_MPU6050_setClockSource 001E  
                                                                _SSPSTATbits 000FC7  
                                                                         _D1 0070  
                                                                         _D2 0074  
                                                                         _T2 0088  
                                                                         _MB 00C3  
                                                                         _MC 003E  
                                                                         _MD 0040  
                                                                         _c5 0094  
                                                                         _c6 0097  
                                                                         _p0 00A3  
                                                                         _p1 00A6  
                                                                         _p2 00A9  
                                                                         _dT 008C  
                                                                         _x0 00AF  
                                                                         _x1 00B2  
                                                                         _y0 00B8  
                                                                         _x2 00B5  
                                                                         _y1 00BB  
                                                                         _y2 00BE  
                                                                __CFG_BOR$ON 000000  
                                                                         _mc 009D  
                                                                         _md 00A0  
                                                        ___wmul@multiplicand 0003  
                                                               __CFG_CP0$OFF 000000  
                                                               __CFG_CP1$OFF 000000  
                                                               __CFG_CP2$OFF 000000  
                                                               __CFG_CP3$OFF 000000  
                                                                __CFG_OSC$HS 000000  
                                                                        _AC1 0034  
                                                                        _AC2 0036  
                                                                        _AC3 0038  
                                                                        _AC4 003A  
                                                                        _AC5 003C  
                                                                        l200 0CE4  
                                                                        _AC6 00C1  
                                                                        l125 0870  
                                                                        l142 0946  
                                                                        l134 0908  
                                                                        l128 0890  
                                                                        l138 0916  
                                                                        l239 09D6  
                                                                        l194 0C9A  
                                                                        l187 0ADE  
                                                               __CFG_CPB$OFF 000000  
                                                                        _VB1 0044  
                                                                        _VB2 0046  
                                                               __CFG_CPD$OFF 000000  
                                                      I2Cdev_readBits@length 0019  
                                                               __CFG_BORV$25 000000  
                                                                        wreg 000FE8  
                                                       ??_MPU6050_initialize 0024  
                                                       __end_of_CAN_Transmit 0A62  
                                                           _I2Cdev_writeBits 0950  
                                                              _initI2C_USART 0D30  
                                                           _I2Cdev_writeByte 0EE0  
                                                               __CFG_LVP$OFF 000000  
                                                     I2Cdev_readBits@devAddr 0020  
                                                               ?_initMPU6050 0001  
                                                            __end_of_MPU6050 0FB4  
                                                               __CFG_WDT$OFF 000000  
                                                                       l1410 0C2C  
                                                                       l1413 0BF6  
                                                                       l1422 0C22  
                                                                       l1350 0C6C  
                                                                       l1351 0C76  
                                                                       l1248 0D2C  
                                                                       l1352 0C78  
                                                                       l1345 0C54  
                                                                       l4001 0CD6  
                                                                       l1354 0C8C  
                                                                       l1347 0C5E  
                                                                       l1284 0A00  
                                                                       l1348 0C60  
                                                                       l1349 0C6A  
                                                                       l4025 0B20  
                                                                       l4027 0B4A  
                                                                       l1388 0D7C  
                                                                       l1389 0D7E  
                                                                       l4053 0F5A  
                                                                       l4225 0C56  
                                                                       l4217 0C48  
                                                                       l4163 0D26  
                                                                       l1659 0F20  
                                                                       l4513 0D92  
                                                                       l3917 0C02  
                                                                       l6079 0650  
                                                                       l3893 0F96  
                                                                       l3957 08A6  
                                                                       l3975 091A  
                                                                       l3969 090E  
                                                                       l3977 091C  
                                                                       l3995 0CBA  
                                                                       _OFF2 0078  
                                                                       u2155 09EE  
                                                                       u1515 08FC  
                                                                       u1604 0B0C  
                                                                       u1605 0B08  
                                                                       u1614 0B34  
                                                                       u1615 0B2E  
                                                                       u1650 09B6  
                                                                       u1634 0988  
                                                                       u1635 0984  
                                                                       u1644 0998  
                                                                       u1645 0994  
                                                                       u1655 09B2  
                                                                       u1780 0ACE  
                                                                       u1764 0A9C  
                                                                       u1765 0A98  
                                                                       u1774 0AAC  
                                                                       u1775 0AA8  
                                                                       u1785 0ACA  
                                                                       u3617 0762  
                                                                       u3627 0F26  
                                                                       _TEMP 005B  
                                                               __CFG_PWRT$ON 000000  
                                                     I2Cdev_readBits@regAddr 0017  
                                                                       _mbar 009A  
                                                                       _main 063C  
                                                                       fsr2h 000FDA  
                                                                       indf2 000FDF  
                                                                       fsr2l 000FD9  
                                                                       prodh 000FF4  
                                                                       prodl 000FF3  
                                                                       start 0002  
                                                            __end_of_IdleI2C 0FA8  
                                                           __end_of_CAN_Init 0BC8  
                                                            __end_of_ReadI2C 0D88  
                                                            __end_of_OpenI2C 0E46  
                                                          ?_convertFrom16To8 0001  
                                                          _I2Cdev_writeBytes 0C90  
                                                              __CFG_OSCS$OFF 000000  
                                                             MPU6050@address 0001  
                                                         ??_convertFrom16To8 0003  
                                                         ?_I2Cdev_writeBytes 0004  
                                                    I2Cdev_readBits@bitStart 0018  
                                                                      ?_main 0001  
                                                   __size_of_I2Cdev_readBits 0080  
                                                   __size_of_I2Cdev_readByte 001E  
                                                                      _RCSTA 000FAB  
                                                                      _SPBRG 000FAF  
                                                                      _TRISB 000F93  
                                                    I2Cdev_writeByte@devAddr 000C  
                                                           I2Cdev_readBits@b 0022  
                                                      __size_of_Delay10KTCYx 001C  
                                                                      _TXSTA 000FAC  
                                                              __CFG_WRT0$OFF 000000  
                                                              __CFG_WRT1$OFF 000000  
                                                              __CFG_WRT2$OFF 000000  
                                                            __end_of_delayzz 0D30  
                                                              __CFG_WRT3$OFF 000000  
                                                             __CFG_EBTR0$OFF 000000  
                                                                      _Sens2 0080  
                                                             __CFG_EBTR1$OFF 000000  
                                                        ??_I2Cdev_writeBytes 0008  
                                                             __CFG_EBTR2$OFF 000000  
                                                             __CFG_EBTR3$OFF 000000  
                                                             ?_initI2C_USART 0001  
                                                              __CFG_STVR$OFF 000000  
                                                              __CFG_WRTB$OFF 000000  
                                                              __CFG_WRTC$OFF 000000  
                                         MPU6050_setFullScaleGyroRange@range 0021  
                                                              __CFG_WRTD$OFF 000000  
                                                       __size_of_CAN_SetMode 0018  
                                                             __CFG_EBTRB$OFF 000000  
                                                    I2Cdev_writeByte@regAddr 000A  
                                                                      _errno 00C5  
                                               MPU6050_setClockSource@source 0021  
                                                     _MPU6050_setClockSource 0EC2  
                                                                      _tempC 00AC  
                                                                      status 000FD8  
                                                   __size_of_I2Cdev_writeBit 007E  
                                                  __end_of_I2Cdev_writeBytes 0CEE  
                                                            __initialization 0E02  
                                                               __end_of_main 076E  
                                                               _Delay10KTCYx 0F1C  
                                                                     ??_main 0024  
                                                              __activetblptr 000002  
                                            ??_MPU6050_setFullScaleGyroRange 0021  
                                                                  ??_MPU6050 0001  
                                                      I2Cdev_readBytes@count 0012  
                                                    I2Cdev_writeBytes@length 0005  
                                                                     _ADCON0 000FC2  
                                                                     _ADCON1 000FC1  
                                                                     _CANCON 000F6F  
                                                           __end_of_WriteI2C 0C30  
                                                                OpenI2C@slew 0001  
                                                   ?_MPU6050_setSleepEnabled 0001  
                                                                  ??_IdleI2C 0001  
                                                                     _RXB0D0 000F66  
                                                                     _RXB0D1 000F67  
                                                                     _RXB0D2 000F68  
                                                                     _RXB0D3 000F69  
                                                                     _RXB0D4 000F6A  
                                                                     _RXB0D5 000F6B  
                                                                     _RXB0D6 000F6C  
                                                                     _RXB0D7 000F6D  
                                                             __CFG_WDTPS$128 000000  
                                                                     _TXB0D0 000F46  
                                                                     _TXB0D1 000F47  
                                                                     _TXB0D2 000F48  
                                                                     _TXB0D3 000F49  
                                                                     _TXB0D4 000F4A  
                                                                     _TXB0D5 000F4B  
                                                                     _TXB0D6 000F4C  
                                                                     _TXB0D7 000F4D  
                                                                     _SSPADD 000FC8  
                                                                     _SSPBUF 000FC9  
                                                                  ??_ReadI2C 0001  
                                                                  ??_OpenI2C 0002  
                                                                     _Offset 007C  
                                                           __end_of_flashLED 0DB2  
                                                         __size_of_OpenUSART 0060  
                                                   __end_of_I2Cdev_readBytes 0950  
                                                                     ___wmul 0DB2  
                                                                     __error 004B  
                                                                 _Resolution 0042  
                                                                     clear_0 0E08  
                                                                     clear_1 0E14  
                                                                  ??_delayzz 0001  
                                                                     main@ax 002C  
                                                                     main@ay 0030  
                                                                     main@az 002E  
                                                                     main@gx 0025  
                                                                     main@gy 0027  
                                                                     main@gz 0029  
                                                      __size_of_CAN_Transmit 0088  
                                                            ??_initI2C_USART 0004  
                                                               __mediumconst 0000  
                                                           I2Cdev_writeBit@b 0022  
                                                                     tblptru 000FF8  
                                                                  ?_CAN_Init 0001  
                                                          ??_I2Cdev_readBits 001C  
                                                          ??_I2Cdev_readByte 0016  
                                                           __end_ofexp@coeff 061F  
                                                           __end_oflog@coeff 063A  
                                                       __size_of_initMPU6050 0016  
                                                                 __accesstop 0060  
                                                    __end_of__initialization 0E1A  
                                                     I2Cdev_readByte@devAddr 0016  
                                             MPU6050_setSleepEnabled@enabled 0023  
                                                         CAN_SetMode@canMode 0001  
                                                     I2Cdev_readByte@regAddr 0013  
                                                 __size_of_I2Cdev_writeBytes 005E  
                                                             __pcstackCOMRAM 0001  
                                                   __end_of_I2Cdev_writeBits 09DA  
                                                               _CAN_Transmit 09DA  
                                                   __end_of_I2Cdev_writeByte 0EFE  
                                                          ??_I2Cdev_writeBit 001A  
                                                        _I2Cdev_writeBit$423 001F  
                                            __end_of_MPU6050_setSleepEnabled 0F52  
                                                                 ??_CAN_Init 0002  
                                                __size_of_MPU6050_getMotion6 00F4  
                                                          __end_of_OpenUSART 0C90  
                                      __end_of_MPU6050_setFullScaleGyroRange 0EA4  
                                     __size_of_MPU6050_setFullScaleGyroRange 001E  
                                              _MPU6050_setFullScaleGyroRange 0E86  
                                                                 __pbssBANK0 0060  
                                                   I2Cdev_writeBytes@devAddr 0008  
                                                     I2Cdev_readBytes@length 0008  
                                                   I2Cdev_writeBytes@regAddr 0004  
                                                                    ?___wmul 0001  
                                                  convertFrom16To8@arrayData 00DA  
                                                                    _CANSTAT 000F6E  
                                                                  ?_WriteI2C 0001  
                                                                    _BRGCON1 000F70  
                                                                    _BRGCON2 000F71  
                                                                    _BRGCON3 000F72  
                                                                    _MPU6050 0FA8  
                                                    ?_MPU6050_setClockSource 0001  
                                                                    _RXB0CON 000F60  
                                                                    _RXB1CON 000F50  
                                                __size_of_MPU6050_initialize 001E  
                                                                    _TXB0DLC 000F45  
                                                                    _TXB0CON 000F40  
                                                                  ?_flashLED 0001  
                                                  __size_of_convertFrom16To8 0026  
                                                                    _SSPCON1 000FC6  
                                                                    _SSPCON2 000FC5  
                                                                    _SSPSTAT 000FC7  
                                                                    _IdleI2C 0F94  
                                                                  _I2C_Bytes 00D7  
                                                                    _MidByte 004A  
                                                                    _ReadI2C 0D5C  
                                                                    _OpenI2C 0E24  
                                                                    _LowByte 0049  
                                                                    __Hparam 0000  
                                                                    __Lparam 0000  
                                                            __size_of___wmul 002A  
                                                               __psmallconst 0600  
                                                                    __pcinit 0E02  
                                                                _Sensitivity 0084  
                                                                 ??_WriteI2C 0002  
                                                                    __ramtop 0600  
                                                                    _delayzz 0CEE  
                                                                    __ptext0 063C  
                                                                    __ptext1 0F80  
                                                                    __ptext2 0B60  
                                                                    __ptext3 0F52  
                                                                    __ptext4 0F6A  
                                                                    __ptext5 0E68  
                                                                    __ptext6 0F38  
                                                                    __ptext7 0AE2  
                                                                    __ptext8 0E86  
                                                                    __ptext9 0EA4  
                                     __end_of_MPU6050_getFullScaleAccelRange 0E68  
                                    __size_of_MPU6050_getFullScaleAccelRange 0022  
                                             _MPU6050_getFullScaleAccelRange 0E46  
                                                                    _mbarInt 0090  
                                                                    _mpu6050 004C  
                                             __end_of_MPU6050_setClockSource 0EE0  
                                                              ??_CAN_SetMode 0001  
                                                              ?_setupCANTxRx 0001  
                                     __end_of_MPU6050_setFullScaleAccelRange 0EC2  
                                    __size_of_MPU6050_setFullScaleAccelRange 001E  
                                             _MPU6050_setFullScaleAccelRange 0EA4  
                                                      I2Cdev_writeBit@bitNum 0018  
                                                                 ??_flashLED 0005  
                                        MPU6050_setFullScaleAccelRange@range 0021  
                                                       end_of_initialization 0E1A  
                                                              __Lmediumconst 0000  
                                             ?_MPU6050_setFullScaleGyroRange 0001  
                                                          I2Cdev_writeBits@b 0020  
                                                                  _RCSTAbits 000FAB  
                                                                    postdec2 000FDD  
                                                                    postinc0 000FEE  
                                                                    postinc2 000FDE  
                                                          ?_I2Cdev_readBytes 0007  
                                           __size_of_MPU6050_setSleepEnabled 001A  
                                                         ??_I2Cdev_readBytes 000B  
                                                            _I2Cdev_readBits 0A62  
                                                            _I2Cdev_readByte 0EFE  
                                                             ??_setupCANTxRx 0003  
                                                                  _TRISBbits 000F93  
                                                                  _TRISCbits 000F94  
                                                        __end_of_CAN_SetMode 0F6A  
                                                          __size_of_CAN_Init 0068  
                                                       I2Cdev_readBits@count 001F  
                                                            _I2Cdev_writeBit 0AE2  
                                                                  _TXSTAbits 000FAC  
                                                          ?_I2Cdev_writeBits 0017  
                                                      I2Cdev_writeBytes@data 0006  
                                                          ?_I2Cdev_writeByte 000A  
                                                             __end_of___wmul 0DDC  
                                                         ??_I2Cdev_writeBits 001B  
                                                         ??_I2Cdev_writeByte 000C  
                                                        start_initialization 0E02  
                                                      __end_of_initI2C_USART 0D5C  
                                                           _convertFrom16To8 0DDC  
                                                              ??_initMPU6050 0024  
                                                           WriteI2C@data_out 0003  
                                                       I2Cdev_readBytes@data 0009  
                                                                  _OpenUSART 0C30  
                                                    __end_of_I2Cdev_readBits 0AE2  
                                                    __end_of_I2Cdev_readByte 0F1C  
                                                                   ??___wmul 0005  
                                                          __size_of_WriteI2C 0068  
                                                 __end_of_MPU6050_getMotion6 0862  
                                                                _CAN_SetMode 0F52  
                                                                   ?_MPU6050 0001  
                                                                __pbssCOMRAM 0034  
                                                    __end_of_I2Cdev_writeBit 0B60  
                                                    I2Cdev_readBytes@devAddr 0011  
                                                          __size_of_flashLED 002A  
                                                                   ?_IdleI2C 0001  
                                                                 ?_OpenUSART 0001  
                                                    I2Cdev_readBytes@regAddr 0007  
                                                                   ?_ReadI2C 0001  
                                                        __end_of_initMPU6050 0F80  
                                                                   ?_OpenI2C 0001  
                                                       __end_of_setupCANTxRx 0F94  
                                                    _MPU6050_setSleepEnabled 0F38  
                                                              ?_Delay10KTCYx 0001  
                                                          CAN_Transmit@canId 0004  
                                                    convertFrom16To8@dataAll 0001  
                                                                   ?_delayzz 0001  
                                                                __smallconst 0600  
                                                 __end_of_MPU6050_initialize 0E86  
                                                                   _CAN_Init 0B60  
                                           ??_MPU6050_getFullScaleAccelRange 0023  
                                            ?_MPU6050_getFullScaleAccelRange 0001  
                                                               _receivedData 0060  
                                                             ___wmul@product 0005  
                                                                   _LATBbits 000F8A  
                                                                   _PIE1bits 000F9D  
                                           ??_MPU6050_setFullScaleAccelRange 0021  
                                            ?_MPU6050_setFullScaleAccelRange 0001  
                                                                   _PIR1bits 000F9E  
                                                       I2Cdev_writeBits@data 001A  
                                                           ?_I2Cdev_readBits 0017  
                                                           ?_I2Cdev_readByte 0013  
                                                       I2Cdev_writeBits@mask 001F  
                                                                   _RXB0SIDH 000F61  
                                                                   _RXB0SIDL 000F62  
                                                             ??_Delay10KTCYx 0001  
                                                                   _RXF0SIDL 000F01  
                                                                   _RXF1SIDL 000F05  
                                                                   _RXF2SIDL 000F09  
                                                                   _RXF3SIDL 000F0D  
                                                                   _RXF4SIDL 000F11  
                                                                   _RXF5SIDL 000F15  
                                                                   _TXB0SIDH 000F41  
                                                                   _TXB0SIDL 000F42  
                                                                   _RXM0SIDH 000F18  
                                                                   _RXM0SIDL 000F19  
                                                                   _RXM1SIDH 000F1C  
                                                                   _RXM1SIDL 000F1D  
                                                                 _ADCON0bits 000FC2  
                                                          ___wmul@multiplier 0001  
                                                        I2Cdev_readBits@data 001A  
                                                        I2Cdev_readBits@mask 0021  
                                                       I2Cdev_writeByte@data 000B  
                                                           Delay10KTCYx@unit 0002  
                                                           __size_of_MPU6050 000C  
                                                       main@a_unsigned_array 0032  
                                                  __size_of_I2Cdev_readBytes 00EE  
                                                           ?_I2Cdev_writeBit 0017  
                                                   I2Cdev_writeBits@bitStart 0018  
                                                                   _HighByte 0048  
                                                                _initMPU6050 0F6A  
                                                        I2Cdev_readByte@data 0014  
                                                           OpenI2C@sync_mode 0002  
                                                                ??_OpenUSART 0003  
                                                           __size_of_IdleI2C 0014  
                                                            OpenUSART@config 0003  
                                                  ??_MPU6050_setSleepEnabled 0023  
                                                           __size_of_ReadI2C 002C  
                                                                   __Hrparam 0000  
                                                           __size_of_OpenI2C 0022  
                                                                   __Lrparam 0000  
                                                              ?_CAN_Transmit 0001  
                                                   __end_of_convertFrom16To8 0E02  
                                                                   _WriteI2C 0BC8  
                                                           __size_of_delayzz 0042  
                                                                   __ptext10 0EC2  
                                                                   __ptext11 0950  
                                                                   __ptext20 0CEE  
                                                                   __ptext12 0EE0  
                                                                   __ptext21 0DDC  
                                                                   __ptext13 0C90  
                                                                   __ptext30 0D5C  
                                                                   __ptext22 076E  
                                                                   __ptext14 0FA8  
                                                                   __ptext31 09DA  
                                                                   __ptext23 0E46  
                                                                   __ptext15 0D30  
                                                                   __ptext24 0A62  
                                                                   __ptext16 0C30  
                                                                   __ptext25 0EFE  
                                                                   __ptext17 0E24  
                                                                   __ptext26 0862  
                                                                   __ptext18 0F1C  
                                                                   __ptext27 0DB2  
                                                                   __ptext19 0D88  
                                                                   __ptext28 0BC8  
                                                                   __ptext29 0F94  
                                                  __size_of_I2Cdev_writeBits 008A  
                                                                   _flashLED 0D88  
                                                  __size_of_I2Cdev_writeByte 001E  
                                                      __size_of_setupCANTxRx 0014  
                                                              __size_of_main 0132  
                                                        I2Cdev_writeBit@data 0019  
                                                                   _sendData 0068  
                                                                   delayzz@i 0001  
                                                                   delayzz@j 0003  
                                                              flashLED@count 0005  
                                                             ??_CAN_Transmit 0001  
                                                     I2Cdev_writeBit@devAddr 0021  
                                                   ??_MPU6050_setClockSource 0021  
                                                    I2Cdev_writeBits@devAddr 001E  
                                                     I2Cdev_writeBit@regAddr 0017  
                                                                   exp@coeff 0601  
                                                                   log@coeff 061F  
                                                    I2Cdev_writeBits@regAddr 0017  
                                                               ?_CAN_SetMode 0001  
                                                                 _INTCONbits 000FF2  
                                                             OpenUSART@spbrg 0001  
                                                               _sensorCoeffs 00C7  
                                                               _setupCANTxRx 0F80  
                                                       __end_of_Delay10KTCYx 0F38  
                                                         _MPU6050_getMotion6 076E  
                                                       MPU6050_getMotion6@ax 0013  
                                                       MPU6050_getMotion6@ay 0015  
                                                       MPU6050_getMotion6@az 0017  
                                                       MPU6050_getMotion6@gx 0019  
                                                       MPU6050_getMotion6@gy 001B  
                                                       MPU6050_getMotion6@gz 001D  
                                                        ?_MPU6050_getMotion6 0013  
                                                     __size_of_initI2C_USART 002C  
                                                         I2Cdev_writeBytes@i 0009  
                                                     I2Cdev_writeBits@length 0019  
                                                       ??_MPU6050_getMotion6 001F  
                                                                _SSPCON1bits 000FC6  
                                                           _I2Cdev_readBytes 0862  
                                                                _SSPCON2bits 000FC5  
                                                                main@AFS_SEL 002B  
                                                         _MPU6050_initialize 0E68  
                                                        ?_MPU6050_initialize 0001  
