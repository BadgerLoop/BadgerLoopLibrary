
# 1 "main.c"

# 13 "/Applications/microchip/xc8/v1.32/include/stdint.h"
typedef signed char int8_t;

# 20
typedef signed int int16_t;

# 28
typedef signed short long int int24_t;

# 36
typedef signed long int int32_t;

# 43
typedef unsigned char uint8_t;

# 49
typedef unsigned int uint16_t;

# 56
typedef unsigned short long int uint24_t;

# 63
typedef unsigned long int uint32_t;

# 71
typedef signed char int_least8_t;

# 78
typedef signed int int_least16_t;

# 90
typedef signed short long int int_least24_t;

# 98
typedef signed long int int_least32_t;

# 105
typedef unsigned char uint_least8_t;

# 111
typedef unsigned int uint_least16_t;

# 121
typedef unsigned short long int uint_least24_t;

# 128
typedef unsigned long int uint_least32_t;

# 137
typedef signed char int_fast8_t;

# 144
typedef signed int int_fast16_t;

# 156
typedef signed short long int int_fast24_t;

# 164
typedef signed long int int_fast32_t;

# 171
typedef unsigned char uint_fast8_t;

# 177
typedef unsigned int uint_fast16_t;

# 187
typedef unsigned short long int uint_fast24_t;

# 194
typedef unsigned long int uint_fast32_t;

# 200
typedef int32_t intmax_t;




typedef uint32_t uintmax_t;




typedef int16_t intptr_t;




typedef uint16_t uintptr_t;

# 12 "/Applications/microchip/xc8/v1.32/include/stdbool.h"
typedef unsigned char bool;

# 21 "/Applications/microchip/xc8/v1.32/include/htc.h"
extern const char __xc8_OPTIM_SPEED;

#pragma intrinsic(__builtin_software_breakpoint)
extern void __builtin_software_breakpoint(void);

# 47 "/Applications/microchip/xc8/v1.32/include/pic18f458.h"
extern volatile unsigned char RXF0SIDH @ 0xF00;

asm("RXF0SIDH equ 0F00h");


typedef union {
struct {
unsigned SID3 :1;
unsigned SID4 :1;
unsigned SID5 :1;
unsigned SID6 :1;
unsigned SID7 :1;
unsigned SID8 :1;
unsigned SID9 :1;
unsigned SID10 :1;
};
struct {
unsigned :7;
unsigned RXF0SID10 :1;
};
struct {
unsigned RXF0SID3 :1;
};
struct {
unsigned :1;
unsigned RXF0SID4 :1;
};
struct {
unsigned :2;
unsigned RXF0SID5 :1;
};
struct {
unsigned :3;
unsigned RXF0SID6 :1;
};
struct {
unsigned :4;
unsigned RXF0SID7 :1;
};
struct {
unsigned :5;
unsigned RXF0SID8 :1;
};
struct {
unsigned :6;
unsigned RXF0SID9 :1;
};
} RXF0SIDHbits_t;
extern volatile RXF0SIDHbits_t RXF0SIDHbits @ 0xF00;

# 179
extern volatile unsigned char RXF0SIDL @ 0xF01;

asm("RXF0SIDL equ 0F01h");


typedef union {
struct {
unsigned EID16 :1;
unsigned EID17 :1;
unsigned :1;
unsigned EXIDEN :1;
unsigned :1;
unsigned SID0 :1;
unsigned SID1 :1;
unsigned SID2 :1;
};
struct {
unsigned RXF0EID16 :1;
};
struct {
unsigned :1;
unsigned RXF0EID17 :1;
};
struct {
unsigned :3;
unsigned RXF0EXIDEN :1;
};
struct {
unsigned :5;
unsigned RXF0SID0 :1;
};
struct {
unsigned :6;
unsigned RXF0SID1 :1;
};
struct {
unsigned :7;
unsigned RXF0SID2 :1;
};
} RXF0SIDLbits_t;
extern volatile RXF0SIDLbits_t RXF0SIDLbits @ 0xF01;

# 283
extern volatile unsigned char RXF0EIDH @ 0xF02;

asm("RXF0EIDH equ 0F02h");


typedef union {
struct {
unsigned EID8 :1;
unsigned EID9 :1;
unsigned EID10 :1;
unsigned EID11 :1;
unsigned EID12 :1;
unsigned EID13 :1;
unsigned EID14 :1;
unsigned EID15 :1;
};
struct {
unsigned :2;
unsigned RXF0EID10 :1;
};
struct {
unsigned :3;
unsigned RXF0EID11 :1;
};
struct {
unsigned :4;
unsigned RXF0EID12 :1;
};
struct {
unsigned :5;
unsigned RXF0EID13 :1;
};
struct {
unsigned :6;
unsigned RXF0EID14 :1;
};
struct {
unsigned :7;
unsigned RXF0EID15 :1;
};
struct {
unsigned RXF0EID8 :1;
};
struct {
unsigned :1;
unsigned RXF0EID9 :1;
};
} RXF0EIDHbits_t;
extern volatile RXF0EIDHbits_t RXF0EIDHbits @ 0xF02;

# 415
extern volatile unsigned char RXF0EIDL @ 0xF03;

asm("RXF0EIDL equ 0F03h");


typedef union {
struct {
unsigned EID0 :1;
unsigned EID1 :1;
unsigned EID2 :1;
unsigned EID3 :1;
unsigned EID4 :1;
unsigned EID5 :1;
unsigned EID6 :1;
unsigned EID7 :1;
};
struct {
unsigned RXF0EID0 :1;
};
struct {
unsigned :1;
unsigned RXF0EID1 :1;
};
struct {
unsigned :2;
unsigned RXF0EID2 :1;
};
struct {
unsigned :3;
unsigned RXF0EID3 :1;
};
struct {
unsigned :4;
unsigned RXF0EID4 :1;
};
struct {
unsigned :5;
unsigned RXF0EID5 :1;
};
struct {
unsigned :6;
unsigned RXF0EID6 :1;
};
struct {
unsigned :7;
unsigned RXF0EID7 :1;
};
} RXF0EIDLbits_t;
extern volatile RXF0EIDLbits_t RXF0EIDLbits @ 0xF03;

# 547
extern volatile unsigned char RXF1SIDH @ 0xF04;

asm("RXF1SIDH equ 0F04h");


typedef union {
struct {
unsigned SID3 :1;
unsigned SID4 :1;
unsigned SID5 :1;
unsigned SID6 :1;
unsigned SID7 :1;
unsigned SID8 :1;
unsigned SID9 :1;
unsigned SID10 :1;
};
struct {
unsigned :7;
unsigned RXF1SID10 :1;
};
struct {
unsigned RXF1SID3 :1;
};
struct {
unsigned :1;
unsigned RXF1SID4 :1;
};
struct {
unsigned :2;
unsigned RXF1SID5 :1;
};
struct {
unsigned :3;
unsigned RXF1SID6 :1;
};
struct {
unsigned :4;
unsigned RXF1SID7 :1;
};
struct {
unsigned :5;
unsigned RXF1SID8 :1;
};
struct {
unsigned :6;
unsigned RXF1SID9 :1;
};
} RXF1SIDHbits_t;
extern volatile RXF1SIDHbits_t RXF1SIDHbits @ 0xF04;

# 679
extern volatile unsigned char RXF1SIDL @ 0xF05;

asm("RXF1SIDL equ 0F05h");


typedef union {
struct {
unsigned EID16 :1;
unsigned EID17 :1;
unsigned :1;
unsigned EXIDEN :1;
unsigned :1;
unsigned SID0 :1;
unsigned SID1 :1;
unsigned SID2 :1;
};
struct {
unsigned RXF1EID16 :1;
};
struct {
unsigned :1;
unsigned RXF1EID17 :1;
};
struct {
unsigned :3;
unsigned RXF1EXIDEN :1;
};
struct {
unsigned :5;
unsigned RXF1SID0 :1;
};
struct {
unsigned :6;
unsigned RXF1SID1 :1;
};
struct {
unsigned :7;
unsigned RXF1SID2 :1;
};
} RXF1SIDLbits_t;
extern volatile RXF1SIDLbits_t RXF1SIDLbits @ 0xF05;

# 783
extern volatile unsigned char RXF1EIDH @ 0xF06;

asm("RXF1EIDH equ 0F06h");


typedef union {
struct {
unsigned EID8 :1;
unsigned EID9 :1;
unsigned EID10 :1;
unsigned EID11 :1;
unsigned EID12 :1;
unsigned EID13 :1;
unsigned EID14 :1;
unsigned EID15 :1;
};
struct {
unsigned :2;
unsigned RXF1EID10 :1;
};
struct {
unsigned :3;
unsigned RXF1EID11 :1;
};
struct {
unsigned :4;
unsigned RXF1EID12 :1;
};
struct {
unsigned :5;
unsigned RXF1EID13 :1;
};
struct {
unsigned :6;
unsigned RXF1EID14 :1;
};
struct {
unsigned :7;
unsigned RXF1EID15 :1;
};
struct {
unsigned RXF1EID8 :1;
};
struct {
unsigned :1;
unsigned RXF1EID9 :1;
};
} RXF1EIDHbits_t;
extern volatile RXF1EIDHbits_t RXF1EIDHbits @ 0xF06;

# 915
extern volatile unsigned char RXF1EIDL @ 0xF07;

asm("RXF1EIDL equ 0F07h");


typedef union {
struct {
unsigned EID0 :1;
unsigned EID1 :1;
unsigned EID2 :1;
unsigned EID3 :1;
unsigned EID4 :1;
unsigned EID5 :1;
unsigned EID6 :1;
unsigned EID7 :1;
};
struct {
unsigned RXF1EID0 :1;
};
struct {
unsigned :1;
unsigned RXF1EID1 :1;
};
struct {
unsigned :2;
unsigned RXF1EID2 :1;
};
struct {
unsigned :3;
unsigned RXF1EID3 :1;
};
struct {
unsigned :4;
unsigned RXF1EID4 :1;
};
struct {
unsigned :5;
unsigned RXF1EID5 :1;
};
struct {
unsigned :6;
unsigned RXF1EID6 :1;
};
struct {
unsigned :7;
unsigned RXF1EID7 :1;
};
} RXF1EIDLbits_t;
extern volatile RXF1EIDLbits_t RXF1EIDLbits @ 0xF07;

# 1047
extern volatile unsigned char RXF2SIDH @ 0xF08;

asm("RXF2SIDH equ 0F08h");


typedef union {
struct {
unsigned SID3 :1;
unsigned SID4 :1;
unsigned SID5 :1;
unsigned SID6 :1;
unsigned SID7 :1;
unsigned SID8 :1;
unsigned SID9 :1;
unsigned SID10 :1;
};
struct {
unsigned :7;
unsigned RXF2SID10 :1;
};
struct {
unsigned RXF2SID3 :1;
};
struct {
unsigned :1;
unsigned RXF2SID4 :1;
};
struct {
unsigned :2;
unsigned RXF2SID5 :1;
};
struct {
unsigned :3;
unsigned RXF2SID6 :1;
};
struct {
unsigned :4;
unsigned RXF2SID7 :1;
};
struct {
unsigned :5;
unsigned RXF2SID8 :1;
};
struct {
unsigned :6;
unsigned RXF2SID9 :1;
};
} RXF2SIDHbits_t;
extern volatile RXF2SIDHbits_t RXF2SIDHbits @ 0xF08;

# 1179
extern volatile unsigned char RXF2SIDL @ 0xF09;

asm("RXF2SIDL equ 0F09h");


typedef union {
struct {
unsigned EID16 :1;
unsigned EID17 :1;
unsigned :1;
unsigned EXIDEN :1;
unsigned :1;
unsigned SID0 :1;
unsigned SID1 :1;
unsigned SID2 :1;
};
struct {
unsigned RXF2EID16 :1;
};
struct {
unsigned :1;
unsigned RXF2EID17 :1;
};
struct {
unsigned :3;
unsigned RXF2EXIDEN :1;
};
struct {
unsigned :5;
unsigned RXF2SID0 :1;
};
struct {
unsigned :6;
unsigned RXF2SID1 :1;
};
struct {
unsigned :7;
unsigned RXF2SID2 :1;
};
} RXF2SIDLbits_t;
extern volatile RXF2SIDLbits_t RXF2SIDLbits @ 0xF09;

# 1283
extern volatile unsigned char RXF2EIDH @ 0xF0A;

asm("RXF2EIDH equ 0F0Ah");


typedef union {
struct {
unsigned EID8 :1;
unsigned EID9 :1;
unsigned EID10 :1;
unsigned EID11 :1;
unsigned EID12 :1;
unsigned EID13 :1;
unsigned EID14 :1;
unsigned EID15 :1;
};
struct {
unsigned :2;
unsigned RXF2EID10 :1;
};
struct {
unsigned :3;
unsigned RXF2EID11 :1;
};
struct {
unsigned :4;
unsigned RXF2EID12 :1;
};
struct {
unsigned :5;
unsigned RXF2EID13 :1;
};
struct {
unsigned :6;
unsigned RXF2EID14 :1;
};
struct {
unsigned :7;
unsigned RXF2EID15 :1;
};
struct {
unsigned RXF2EID8 :1;
};
struct {
unsigned :1;
unsigned RXF2EID9 :1;
};
} RXF2EIDHbits_t;
extern volatile RXF2EIDHbits_t RXF2EIDHbits @ 0xF0A;

# 1415
extern volatile unsigned char RXF2EIDL @ 0xF0B;

asm("RXF2EIDL equ 0F0Bh");


typedef union {
struct {
unsigned EID0 :1;
unsigned EID1 :1;
unsigned EID2 :1;
unsigned EID3 :1;
unsigned EID4 :1;
unsigned EID5 :1;
unsigned EID6 :1;
unsigned EID7 :1;
};
struct {
unsigned RXF2EID0 :1;
};
struct {
unsigned :1;
unsigned RXF2EID1 :1;
};
struct {
unsigned :2;
unsigned RXF2EID2 :1;
};
struct {
unsigned :3;
unsigned RXF2EID3 :1;
};
struct {
unsigned :4;
unsigned RXF2EID4 :1;
};
struct {
unsigned :5;
unsigned RXF2EID5 :1;
};
struct {
unsigned :6;
unsigned RXF2EID6 :1;
};
struct {
unsigned :7;
unsigned RXF2EID7 :1;
};
} RXF2EIDLbits_t;
extern volatile RXF2EIDLbits_t RXF2EIDLbits @ 0xF0B;

# 1547
extern volatile unsigned char RXF3SIDH @ 0xF0C;

asm("RXF3SIDH equ 0F0Ch");


typedef union {
struct {
unsigned SID3 :1;
unsigned SID4 :1;
unsigned SID5 :1;
unsigned SID6 :1;
unsigned SID7 :1;
unsigned SID8 :1;
unsigned SID9 :1;
unsigned SID10 :1;
};
struct {
unsigned :7;
unsigned RXF3SID10 :1;
};
struct {
unsigned RXF3SID3 :1;
};
struct {
unsigned :1;
unsigned RXF3SID4 :1;
};
struct {
unsigned :2;
unsigned RXF3SID5 :1;
};
struct {
unsigned :3;
unsigned RXF3SID6 :1;
};
struct {
unsigned :4;
unsigned RXF3SID7 :1;
};
struct {
unsigned :5;
unsigned RXF3SID8 :1;
};
struct {
unsigned :6;
unsigned RXF3SID9 :1;
};
} RXF3SIDHbits_t;
extern volatile RXF3SIDHbits_t RXF3SIDHbits @ 0xF0C;

# 1679
extern volatile unsigned char RXF3SIDL @ 0xF0D;

asm("RXF3SIDL equ 0F0Dh");


typedef union {
struct {
unsigned EID16 :1;
unsigned EID17 :1;
unsigned :1;
unsigned EXIDEN :1;
unsigned :1;
unsigned SID0 :1;
unsigned SID1 :1;
unsigned SID2 :1;
};
struct {
unsigned RXF3EID16 :1;
};
struct {
unsigned :1;
unsigned RXF3EID17 :1;
};
struct {
unsigned :3;
unsigned RXF3EXIDEN :1;
};
struct {
unsigned :5;
unsigned RXF3SID0 :1;
};
struct {
unsigned :6;
unsigned RXF3SID1 :1;
};
struct {
unsigned :7;
unsigned RXF3SID2 :1;
};
} RXF3SIDLbits_t;
extern volatile RXF3SIDLbits_t RXF3SIDLbits @ 0xF0D;

# 1783
extern volatile unsigned char RXF3EIDH @ 0xF0E;

asm("RXF3EIDH equ 0F0Eh");


typedef union {
struct {
unsigned EID8 :1;
unsigned EID9 :1;
unsigned EID10 :1;
unsigned EID11 :1;
unsigned EID12 :1;
unsigned EID13 :1;
unsigned EID14 :1;
unsigned EID15 :1;
};
struct {
unsigned :2;
unsigned RXF3EID10 :1;
};
struct {
unsigned :3;
unsigned RXF3EID11 :1;
};
struct {
unsigned :4;
unsigned RXF3EID12 :1;
};
struct {
unsigned :5;
unsigned RXF3EID13 :1;
};
struct {
unsigned :6;
unsigned RXF3EID14 :1;
};
struct {
unsigned :7;
unsigned RXF3EID15 :1;
};
struct {
unsigned RXF3EID8 :1;
};
struct {
unsigned :1;
unsigned RXF3EID9 :1;
};
} RXF3EIDHbits_t;
extern volatile RXF3EIDHbits_t RXF3EIDHbits @ 0xF0E;

# 1915
extern volatile unsigned char RXF3EIDL @ 0xF0F;

asm("RXF3EIDL equ 0F0Fh");


typedef union {
struct {
unsigned EID0 :1;
unsigned EID1 :1;
unsigned EID2 :1;
unsigned EID3 :1;
unsigned EID4 :1;
unsigned EID5 :1;
unsigned EID6 :1;
unsigned EID7 :1;
};
struct {
unsigned RXF3EID0 :1;
};
struct {
unsigned :1;
unsigned RXF3EID1 :1;
};
struct {
unsigned :2;
unsigned RXF3EID2 :1;
};
struct {
unsigned :3;
unsigned RXF3EID3 :1;
};
struct {
unsigned :4;
unsigned RXF3EID4 :1;
};
struct {
unsigned :5;
unsigned RXF3EID5 :1;
};
struct {
unsigned :6;
unsigned RXF3EID6 :1;
};
struct {
unsigned :7;
unsigned RXF3EID7 :1;
};
} RXF3EIDLbits_t;
extern volatile RXF3EIDLbits_t RXF3EIDLbits @ 0xF0F;

# 2047
extern volatile unsigned char RXF4SIDH @ 0xF10;

asm("RXF4SIDH equ 0F10h");


typedef union {
struct {
unsigned SID3 :1;
unsigned SID4 :1;
unsigned SID5 :1;
unsigned SID6 :1;
unsigned SID7 :1;
unsigned SID8 :1;
unsigned SID9 :1;
unsigned SID10 :1;
};
struct {
unsigned :7;
unsigned RXF4SID10 :1;
};
struct {
unsigned RXF4SID3 :1;
};
struct {
unsigned :1;
unsigned RXF4SID4 :1;
};
struct {
unsigned :2;
unsigned RXF4SID5 :1;
};
struct {
unsigned :3;
unsigned RXF4SID6 :1;
};
struct {
unsigned :4;
unsigned RXF4SID7 :1;
};
struct {
unsigned :5;
unsigned RXF4SID8 :1;
};
struct {
unsigned :6;
unsigned RXF4SID9 :1;
};
} RXF4SIDHbits_t;
extern volatile RXF4SIDHbits_t RXF4SIDHbits @ 0xF10;

# 2179
extern volatile unsigned char RXF4SIDL @ 0xF11;

asm("RXF4SIDL equ 0F11h");


typedef union {
struct {
unsigned EID16 :1;
unsigned EID17 :1;
unsigned :1;
unsigned EXIDEN :1;
unsigned :1;
unsigned SID0 :1;
unsigned SID1 :1;
unsigned SID2 :1;
};
struct {
unsigned RXF4EID16 :1;
};
struct {
unsigned :1;
unsigned RXF4EID17 :1;
};
struct {
unsigned :3;
unsigned RXF4EXIDEN :1;
};
struct {
unsigned :5;
unsigned RXF4SID0 :1;
};
struct {
unsigned :6;
unsigned RXF4SID1 :1;
};
struct {
unsigned :7;
unsigned RXF4SID2 :1;
};
} RXF4SIDLbits_t;
extern volatile RXF4SIDLbits_t RXF4SIDLbits @ 0xF11;

# 2283
extern volatile unsigned char RXF4EIDH @ 0xF12;

asm("RXF4EIDH equ 0F12h");


typedef union {
struct {
unsigned EID8 :1;
unsigned EID9 :1;
unsigned EID10 :1;
unsigned EID11 :1;
unsigned EID12 :1;
unsigned EID13 :1;
unsigned EID14 :1;
unsigned EID15 :1;
};
struct {
unsigned :2;
unsigned RXF4EID10 :1;
};
struct {
unsigned :3;
unsigned RXF4EID11 :1;
};
struct {
unsigned :4;
unsigned RXF4EID12 :1;
};
struct {
unsigned :5;
unsigned RXF4EID13 :1;
};
struct {
unsigned :6;
unsigned RXF4EID14 :1;
};
struct {
unsigned :7;
unsigned RXF4EID15 :1;
};
struct {
unsigned RXF4EID8 :1;
};
struct {
unsigned :1;
unsigned RXF4EID9 :1;
};
} RXF4EIDHbits_t;
extern volatile RXF4EIDHbits_t RXF4EIDHbits @ 0xF12;

# 2415
extern volatile unsigned char RXF4EIDL @ 0xF13;

asm("RXF4EIDL equ 0F13h");


typedef union {
struct {
unsigned EID0 :1;
unsigned EID1 :1;
unsigned EID2 :1;
unsigned EID3 :1;
unsigned EID4 :1;
unsigned EID5 :1;
unsigned EID6 :1;
unsigned EID7 :1;
};
struct {
unsigned RXF4EID0 :1;
};
struct {
unsigned :1;
unsigned RXF4EID1 :1;
};
struct {
unsigned :2;
unsigned RXF4EID2 :1;
};
struct {
unsigned :3;
unsigned RXF4EID3 :1;
};
struct {
unsigned :4;
unsigned RXF4EID4 :1;
};
struct {
unsigned :5;
unsigned RXF4EID5 :1;
};
struct {
unsigned :6;
unsigned RXF4EID6 :1;
};
struct {
unsigned :7;
unsigned RXF4EID7 :1;
};
} RXF4EIDLbits_t;
extern volatile RXF4EIDLbits_t RXF4EIDLbits @ 0xF13;

# 2547
extern volatile unsigned char RXF5SIDH @ 0xF14;

asm("RXF5SIDH equ 0F14h");


typedef union {
struct {
unsigned SID3 :1;
unsigned SID4 :1;
unsigned SID5 :1;
unsigned SID6 :1;
unsigned SID7 :1;
unsigned SID8 :1;
unsigned SID9 :1;
unsigned SID10 :1;
};
struct {
unsigned :7;
unsigned RXF5SID10 :1;
};
struct {
unsigned RXF5SID3 :1;
};
struct {
unsigned :1;
unsigned RXF5SID4 :1;
};
struct {
unsigned :2;
unsigned RXF5SID5 :1;
};
struct {
unsigned :3;
unsigned RXF5SID6 :1;
};
struct {
unsigned :4;
unsigned RXF5SID7 :1;
};
struct {
unsigned :5;
unsigned RXF5SID8 :1;
};
struct {
unsigned :6;
unsigned RXF5SID9 :1;
};
} RXF5SIDHbits_t;
extern volatile RXF5SIDHbits_t RXF5SIDHbits @ 0xF14;

# 2679
extern volatile unsigned char RXF5SIDL @ 0xF15;

asm("RXF5SIDL equ 0F15h");


typedef union {
struct {
unsigned EID16 :1;
unsigned EID17 :1;
unsigned :1;
unsigned EXIDEN :1;
unsigned :1;
unsigned SID0 :1;
unsigned SID1 :1;
unsigned SID2 :1;
};
struct {
unsigned RXF5EID16 :1;
};
struct {
unsigned :1;
unsigned RXF5EID17 :1;
};
struct {
unsigned :3;
unsigned RXF5EXIDEN :1;
};
struct {
unsigned :5;
unsigned RXF5SID0 :1;
};
struct {
unsigned :6;
unsigned RXF5SID1 :1;
};
struct {
unsigned :7;
unsigned RXF5SID2 :1;
};
} RXF5SIDLbits_t;
extern volatile RXF5SIDLbits_t RXF5SIDLbits @ 0xF15;

# 2783
extern volatile unsigned char RXF5EIDH @ 0xF16;

asm("RXF5EIDH equ 0F16h");


typedef union {
struct {
unsigned EID8 :1;
unsigned EID9 :1;
unsigned EID10 :1;
unsigned EID11 :1;
unsigned EID12 :1;
unsigned EID13 :1;
unsigned EID14 :1;
unsigned EID15 :1;
};
struct {
unsigned :2;
unsigned RXF5EID10 :1;
};
struct {
unsigned :3;
unsigned RXF5EID11 :1;
};
struct {
unsigned :4;
unsigned RXF5EID12 :1;
};
struct {
unsigned :5;
unsigned RXF5EID13 :1;
};
struct {
unsigned :6;
unsigned RXF5EID14 :1;
};
struct {
unsigned :7;
unsigned RXF5EID15 :1;
};
struct {
unsigned RXF5EID8 :1;
};
struct {
unsigned :1;
unsigned RXF5EID9 :1;
};
} RXF5EIDHbits_t;
extern volatile RXF5EIDHbits_t RXF5EIDHbits @ 0xF16;

# 2915
extern volatile unsigned char RXF5EIDL @ 0xF17;

asm("RXF5EIDL equ 0F17h");


typedef union {
struct {
unsigned EID0 :1;
unsigned EID1 :1;
unsigned EID2 :1;
unsigned EID3 :1;
unsigned EID4 :1;
unsigned EID5 :1;
unsigned EID6 :1;
unsigned EID7 :1;
};
struct {
unsigned RXF5EID0 :1;
};
struct {
unsigned :1;
unsigned RXF5EID1 :1;
};
struct {
unsigned :2;
unsigned RXF5EID2 :1;
};
struct {
unsigned :3;
unsigned RXF5EID3 :1;
};
struct {
unsigned :4;
unsigned RXF5EID4 :1;
};
struct {
unsigned :5;
unsigned RXF5EID5 :1;
};
struct {
unsigned :6;
unsigned RXF5EID6 :1;
};
struct {
unsigned :7;
unsigned RXF5EID7 :1;
};
} RXF5EIDLbits_t;
extern volatile RXF5EIDLbits_t RXF5EIDLbits @ 0xF17;

# 3047
extern volatile unsigned char RXM0SIDH @ 0xF18;

asm("RXM0SIDH equ 0F18h");


typedef union {
struct {
unsigned SID3 :1;
unsigned SID4 :1;
unsigned SID5 :1;
unsigned SID6 :1;
unsigned SID7 :1;
unsigned SID8 :1;
unsigned SID9 :1;
unsigned SID10 :1;
};
struct {
unsigned :7;
unsigned RXM0SID10 :1;
};
struct {
unsigned RXM0SID3 :1;
};
struct {
unsigned :1;
unsigned RXM0SID4 :1;
};
struct {
unsigned :2;
unsigned RXM0SID5 :1;
};
struct {
unsigned :3;
unsigned RXM0SID6 :1;
};
struct {
unsigned :4;
unsigned RXM0SID7 :1;
};
struct {
unsigned :5;
unsigned RXM0SID8 :1;
};
struct {
unsigned :6;
unsigned RXM0SID9 :1;
};
} RXM0SIDHbits_t;
extern volatile RXM0SIDHbits_t RXM0SIDHbits @ 0xF18;

# 3179
extern volatile unsigned char RXM0SIDL @ 0xF19;

asm("RXM0SIDL equ 0F19h");


typedef union {
struct {
unsigned EID16 :1;
unsigned EID17 :1;
unsigned :3;
unsigned SID0 :1;
unsigned SID1 :1;
unsigned SID2 :1;
};
struct {
unsigned RXM0EID16 :1;
};
struct {
unsigned :1;
unsigned RXM0EID17 :1;
};
struct {
unsigned :5;
unsigned RXM0SID0 :1;
};
struct {
unsigned :6;
unsigned RXM0SID1 :1;
};
struct {
unsigned :7;
unsigned RXM0SID2 :1;
};
} RXM0SIDLbits_t;
extern volatile RXM0SIDLbits_t RXM0SIDLbits @ 0xF19;

# 3267
extern volatile unsigned char RXM0EIDH @ 0xF1A;

asm("RXM0EIDH equ 0F1Ah");


typedef union {
struct {
unsigned EID8 :1;
unsigned EID9 :1;
unsigned EID10 :1;
unsigned EID11 :1;
unsigned EID12 :1;
unsigned EID13 :1;
unsigned EID14 :1;
unsigned EID15 :1;
};
struct {
unsigned :2;
unsigned RXM0EID10 :1;
};
struct {
unsigned :3;
unsigned RXM0EID11 :1;
};
struct {
unsigned :4;
unsigned RXM0EID12 :1;
};
struct {
unsigned :5;
unsigned RXM0EID13 :1;
};
struct {
unsigned :6;
unsigned RXM0EID14 :1;
};
struct {
unsigned :7;
unsigned RXM0EID15 :1;
};
struct {
unsigned RXM0EID8 :1;
};
struct {
unsigned :1;
unsigned RXM0EID9 :1;
};
} RXM0EIDHbits_t;
extern volatile RXM0EIDHbits_t RXM0EIDHbits @ 0xF1A;

# 3399
extern volatile unsigned char RXM0EIDL @ 0xF1B;

asm("RXM0EIDL equ 0F1Bh");


typedef union {
struct {
unsigned EID0 :1;
unsigned EID1 :1;
unsigned EID2 :1;
unsigned EID3 :1;
unsigned EID4 :1;
unsigned EID5 :1;
unsigned EID6 :1;
unsigned EID7 :1;
};
struct {
unsigned RXM0EID0 :1;
};
struct {
unsigned :1;
unsigned RXM0EID1 :1;
};
struct {
unsigned :2;
unsigned RXM0EID2 :1;
};
struct {
unsigned :3;
unsigned RXM0EID3 :1;
};
struct {
unsigned :4;
unsigned RXM0EID4 :1;
};
struct {
unsigned :5;
unsigned RXM0EID5 :1;
};
struct {
unsigned :6;
unsigned RXM0EID6 :1;
};
struct {
unsigned :7;
unsigned RXM0EID7 :1;
};
} RXM0EIDLbits_t;
extern volatile RXM0EIDLbits_t RXM0EIDLbits @ 0xF1B;

# 3531
extern volatile unsigned char RXM1SIDH @ 0xF1C;

asm("RXM1SIDH equ 0F1Ch");


typedef union {
struct {
unsigned SID3 :1;
unsigned SID4 :1;
unsigned SID5 :1;
unsigned SID6 :1;
unsigned SID7 :1;
unsigned SID8 :1;
unsigned SID9 :1;
unsigned SID10 :1;
};
struct {
unsigned :7;
unsigned RXM1SID10 :1;
};
struct {
unsigned RXM1SID3 :1;
};
struct {
unsigned :1;
unsigned RXM1SID4 :1;
};
struct {
unsigned :2;
unsigned RXM1SID5 :1;
};
struct {
unsigned :3;
unsigned RXM1SID6 :1;
};
struct {
unsigned :4;
unsigned RXM1SID7 :1;
};
struct {
unsigned :5;
unsigned RXM1SID8 :1;
};
struct {
unsigned :6;
unsigned RXM1SID9 :1;
};
} RXM1SIDHbits_t;
extern volatile RXM1SIDHbits_t RXM1SIDHbits @ 0xF1C;

# 3663
extern volatile unsigned char RXM1SIDL @ 0xF1D;

asm("RXM1SIDL equ 0F1Dh");


typedef union {
struct {
unsigned EID16 :1;
unsigned EID17 :1;
unsigned :3;
unsigned SID0 :1;
unsigned SID1 :1;
unsigned SID2 :1;
};
struct {
unsigned RXM1EID16 :1;
};
struct {
unsigned :1;
unsigned RXM1EID17 :1;
};
struct {
unsigned :5;
unsigned RXM1SID0 :1;
};
struct {
unsigned :6;
unsigned RXM1SID1 :1;
};
struct {
unsigned :7;
unsigned RXM1SID2 :1;
};
} RXM1SIDLbits_t;
extern volatile RXM1SIDLbits_t RXM1SIDLbits @ 0xF1D;

# 3751
extern volatile unsigned char RXM1EIDH @ 0xF1E;

asm("RXM1EIDH equ 0F1Eh");


typedef union {
struct {
unsigned EID8 :1;
unsigned EID9 :1;
unsigned EID10 :1;
unsigned EID11 :1;
unsigned EID12 :1;
unsigned EID13 :1;
unsigned EID14 :1;
unsigned EID15 :1;
};
struct {
unsigned :2;
unsigned RXM1EID10 :1;
};
struct {
unsigned :3;
unsigned RXM1EID11 :1;
};
struct {
unsigned :4;
unsigned RXM1EID12 :1;
};
struct {
unsigned :5;
unsigned RXM1EID13 :1;
};
struct {
unsigned :6;
unsigned RXM1EID14 :1;
};
struct {
unsigned :7;
unsigned RXM1EID15 :1;
};
struct {
unsigned RXM1EID8 :1;
};
struct {
unsigned :1;
unsigned RXM1EID9 :1;
};
} RXM1EIDHbits_t;
extern volatile RXM1EIDHbits_t RXM1EIDHbits @ 0xF1E;

# 3883
extern volatile unsigned char RXM1EIDL @ 0xF1F;

asm("RXM1EIDL equ 0F1Fh");


typedef union {
struct {
unsigned EID0 :1;
unsigned EID1 :1;
unsigned EID2 :1;
unsigned EID3 :1;
unsigned EID4 :1;
unsigned EID5 :1;
unsigned EID6 :1;
unsigned EID7 :1;
};
struct {
unsigned RXM1EID0 :1;
};
struct {
unsigned :1;
unsigned RXM1EID1 :1;
};
struct {
unsigned :2;
unsigned RXM1EID2 :1;
};
struct {
unsigned :3;
unsigned RXM1EID3 :1;
};
struct {
unsigned :4;
unsigned RXM1EID4 :1;
};
struct {
unsigned :5;
unsigned RXM1EID5 :1;
};
struct {
unsigned :6;
unsigned RXM1EID6 :1;
};
struct {
unsigned :7;
unsigned RXM1EID7 :1;
};
} RXM1EIDLbits_t;
extern volatile RXM1EIDLbits_t RXM1EIDLbits @ 0xF1F;

# 4015
extern volatile unsigned char TXB2CON @ 0xF20;

asm("TXB2CON equ 0F20h");


typedef union {
struct {
unsigned TXPRI0 :1;
unsigned TXPRI1 :1;
unsigned :1;
unsigned TXREQ :1;
unsigned TXERR :1;
unsigned TXLARB :1;
unsigned TXABT :1;
};
struct {
unsigned :6;
unsigned TXB2ABT :1;
};
struct {
unsigned :4;
unsigned TXB2ERR :1;
};
struct {
unsigned :5;
unsigned TXB2LARB :1;
};
struct {
unsigned TXB2PRI0 :1;
};
struct {
unsigned :1;
unsigned TXB2PRI1 :1;
};
struct {
unsigned :3;
unsigned TXB2REQ :1;
};
} TXB2CONbits_t;
extern volatile TXB2CONbits_t TXB2CONbits @ 0xF20;

# 4118
extern volatile unsigned char TXB2SIDH @ 0xF21;

asm("TXB2SIDH equ 0F21h");


typedef union {
struct {
unsigned SID3 :1;
unsigned SID4 :1;
unsigned SID5 :1;
unsigned SID6 :1;
unsigned SID7 :1;
unsigned SID8 :1;
unsigned SID9 :1;
unsigned SID10 :1;
};
struct {
unsigned :7;
unsigned TXB2SID10 :1;
};
struct {
unsigned TXB2SID3 :1;
};
struct {
unsigned :1;
unsigned TXB2SID4 :1;
};
struct {
unsigned :2;
unsigned TXB2SID5 :1;
};
struct {
unsigned :3;
unsigned TXB2SID6 :1;
};
struct {
unsigned :4;
unsigned TXB2SID7 :1;
};
struct {
unsigned :5;
unsigned TXB2SID8 :1;
};
struct {
unsigned :6;
unsigned TXB2SID9 :1;
};
} TXB2SIDHbits_t;
extern volatile TXB2SIDHbits_t TXB2SIDHbits @ 0xF21;

# 4250
extern volatile unsigned char TXB2SIDL @ 0xF22;

asm("TXB2SIDL equ 0F22h");


typedef union {
struct {
unsigned EID16 :1;
unsigned EID17 :1;
unsigned :1;
unsigned EXIDE :1;
unsigned :1;
unsigned SID0 :1;
unsigned SID1 :1;
unsigned SID2 :1;
};
struct {
unsigned TXB2EID16 :1;
};
struct {
unsigned :1;
unsigned TXB2EID17 :1;
};
struct {
unsigned :3;
unsigned TXB2EXIDE :1;
};
struct {
unsigned :5;
unsigned TXB2SID0 :1;
};
struct {
unsigned :6;
unsigned TXB2SID1 :1;
};
struct {
unsigned :7;
unsigned TXB2SID2 :1;
};
} TXB2SIDLbits_t;
extern volatile TXB2SIDLbits_t TXB2SIDLbits @ 0xF22;

# 4354
extern volatile unsigned char TXB2EIDH @ 0xF23;

asm("TXB2EIDH equ 0F23h");


typedef union {
struct {
unsigned EID8 :1;
unsigned EID9 :1;
unsigned EID10 :1;
unsigned EID11 :1;
unsigned EID12 :1;
unsigned EID13 :1;
unsigned EID14 :1;
unsigned EID15 :1;
};
struct {
unsigned :2;
unsigned TXB2EID10 :1;
};
struct {
unsigned :3;
unsigned TXB2EID11 :1;
};
struct {
unsigned :4;
unsigned TXB2EID12 :1;
};
struct {
unsigned :5;
unsigned TXB2EID13 :1;
};
struct {
unsigned :6;
unsigned TXB2EID14 :1;
};
struct {
unsigned :7;
unsigned TXB2EID15 :1;
};
struct {
unsigned TXB2EID8 :1;
};
struct {
unsigned :1;
unsigned TXB2EID9 :1;
};
} TXB2EIDHbits_t;
extern volatile TXB2EIDHbits_t TXB2EIDHbits @ 0xF23;

# 4486
extern volatile unsigned char TXB2EIDL @ 0xF24;

asm("TXB2EIDL equ 0F24h");


typedef union {
struct {
unsigned EID0 :1;
unsigned EID1 :1;
unsigned EID2 :1;
unsigned EID3 :1;
unsigned EID4 :1;
unsigned EID5 :1;
unsigned EID6 :1;
unsigned EID7 :1;
};
struct {
unsigned TXB2EID0 :1;
};
struct {
unsigned :1;
unsigned TXB2EID1 :1;
};
struct {
unsigned :2;
unsigned TXB2EID2 :1;
};
struct {
unsigned :3;
unsigned TXB2EID3 :1;
};
struct {
unsigned :4;
unsigned TXB2EID4 :1;
};
struct {
unsigned :5;
unsigned TXB2EID5 :1;
};
struct {
unsigned :6;
unsigned TXB2EID6 :1;
};
struct {
unsigned :7;
unsigned TXB2EID7 :1;
};
} TXB2EIDLbits_t;
extern volatile TXB2EIDLbits_t TXB2EIDLbits @ 0xF24;

# 4618
extern volatile unsigned char TXB2DLC @ 0xF25;

asm("TXB2DLC equ 0F25h");


typedef union {
struct {
unsigned DLC0 :1;
unsigned DLC1 :1;
unsigned DLC2 :1;
unsigned DLC3 :1;
unsigned :2;
unsigned TXRTR :1;
};
struct {
unsigned TXB2DLC0 :1;
};
struct {
unsigned :1;
unsigned TXB2DLC1 :1;
};
struct {
unsigned :2;
unsigned TXB2DLC2 :1;
};
struct {
unsigned :3;
unsigned TXB2DLC3 :1;
};
struct {
unsigned :6;
unsigned TXB2RTR :1;
};
} TXB2DLCbits_t;
extern volatile TXB2DLCbits_t TXB2DLCbits @ 0xF25;

# 4706
extern volatile unsigned char TXB2D0 @ 0xF26;

asm("TXB2D0 equ 0F26h");


typedef union {
struct {
unsigned TXB2D00 :1;
unsigned TXB2D01 :1;
unsigned TXB2D02 :1;
unsigned TXB2D03 :1;
unsigned TXB2D04 :1;
unsigned TXB2D05 :1;
unsigned TXB2D06 :1;
unsigned TXB2D07 :1;
};
} TXB2D0bits_t;
extern volatile TXB2D0bits_t TXB2D0bits @ 0xF26;

# 4767
extern volatile unsigned char TXB2D1 @ 0xF27;

asm("TXB2D1 equ 0F27h");


typedef union {
struct {
unsigned TXB2D10 :1;
unsigned TXB2D11 :1;
unsigned TXB2D12 :1;
unsigned TXB2D13 :1;
unsigned TXB2D14 :1;
unsigned TXB2D15 :1;
unsigned TXB2D16 :1;
unsigned TXB2D17 :1;
};
} TXB2D1bits_t;
extern volatile TXB2D1bits_t TXB2D1bits @ 0xF27;

# 4828
extern volatile unsigned char TXB2D2 @ 0xF28;

asm("TXB2D2 equ 0F28h");


typedef union {
struct {
unsigned TXB2D20 :1;
unsigned TXB2D21 :1;
unsigned TXB2D22 :1;
unsigned TXB2D23 :1;
unsigned TXB2D24 :1;
unsigned TXB2D25 :1;
unsigned TXB2D26 :1;
unsigned TXB2D27 :1;
};
} TXB2D2bits_t;
extern volatile TXB2D2bits_t TXB2D2bits @ 0xF28;

# 4889
extern volatile unsigned char TXB2D3 @ 0xF29;

asm("TXB2D3 equ 0F29h");


typedef union {
struct {
unsigned TXB2D30 :1;
unsigned TXB2D31 :1;
unsigned TXB2D32 :1;
unsigned TXB2D33 :1;
unsigned TXB2D34 :1;
unsigned TXB2D35 :1;
unsigned TXB2D36 :1;
unsigned TXB2D37 :1;
};
} TXB2D3bits_t;
extern volatile TXB2D3bits_t TXB2D3bits @ 0xF29;

# 4950
extern volatile unsigned char TXB2D4 @ 0xF2A;

asm("TXB2D4 equ 0F2Ah");


typedef union {
struct {
unsigned TXB2D40 :1;
unsigned TXB2D41 :1;
unsigned TXB2D42 :1;
unsigned TXB2D43 :1;
unsigned TXB2D44 :1;
unsigned TXB2D45 :1;
unsigned TXB2D46 :1;
unsigned TXB2D47 :1;
};
} TXB2D4bits_t;
extern volatile TXB2D4bits_t TXB2D4bits @ 0xF2A;

# 5011
extern volatile unsigned char TXB2D5 @ 0xF2B;

asm("TXB2D5 equ 0F2Bh");


typedef union {
struct {
unsigned TXB2D50 :1;
unsigned TXB2D51 :1;
unsigned TXB2D52 :1;
unsigned TXB2D53 :1;
unsigned TXB2D54 :1;
unsigned TXB2D55 :1;
unsigned TXB2D56 :1;
unsigned TXB2D57 :1;
};
} TXB2D5bits_t;
extern volatile TXB2D5bits_t TXB2D5bits @ 0xF2B;

# 5072
extern volatile unsigned char TXB2D6 @ 0xF2C;

asm("TXB2D6 equ 0F2Ch");


typedef union {
struct {
unsigned TXB2D60 :1;
unsigned TXB2D61 :1;
unsigned TXB2D62 :1;
unsigned TXB2D63 :1;
unsigned TXB2D64 :1;
unsigned TXB2D65 :1;
unsigned TXB2D66 :1;
unsigned TXB2D67 :1;
};
} TXB2D6bits_t;
extern volatile TXB2D6bits_t TXB2D6bits @ 0xF2C;

# 5133
extern volatile unsigned char TXB2D7 @ 0xF2D;

asm("TXB2D7 equ 0F2Dh");


typedef union {
struct {
unsigned TXB2D70 :1;
unsigned TXB2D71 :1;
unsigned TXB2D72 :1;
unsigned TXB2D73 :1;
unsigned TXB2D74 :1;
unsigned TXB2D75 :1;
unsigned TXB2D76 :1;
unsigned TXB2D77 :1;
};
} TXB2D7bits_t;
extern volatile TXB2D7bits_t TXB2D7bits @ 0xF2D;

# 5194
extern volatile unsigned char CANSTATRO4 @ 0xF2E;

asm("CANSTATRO4 equ 0F2Eh");


typedef union {
struct {
unsigned :1;
unsigned ICODE0 :1;
unsigned ICODE1 :1;
unsigned ICODE2 :1;
unsigned :1;
unsigned OPMODE0 :1;
unsigned OPMODE1 :1;
unsigned OPMODE2 :1;
};
} CANSTATRO4bits_t;
extern volatile CANSTATRO4bits_t CANSTATRO4bits @ 0xF2E;

# 5245
extern volatile unsigned char TXB1CON @ 0xF30;

asm("TXB1CON equ 0F30h");


typedef union {
struct {
unsigned TXPRI0 :1;
unsigned TXPRI1 :1;
unsigned :1;
unsigned TXREQ :1;
unsigned TXERR :1;
unsigned TXLARB :1;
unsigned TXABT :1;
};
struct {
unsigned :6;
unsigned TXB1ABT :1;
};
struct {
unsigned :4;
unsigned TXB1ERR :1;
};
struct {
unsigned :5;
unsigned TXB1LARB :1;
};
struct {
unsigned TXB1PRI0 :1;
};
struct {
unsigned :1;
unsigned TXB1PRI1 :1;
};
struct {
unsigned :3;
unsigned TXB1REQ :1;
};
} TXB1CONbits_t;
extern volatile TXB1CONbits_t TXB1CONbits @ 0xF30;

# 5348
extern volatile unsigned char TXB1SIDH @ 0xF31;

asm("TXB1SIDH equ 0F31h");


typedef union {
struct {
unsigned SID3 :1;
unsigned SID4 :1;
unsigned SID5 :1;
unsigned SID6 :1;
unsigned SID7 :1;
unsigned SID8 :1;
unsigned SID9 :1;
unsigned SID10 :1;
};
struct {
unsigned :7;
unsigned TXB1SID10 :1;
};
struct {
unsigned TXB1SID3 :1;
};
struct {
unsigned :1;
unsigned TXB1SID4 :1;
};
struct {
unsigned :2;
unsigned TXB1SID5 :1;
};
struct {
unsigned :3;
unsigned TXB1SID6 :1;
};
struct {
unsigned :4;
unsigned TXB1SID7 :1;
};
struct {
unsigned :5;
unsigned TXB1SID8 :1;
};
struct {
unsigned :6;
unsigned TXB1SID9 :1;
};
} TXB1SIDHbits_t;
extern volatile TXB1SIDHbits_t TXB1SIDHbits @ 0xF31;

# 5480
extern volatile unsigned char TXB1SIDL @ 0xF32;

asm("TXB1SIDL equ 0F32h");


typedef union {
struct {
unsigned EID16 :1;
unsigned EID17 :1;
unsigned :1;
unsigned EXIDE :1;
unsigned :1;
unsigned SID0 :1;
unsigned SID1 :1;
unsigned SID2 :1;
};
struct {
unsigned TXB1EID16 :1;
};
struct {
unsigned :1;
unsigned TXB1EID17 :1;
};
struct {
unsigned :3;
unsigned TXB1EXIDE :1;
};
struct {
unsigned :5;
unsigned TXB1SID0 :1;
};
struct {
unsigned :6;
unsigned TXB1SID1 :1;
};
struct {
unsigned :7;
unsigned TXB1SID2 :1;
};
} TXB1SIDLbits_t;
extern volatile TXB1SIDLbits_t TXB1SIDLbits @ 0xF32;

# 5584
extern volatile unsigned char TXB1EIDH @ 0xF33;

asm("TXB1EIDH equ 0F33h");


typedef union {
struct {
unsigned EID8 :1;
unsigned EID9 :1;
unsigned EID10 :1;
unsigned EID11 :1;
unsigned EID12 :1;
unsigned EID13 :1;
unsigned EID14 :1;
unsigned EID15 :1;
};
struct {
unsigned :2;
unsigned TXB1EID10 :1;
};
struct {
unsigned :3;
unsigned TXB1EID11 :1;
};
struct {
unsigned :4;
unsigned TXB1EID12 :1;
};
struct {
unsigned :5;
unsigned TXB1EID13 :1;
};
struct {
unsigned :6;
unsigned TXB1EID14 :1;
};
struct {
unsigned :7;
unsigned TXB1EID15 :1;
};
struct {
unsigned TXB1EID8 :1;
};
struct {
unsigned :1;
unsigned TXB1EID9 :1;
};
} TXB1EIDHbits_t;
extern volatile TXB1EIDHbits_t TXB1EIDHbits @ 0xF33;

# 5716
extern volatile unsigned char TXB1EIDL @ 0xF34;

asm("TXB1EIDL equ 0F34h");


typedef union {
struct {
unsigned EID0 :1;
unsigned EID1 :1;
unsigned EID2 :1;
unsigned EID3 :1;
unsigned EID4 :1;
unsigned EID5 :1;
unsigned EID6 :1;
unsigned EID7 :1;
};
struct {
unsigned TXB1EID0 :1;
};
struct {
unsigned :1;
unsigned TXB1EID1 :1;
};
struct {
unsigned :2;
unsigned TXB1EID2 :1;
};
struct {
unsigned :3;
unsigned TXB1EID3 :1;
};
struct {
unsigned :4;
unsigned TXB1EID4 :1;
};
struct {
unsigned :5;
unsigned TXB1EID5 :1;
};
struct {
unsigned :6;
unsigned TXB1EID6 :1;
};
struct {
unsigned :7;
unsigned TXB1EID7 :1;
};
} TXB1EIDLbits_t;
extern volatile TXB1EIDLbits_t TXB1EIDLbits @ 0xF34;

# 5848
extern volatile unsigned char TXB1DLC @ 0xF35;

asm("TXB1DLC equ 0F35h");


typedef union {
struct {
unsigned DLC0 :1;
unsigned DLC1 :1;
unsigned DLC2 :1;
unsigned DLC3 :1;
unsigned :2;
unsigned TXRTR :1;
};
struct {
unsigned TXB1DLC0 :1;
};
struct {
unsigned :1;
unsigned TXB1DLC1 :1;
};
struct {
unsigned :2;
unsigned TXB1DLC2 :1;
};
struct {
unsigned :3;
unsigned TXB1DLC3 :1;
};
struct {
unsigned :6;
unsigned TXB1RTR :1;
};
} TXB1DLCbits_t;
extern volatile TXB1DLCbits_t TXB1DLCbits @ 0xF35;

# 5936
extern volatile unsigned char TXB1D0 @ 0xF36;

asm("TXB1D0 equ 0F36h");


typedef union {
struct {
unsigned TXB1D00 :1;
unsigned TXB1D01 :1;
unsigned TXB1D02 :1;
unsigned TXB1D03 :1;
unsigned TXB1D04 :1;
unsigned TXB1D05 :1;
unsigned TXB1D06 :1;
unsigned TXB1D07 :1;
};
} TXB1D0bits_t;
extern volatile TXB1D0bits_t TXB1D0bits @ 0xF36;

# 5997
extern volatile unsigned char TXB1D1 @ 0xF37;

asm("TXB1D1 equ 0F37h");


typedef union {
struct {
unsigned TXB1D10 :1;
unsigned TXB1D11 :1;
unsigned TXB1D12 :1;
unsigned TXB1D13 :1;
unsigned TXB1D14 :1;
unsigned TXB1D15 :1;
unsigned TXB1D16 :1;
unsigned TXB1D17 :1;
};
} TXB1D1bits_t;
extern volatile TXB1D1bits_t TXB1D1bits @ 0xF37;

# 6058
extern volatile unsigned char TXB1D2 @ 0xF38;

asm("TXB1D2 equ 0F38h");


typedef union {
struct {
unsigned TXB1D20 :1;
unsigned TXB1D21 :1;
unsigned TXB1D22 :1;
unsigned TXB1D23 :1;
unsigned TXB1D24 :1;
unsigned TXB1D25 :1;
unsigned TXB1D26 :1;
unsigned TXB1D27 :1;
};
struct {
unsigned :3;
unsigned TBB1D23 :1;
};
} TXB1D2bits_t;
extern volatile TXB1D2bits_t TXB1D2bits @ 0xF38;

# 6128
extern volatile unsigned char TXB1D3 @ 0xF39;

asm("TXB1D3 equ 0F39h");


typedef union {
struct {
unsigned TXB1D30 :1;
unsigned TXB1D31 :1;
unsigned TXB1D32 :1;
unsigned TXB1D33 :1;
unsigned TXB1D34 :1;
unsigned TXB1D35 :1;
unsigned TXB1D36 :1;
unsigned TXB1D37 :1;
};
} TXB1D3bits_t;
extern volatile TXB1D3bits_t TXB1D3bits @ 0xF39;

# 6189
extern volatile unsigned char TXB1D4 @ 0xF3A;

asm("TXB1D4 equ 0F3Ah");


typedef union {
struct {
unsigned TXB1D40 :1;
unsigned TXB1D41 :1;
unsigned TXB1D42 :1;
unsigned TXB1D43 :1;
unsigned TXB1D44 :1;
unsigned TXB1D45 :1;
unsigned TXB1D46 :1;
unsigned TXB1D47 :1;
};
} TXB1D4bits_t;
extern volatile TXB1D4bits_t TXB1D4bits @ 0xF3A;

# 6250
extern volatile unsigned char TXB1D5 @ 0xF3B;

asm("TXB1D5 equ 0F3Bh");


typedef union {
struct {
unsigned TXB1D50 :1;
unsigned TXB1D51 :1;
unsigned TXB1D52 :1;
unsigned TXB1D53 :1;
unsigned TXB1D54 :1;
unsigned TXB1D55 :1;
unsigned TXB1D56 :1;
unsigned TXB1D57 :1;
};
} TXB1D5bits_t;
extern volatile TXB1D5bits_t TXB1D5bits @ 0xF3B;

# 6311
extern volatile unsigned char TXB1D6 @ 0xF3C;

asm("TXB1D6 equ 0F3Ch");


typedef union {
struct {
unsigned TXB1D60 :1;
unsigned TXB1D61 :1;
unsigned TXB1D62 :1;
unsigned TXB1D63 :1;
unsigned TXB1D64 :1;
unsigned TXB1D65 :1;
unsigned TXB1D66 :1;
unsigned TXB1D67 :1;
};
} TXB1D6bits_t;
extern volatile TXB1D6bits_t TXB1D6bits @ 0xF3C;

# 6372
extern volatile unsigned char TXB1D7 @ 0xF3D;

asm("TXB1D7 equ 0F3Dh");


typedef union {
struct {
unsigned TXB1D70 :1;
unsigned TXB1D71 :1;
unsigned TXB1D72 :1;
unsigned TXB1D73 :1;
unsigned TXB1D74 :1;
unsigned TXB1D75 :1;
unsigned TXB1D76 :1;
unsigned TXB1D77 :1;
};
} TXB1D7bits_t;
extern volatile TXB1D7bits_t TXB1D7bits @ 0xF3D;

# 6433
extern volatile unsigned char CANSTATRO3 @ 0xF3E;

asm("CANSTATRO3 equ 0F3Eh");


typedef union {
struct {
unsigned :1;
unsigned ICODE0 :1;
unsigned ICODE1 :1;
unsigned ICODE2 :1;
unsigned :1;
unsigned OPMODE0 :1;
unsigned OPMODE1 :1;
unsigned OPMODE2 :1;
};
} CANSTATRO3bits_t;
extern volatile CANSTATRO3bits_t CANSTATRO3bits @ 0xF3E;

# 6484
extern volatile unsigned char TXB0CON @ 0xF40;

asm("TXB0CON equ 0F40h");


typedef union {
struct {
unsigned TXPRI0 :1;
unsigned TXPRI1 :1;
unsigned :1;
unsigned TXREQ :1;
unsigned TXERR :1;
unsigned TXLARB :1;
unsigned TXABT :1;
};
struct {
unsigned :6;
unsigned TXB0ABT :1;
};
struct {
unsigned :4;
unsigned TXB0ERR :1;
};
struct {
unsigned :5;
unsigned TXB0LARB :1;
};
struct {
unsigned TXB0PRI0 :1;
};
struct {
unsigned :1;
unsigned TXB0PRI1 :1;
};
struct {
unsigned :3;
unsigned TXB0REQ :1;
};
} TXB0CONbits_t;
extern volatile TXB0CONbits_t TXB0CONbits @ 0xF40;

# 6587
extern volatile unsigned char TXB0SIDH @ 0xF41;

asm("TXB0SIDH equ 0F41h");


typedef union {
struct {
unsigned SID3 :1;
unsigned SID4 :1;
unsigned SID5 :1;
unsigned SID6 :1;
unsigned SID7 :1;
unsigned SID8 :1;
unsigned SID9 :1;
unsigned SID10 :1;
};
struct {
unsigned :7;
unsigned TXB0SID10 :1;
};
struct {
unsigned TXB0SID3 :1;
};
struct {
unsigned :1;
unsigned TXB0SID4 :1;
};
struct {
unsigned :2;
unsigned TXB0SID5 :1;
};
struct {
unsigned :3;
unsigned TXB0SID6 :1;
};
struct {
unsigned :4;
unsigned TXB0SID7 :1;
};
struct {
unsigned :5;
unsigned TXB0SID8 :1;
};
struct {
unsigned :6;
unsigned TXB0SID9 :1;
};
} TXB0SIDHbits_t;
extern volatile TXB0SIDHbits_t TXB0SIDHbits @ 0xF41;

# 6719
extern volatile unsigned char TXB0SIDL @ 0xF42;

asm("TXB0SIDL equ 0F42h");


typedef union {
struct {
unsigned EID16 :1;
unsigned EID17 :1;
unsigned :1;
unsigned EXIDE :1;
unsigned :1;
unsigned SID0 :1;
unsigned SID1 :1;
unsigned SID2 :1;
};
struct {
unsigned TXB0EID16 :1;
};
struct {
unsigned :1;
unsigned TXB0EID17 :1;
};
struct {
unsigned :3;
unsigned TXB0EXIDE :1;
};
struct {
unsigned :5;
unsigned TXB0SID0 :1;
};
struct {
unsigned :6;
unsigned TXB0SID1 :1;
};
struct {
unsigned :7;
unsigned TXB0SID2 :1;
};
} TXB0SIDLbits_t;
extern volatile TXB0SIDLbits_t TXB0SIDLbits @ 0xF42;

# 6823
extern volatile unsigned char TXB0EIDH @ 0xF43;

asm("TXB0EIDH equ 0F43h");


typedef union {
struct {
unsigned EID8 :1;
unsigned EID9 :1;
unsigned EID10 :1;
unsigned EID11 :1;
unsigned EID12 :1;
unsigned EID13 :1;
unsigned EID14 :1;
unsigned EID15 :1;
};
struct {
unsigned :2;
unsigned TXB0EID10 :1;
};
struct {
unsigned :3;
unsigned TXB0EID11 :1;
};
struct {
unsigned :4;
unsigned TXB0EID12 :1;
};
struct {
unsigned :5;
unsigned TXB0EID13 :1;
};
struct {
unsigned :6;
unsigned TXB0EID14 :1;
};
struct {
unsigned :7;
unsigned TXB0EID15 :1;
};
struct {
unsigned TXB0EID8 :1;
};
struct {
unsigned :1;
unsigned TXB0EID9 :1;
};
} TXB0EIDHbits_t;
extern volatile TXB0EIDHbits_t TXB0EIDHbits @ 0xF43;

# 6955
extern volatile unsigned char TXB0EIDL @ 0xF44;

asm("TXB0EIDL equ 0F44h");


typedef union {
struct {
unsigned EID0 :1;
unsigned EID1 :1;
unsigned EID2 :1;
unsigned EID3 :1;
unsigned EID4 :1;
unsigned EID5 :1;
unsigned EID6 :1;
unsigned EID7 :1;
};
struct {
unsigned TXB0EID0 :1;
};
struct {
unsigned :1;
unsigned TXB0EID1 :1;
};
struct {
unsigned :2;
unsigned TXB0EID2 :1;
};
struct {
unsigned :3;
unsigned TXB0EID3 :1;
};
struct {
unsigned :4;
unsigned TXB0EID4 :1;
};
struct {
unsigned :5;
unsigned TXB0EID5 :1;
};
struct {
unsigned :6;
unsigned TXB0EID6 :1;
};
struct {
unsigned :7;
unsigned TXB0EID7 :1;
};
} TXB0EIDLbits_t;
extern volatile TXB0EIDLbits_t TXB0EIDLbits @ 0xF44;

# 7087
extern volatile unsigned char TXB0DLC @ 0xF45;

asm("TXB0DLC equ 0F45h");


typedef union {
struct {
unsigned DLC0 :1;
unsigned DLC1 :1;
unsigned DLC2 :1;
unsigned DLC3 :1;
unsigned :2;
unsigned TXRTR :1;
};
struct {
unsigned TXB0DLC0 :1;
};
struct {
unsigned :1;
unsigned TXB0DLC1 :1;
};
struct {
unsigned :2;
unsigned TXB0DLC2 :1;
};
struct {
unsigned :3;
unsigned TXB0DLC3 :1;
};
struct {
unsigned :6;
unsigned TXB0RTR :1;
};
} TXB0DLCbits_t;
extern volatile TXB0DLCbits_t TXB0DLCbits @ 0xF45;

# 7175
extern volatile unsigned char TXB0D0 @ 0xF46;

asm("TXB0D0 equ 0F46h");


typedef union {
struct {
unsigned TXB0D00 :1;
unsigned TXB0D01 :1;
unsigned TXB0D02 :1;
unsigned TXB0D03 :1;
unsigned TXB0D04 :1;
unsigned TXB0D05 :1;
unsigned TXB0D06 :1;
unsigned TXB0D07 :1;
};
} TXB0D0bits_t;
extern volatile TXB0D0bits_t TXB0D0bits @ 0xF46;

# 7236
extern volatile unsigned char TXB0D1 @ 0xF47;

asm("TXB0D1 equ 0F47h");


typedef union {
struct {
unsigned TXB0D10 :1;
unsigned TXB0D11 :1;
unsigned TXB0D12 :1;
unsigned TXB0D13 :1;
unsigned TXB0D14 :1;
unsigned TXB0D15 :1;
unsigned TXB0D16 :1;
unsigned TXB0D17 :1;
};
} TXB0D1bits_t;
extern volatile TXB0D1bits_t TXB0D1bits @ 0xF47;

# 7297
extern volatile unsigned char TXB0D2 @ 0xF48;

asm("TXB0D2 equ 0F48h");


typedef union {
struct {
unsigned TXB0D20 :1;
unsigned TXB0D21 :1;
unsigned TXB0D22 :1;
unsigned TXB0D23 :1;
unsigned TXB0D24 :1;
unsigned TXB0D25 :1;
unsigned TXB0D26 :1;
unsigned TXB0D27 :1;
};
} TXB0D2bits_t;
extern volatile TXB0D2bits_t TXB0D2bits @ 0xF48;

# 7358
extern volatile unsigned char TXB0D3 @ 0xF49;

asm("TXB0D3 equ 0F49h");


typedef union {
struct {
unsigned TXB0D30 :1;
unsigned TXB0D31 :1;
unsigned TXB0D32 :1;
unsigned TXB0D33 :1;
unsigned TXB0D34 :1;
unsigned TXB0D35 :1;
unsigned TXB0D36 :1;
unsigned TXB0D37 :1;
};
} TXB0D3bits_t;
extern volatile TXB0D3bits_t TXB0D3bits @ 0xF49;

# 7419
extern volatile unsigned char TXB0D4 @ 0xF4A;

asm("TXB0D4 equ 0F4Ah");


typedef union {
struct {
unsigned TXB0D40 :1;
unsigned TXB0D41 :1;
unsigned TXB0D42 :1;
unsigned TXB0D43 :1;
unsigned TXB0D44 :1;
unsigned TXB0D45 :1;
unsigned TXB0D46 :1;
unsigned TXB0D47 :1;
};
} TXB0D4bits_t;
extern volatile TXB0D4bits_t TXB0D4bits @ 0xF4A;

# 7480
extern volatile unsigned char TXB0D5 @ 0xF4B;

asm("TXB0D5 equ 0F4Bh");


typedef union {
struct {
unsigned TXB0D50 :1;
unsigned TXB0D51 :1;
unsigned TXB0D52 :1;
unsigned TXB0D53 :1;
unsigned TXB0D54 :1;
unsigned TXB0D55 :1;
unsigned TXB0D56 :1;
unsigned TXB0D57 :1;
};
} TXB0D5bits_t;
extern volatile TXB0D5bits_t TXB0D5bits @ 0xF4B;

# 7541
extern volatile unsigned char TXB0D6 @ 0xF4C;

asm("TXB0D6 equ 0F4Ch");


typedef union {
struct {
unsigned TXB0D60 :1;
unsigned TXB0D61 :1;
unsigned TXB0D62 :1;
unsigned TXB0D63 :1;
unsigned TXB0D64 :1;
unsigned TXB0D65 :1;
unsigned TXB0D66 :1;
unsigned TXB0D67 :1;
};
} TXB0D6bits_t;
extern volatile TXB0D6bits_t TXB0D6bits @ 0xF4C;

# 7602
extern volatile unsigned char TXB0D7 @ 0xF4D;

asm("TXB0D7 equ 0F4Dh");


typedef union {
struct {
unsigned TXB0D70 :1;
unsigned TXB0D71 :1;
unsigned TXB0D72 :1;
unsigned TXB0D73 :1;
unsigned TXB0D74 :1;
unsigned TXB0D75 :1;
unsigned TXB0D76 :1;
unsigned TXB0D77 :1;
};
} TXB0D7bits_t;
extern volatile TXB0D7bits_t TXB0D7bits @ 0xF4D;

# 7663
extern volatile unsigned char CANSTATRO2 @ 0xF4E;

asm("CANSTATRO2 equ 0F4Eh");


typedef union {
struct {
unsigned :1;
unsigned ICODE0 :1;
unsigned ICODE1 :1;
unsigned ICODE2 :1;
unsigned :1;
unsigned OPMODE0 :1;
unsigned OPMODE1 :1;
unsigned OPMODE2 :1;
};
} CANSTATRO2bits_t;
extern volatile CANSTATRO2bits_t CANSTATRO2bits @ 0xF4E;

# 7714
extern volatile unsigned char RXB1CON @ 0xF50;

asm("RXB1CON equ 0F50h");


typedef union {
struct {
unsigned FILHIT0 :1;
unsigned FILHIT1 :1;
unsigned FILHIT2 :1;
unsigned RXRTRRO :1;
unsigned :1;
unsigned RXM0 :1;
unsigned RXM1 :1;
unsigned RXFUL :1;
};
struct {
unsigned RXB1FILHIT0 :1;
};
struct {
unsigned :1;
unsigned RXB1FILHIT1 :1;
};
struct {
unsigned :2;
unsigned RXB1FILHIT2 :1;
};
struct {
unsigned :3;
unsigned RXB1FILHIT3 :1;
};
struct {
unsigned :7;
unsigned RXB1FUL :1;
};
struct {
unsigned :5;
unsigned RXB1M0 :1;
};
struct {
unsigned :6;
unsigned RXB1M1 :1;
};
struct {
unsigned :3;
unsigned RXB1RTRR0 :1;
};
struct {
unsigned :5;
unsigned RXB1RTRRO :1;
};
} RXB1CONbits_t;
extern volatile RXB1CONbits_t RXB1CONbits @ 0xF50;

# 7850
extern volatile unsigned char RXB1SIDH @ 0xF51;

asm("RXB1SIDH equ 0F51h");


typedef union {
struct {
unsigned SID3 :1;
unsigned SID4 :1;
unsigned SID5 :1;
unsigned SID6 :1;
unsigned SID7 :1;
unsigned SID8 :1;
unsigned SID9 :1;
unsigned SID10 :1;
};
struct {
unsigned :7;
unsigned RXB1SID10 :1;
};
struct {
unsigned RXB1SID3 :1;
};
struct {
unsigned :1;
unsigned RXB1SID4 :1;
};
struct {
unsigned :2;
unsigned RXB1SID5 :1;
};
struct {
unsigned :3;
unsigned RXB1SID6 :1;
};
struct {
unsigned :4;
unsigned RXB1SID7 :1;
};
struct {
unsigned :5;
unsigned RXB1SID8 :1;
};
struct {
unsigned :6;
unsigned RXB1SID9 :1;
};
} RXB1SIDHbits_t;
extern volatile RXB1SIDHbits_t RXB1SIDHbits @ 0xF51;

# 7982
extern volatile unsigned char RXB1SIDL @ 0xF52;

asm("RXB1SIDL equ 0F52h");


typedef union {
struct {
unsigned EID16 :1;
unsigned EID17 :1;
unsigned :1;
unsigned EXID :1;
unsigned SRR :1;
unsigned SID0 :1;
unsigned SID1 :1;
unsigned SID2 :1;
};
struct {
unsigned RXB1EID16 :1;
};
struct {
unsigned :1;
unsigned RXB1EID17 :1;
};
struct {
unsigned :3;
unsigned RXB1EXID :1;
};
struct {
unsigned :5;
unsigned RXB1SID0 :1;
};
struct {
unsigned :6;
unsigned RXB1SID1 :1;
};
struct {
unsigned :7;
unsigned RXB1SID2 :1;
};
struct {
unsigned :4;
unsigned RXB1SRR :1;
};
} RXB1SIDLbits_t;
extern volatile RXB1SIDLbits_t RXB1SIDLbits @ 0xF52;

# 8100
extern volatile unsigned char RXB1EIDH @ 0xF53;

asm("RXB1EIDH equ 0F53h");


typedef union {
struct {
unsigned EID8 :1;
unsigned EID9 :1;
unsigned EID10 :1;
unsigned EID11 :1;
unsigned EID12 :1;
unsigned EID13 :1;
unsigned EID14 :1;
unsigned EID15 :1;
};
struct {
unsigned :2;
unsigned RXB1EID10 :1;
};
struct {
unsigned :3;
unsigned RXB1EID11 :1;
};
struct {
unsigned :4;
unsigned RXB1EID12 :1;
};
struct {
unsigned :5;
unsigned RXB1EID13 :1;
};
struct {
unsigned :6;
unsigned RXB1EID14 :1;
};
struct {
unsigned :7;
unsigned RXB1EID15 :1;
};
struct {
unsigned RXB1EID8 :1;
};
struct {
unsigned :1;
unsigned RXB1EID9 :1;
};
} RXB1EIDHbits_t;
extern volatile RXB1EIDHbits_t RXB1EIDHbits @ 0xF53;

# 8232
extern volatile unsigned char RXB1EIDL @ 0xF54;

asm("RXB1EIDL equ 0F54h");


typedef union {
struct {
unsigned EID0 :1;
unsigned EID1 :1;
unsigned EID2 :1;
unsigned EID3 :1;
unsigned EID4 :1;
unsigned EID5 :1;
unsigned EID6 :1;
unsigned EID7 :1;
};
struct {
unsigned RXB1EID0 :1;
};
struct {
unsigned :1;
unsigned RXB1EID1 :1;
};
struct {
unsigned :2;
unsigned RXB1EID2 :1;
};
struct {
unsigned :3;
unsigned RXB1EID3 :1;
};
struct {
unsigned :4;
unsigned RXB1EID4 :1;
};
struct {
unsigned :5;
unsigned RXB1EID5 :1;
};
struct {
unsigned :6;
unsigned RXB1EID6 :1;
};
struct {
unsigned :7;
unsigned RXB1EID7 :1;
};
} RXB1EIDLbits_t;
extern volatile RXB1EIDLbits_t RXB1EIDLbits @ 0xF54;

# 8364
extern volatile unsigned char RXB1DLC @ 0xF55;

asm("RXB1DLC equ 0F55h");


typedef union {
struct {
unsigned DLC0 :1;
unsigned DLC1 :1;
unsigned DLC2 :1;
unsigned DLC3 :1;
unsigned RB0 :1;
unsigned RB1 :1;
unsigned RXRTR :1;
};
struct {
unsigned :4;
unsigned RESB0 :1;
unsigned RESB1 :1;
};
struct {
unsigned RXB1DLC0 :1;
};
struct {
unsigned :1;
unsigned RXB1DLC1 :1;
};
struct {
unsigned :2;
unsigned RXB1DLC2 :1;
};
struct {
unsigned :3;
unsigned RXB1DLC3 :1;
};
struct {
unsigned :4;
unsigned RXB1RB0 :1;
};
struct {
unsigned :5;
unsigned RXB1RB1 :1;
};
struct {
unsigned :6;
unsigned RXB1RTR :1;
};
} RXB1DLCbits_t;
extern volatile RXB1DLCbits_t RXB1DLCbits @ 0xF55;

# 8496
extern volatile unsigned char RXB1D0 @ 0xF56;

asm("RXB1D0 equ 0F56h");


typedef union {
struct {
unsigned RXB1D00 :1;
unsigned RXB1D01 :1;
unsigned RXB1D02 :1;
unsigned RXB1D03 :1;
unsigned RXB1D04 :1;
unsigned RXB1D05 :1;
unsigned RXB1D06 :1;
unsigned RXB1D07 :1;
};
} RXB1D0bits_t;
extern volatile RXB1D0bits_t RXB1D0bits @ 0xF56;

# 8557
extern volatile unsigned char RXB1D1 @ 0xF57;

asm("RXB1D1 equ 0F57h");


typedef union {
struct {
unsigned RXB1D10 :1;
unsigned RXB1D11 :1;
unsigned RXB1D12 :1;
unsigned RXB1D13 :1;
unsigned RXB1D14 :1;
unsigned RXB1D15 :1;
unsigned RXB1D16 :1;
unsigned RXB1D17 :1;
};
} RXB1D1bits_t;
extern volatile RXB1D1bits_t RXB1D1bits @ 0xF57;

# 8618
extern volatile unsigned char RXB1D2 @ 0xF58;

asm("RXB1D2 equ 0F58h");


typedef union {
struct {
unsigned RXB1D20 :1;
unsigned RXB1D21 :1;
unsigned RXB1D22 :1;
unsigned RXB1D23 :1;
unsigned RXB1D24 :1;
unsigned RXB1D25 :1;
unsigned RXB1D26 :1;
unsigned RXB1D27 :1;
};
} RXB1D2bits_t;
extern volatile RXB1D2bits_t RXB1D2bits @ 0xF58;

# 8679
extern volatile unsigned char RXB1D3 @ 0xF59;

asm("RXB1D3 equ 0F59h");


typedef union {
struct {
unsigned RXB1D30 :1;
unsigned RXB1D31 :1;
unsigned RXB1D32 :1;
unsigned RXB1D33 :1;
unsigned RXB1D34 :1;
unsigned RXB1D35 :1;
unsigned RXB1D36 :1;
unsigned RXB1D37 :1;
};
} RXB1D3bits_t;
extern volatile RXB1D3bits_t RXB1D3bits @ 0xF59;

# 8740
extern volatile unsigned char RXB1D4 @ 0xF5A;

asm("RXB1D4 equ 0F5Ah");


typedef union {
struct {
unsigned RXB1D40 :1;
unsigned RXB1D41 :1;
unsigned RXB1D42 :1;
unsigned RXB1D43 :1;
unsigned RXB1D44 :1;
unsigned RXB1D45 :1;
unsigned RXB1D46 :1;
unsigned RXB1D47 :1;
};
} RXB1D4bits_t;
extern volatile RXB1D4bits_t RXB1D4bits @ 0xF5A;

# 8801
extern volatile unsigned char RXB1D5 @ 0xF5B;

asm("RXB1D5 equ 0F5Bh");


typedef union {
struct {
unsigned RXB1D50 :1;
unsigned RXB1D51 :1;
unsigned RXB1D52 :1;
unsigned RXB1D53 :1;
unsigned RXB1D54 :1;
unsigned RXB1D55 :1;
unsigned RXB1D56 :1;
unsigned RXB1D57 :1;
};
} RXB1D5bits_t;
extern volatile RXB1D5bits_t RXB1D5bits @ 0xF5B;

# 8862
extern volatile unsigned char RXB1D6 @ 0xF5C;

asm("RXB1D6 equ 0F5Ch");


typedef union {
struct {
unsigned RXB1D60 :1;
unsigned RXB1D61 :1;
unsigned RXB1D62 :1;
unsigned RXB1D63 :1;
unsigned RXB1D64 :1;
unsigned RXB1D65 :1;
unsigned RXB1D66 :1;
unsigned RXB1D67 :1;
};
} RXB1D6bits_t;
extern volatile RXB1D6bits_t RXB1D6bits @ 0xF5C;

# 8923
extern volatile unsigned char RXB1D7 @ 0xF5D;

asm("RXB1D7 equ 0F5Dh");


typedef union {
struct {
unsigned RXB1D70 :1;
unsigned RXB1D71 :1;
unsigned RXB1D72 :1;
unsigned RXB1D73 :1;
unsigned RXB1D74 :1;
unsigned RXB1D75 :1;
unsigned RXB1D76 :1;
unsigned RXB1D77 :1;
};
} RXB1D7bits_t;
extern volatile RXB1D7bits_t RXB1D7bits @ 0xF5D;

# 8984
extern volatile unsigned char CANSTATRO1 @ 0xF5E;

asm("CANSTATRO1 equ 0F5Eh");


typedef union {
struct {
unsigned :1;
unsigned ICODE0 :1;
unsigned ICODE1 :1;
unsigned ICODE2 :1;
unsigned :1;
unsigned OPMODE0 :1;
unsigned OPMODE1 :1;
unsigned OPMODE2 :1;
};
} CANSTATRO1bits_t;
extern volatile CANSTATRO1bits_t CANSTATRO1bits @ 0xF5E;

# 9035
extern volatile unsigned char RXB0CON @ 0xF60;

asm("RXB0CON equ 0F60h");


typedef union {
struct {
unsigned FILHIT0 :1;
unsigned JTOFF :1;
unsigned RXB0DBEN :1;
unsigned RXRTRRO :1;
unsigned :1;
unsigned RXM0 :1;
unsigned RXM1 :1;
unsigned RXFUL :1;
};
struct {
unsigned RXB0FILHIT0 :1;
};
struct {
unsigned :1;
unsigned RXB0FILHIT1 :1;
};
struct {
unsigned :2;
unsigned RXB0FILHIT2 :1;
};
struct {
unsigned :3;
unsigned RXB0FILHIT3 :1;
};
struct {
unsigned :7;
unsigned RXB0FUL :1;
};
struct {
unsigned :5;
unsigned RXB0M0 :1;
};
struct {
unsigned :6;
unsigned RXB0M1 :1;
};
struct {
unsigned :3;
unsigned RXB0RTRR0 :1;
};
struct {
unsigned :5;
unsigned RXB0RTRRO :1;
};
} RXB0CONbits_t;
extern volatile RXB0CONbits_t RXB0CONbits @ 0xF60;

# 9171
extern volatile unsigned char RXB0SIDH @ 0xF61;

asm("RXB0SIDH equ 0F61h");


typedef union {
struct {
unsigned SID3 :1;
unsigned SID4 :1;
unsigned SID5 :1;
unsigned SID6 :1;
unsigned SID7 :1;
unsigned SID8 :1;
unsigned SID9 :1;
unsigned SID10 :1;
};
struct {
unsigned :7;
unsigned RXB0SID10 :1;
};
struct {
unsigned RXB0SID3 :1;
};
struct {
unsigned :1;
unsigned RXB0SID4 :1;
};
struct {
unsigned :2;
unsigned RXB0SID5 :1;
};
struct {
unsigned :3;
unsigned RXB0SID6 :1;
};
struct {
unsigned :4;
unsigned RXB0SID7 :1;
};
struct {
unsigned :5;
unsigned RXB0SID8 :1;
};
struct {
unsigned :6;
unsigned RXB0SID9 :1;
};
} RXB0SIDHbits_t;
extern volatile RXB0SIDHbits_t RXB0SIDHbits @ 0xF61;

# 9303
extern volatile unsigned char RXB0SIDL @ 0xF62;

asm("RXB0SIDL equ 0F62h");


typedef union {
struct {
unsigned EID16 :1;
unsigned EID17 :1;
unsigned :1;
unsigned EXID :1;
unsigned SRR :1;
unsigned SID0 :1;
unsigned SID1 :1;
unsigned SID2 :1;
};
struct {
unsigned RXB0EID16 :1;
};
struct {
unsigned :1;
unsigned RXB0EID17 :1;
};
struct {
unsigned :3;
unsigned RXB0EXID :1;
};
struct {
unsigned :5;
unsigned RXB0SID0 :1;
};
struct {
unsigned :6;
unsigned RXB0SID1 :1;
};
struct {
unsigned :7;
unsigned RXB0SID2 :1;
};
struct {
unsigned :4;
unsigned RXB0SRR :1;
};
} RXB0SIDLbits_t;
extern volatile RXB0SIDLbits_t RXB0SIDLbits @ 0xF62;

# 9421
extern volatile unsigned char RXB0EIDH @ 0xF63;

asm("RXB0EIDH equ 0F63h");


typedef union {
struct {
unsigned EID8 :1;
unsigned EID9 :1;
unsigned EID10 :1;
unsigned EID11 :1;
unsigned EID12 :1;
unsigned EID13 :1;
unsigned EID14 :1;
unsigned EID15 :1;
};
struct {
unsigned :2;
unsigned RXB0EID10 :1;
};
struct {
unsigned :3;
unsigned RXB0EID11 :1;
};
struct {
unsigned :4;
unsigned RXB0EID12 :1;
};
struct {
unsigned :5;
unsigned RXB0EID13 :1;
};
struct {
unsigned :6;
unsigned RXB0EID14 :1;
};
struct {
unsigned :7;
unsigned RXB0EID15 :1;
};
struct {
unsigned RXB0EID8 :1;
};
struct {
unsigned :1;
unsigned RXB0EID9 :1;
};
} RXB0EIDHbits_t;
extern volatile RXB0EIDHbits_t RXB0EIDHbits @ 0xF63;

# 9553
extern volatile unsigned char RXB0EIDL @ 0xF64;

asm("RXB0EIDL equ 0F64h");


typedef union {
struct {
unsigned EID0 :1;
unsigned EID1 :1;
unsigned EID2 :1;
unsigned EID3 :1;
unsigned EID4 :1;
unsigned EID5 :1;
unsigned EID6 :1;
unsigned EID7 :1;
};
struct {
unsigned RXB0EID0 :1;
};
struct {
unsigned :1;
unsigned RXB0EID1 :1;
};
struct {
unsigned :2;
unsigned RXB0EID2 :1;
};
struct {
unsigned :3;
unsigned RXB0EID3 :1;
};
struct {
unsigned :4;
unsigned RXB0EID4 :1;
};
struct {
unsigned :5;
unsigned RXB0EID5 :1;
};
struct {
unsigned :6;
unsigned RXB0EID6 :1;
};
struct {
unsigned :7;
unsigned RXB0EID7 :1;
};
} RXB0EIDLbits_t;
extern volatile RXB0EIDLbits_t RXB0EIDLbits @ 0xF64;

# 9685
extern volatile unsigned char RXB0DLC @ 0xF65;

asm("RXB0DLC equ 0F65h");


typedef union {
struct {
unsigned DLC0 :1;
unsigned DLC1 :1;
unsigned DLC2 :1;
unsigned DLC3 :1;
unsigned RB0 :1;
unsigned RB1 :1;
unsigned RXRTR :1;
};
struct {
unsigned :4;
unsigned RESB0 :1;
unsigned RESB1 :1;
};
struct {
unsigned RXB0DLC0 :1;
};
struct {
unsigned :1;
unsigned RXB0DLC1 :1;
};
struct {
unsigned :2;
unsigned RXB0DLC2 :1;
};
struct {
unsigned :3;
unsigned RXB0DLC3 :1;
};
struct {
unsigned :4;
unsigned RXB0RB0 :1;
};
struct {
unsigned :5;
unsigned RXB0RB1 :1;
};
struct {
unsigned :6;
unsigned RXB0RTR :1;
};
} RXB0DLCbits_t;
extern volatile RXB0DLCbits_t RXB0DLCbits @ 0xF65;

# 9817
extern volatile unsigned char RXB0D0 @ 0xF66;

asm("RXB0D0 equ 0F66h");


typedef union {
struct {
unsigned RXB0D00 :1;
unsigned RXB0D01 :1;
unsigned RXB0D02 :1;
unsigned RXB0D03 :1;
unsigned RXB0D04 :1;
unsigned RXB0D05 :1;
unsigned RXB0D06 :1;
unsigned RXB0D07 :1;
};
struct {
unsigned RB0D00 :1;
unsigned RB0D01 :1;
unsigned RB0D02 :1;
unsigned RB0D03 :1;
unsigned RB0D04 :1;
unsigned RB0D05 :1;
unsigned RB0D06 :1;
unsigned RB0D07 :1;
};
} RXB0D0bits_t;
extern volatile RXB0D0bits_t RXB0D0bits @ 0xF66;

# 9928
extern volatile unsigned char RXB0D1 @ 0xF67;

asm("RXB0D1 equ 0F67h");


typedef union {
struct {
unsigned RXB0D10 :1;
unsigned RXB0D11 :1;
unsigned RXB0D12 :1;
unsigned RXB0D13 :1;
unsigned RXB0D14 :1;
unsigned RXB0D15 :1;
unsigned RXB0D16 :1;
unsigned RXB0D17 :1;
};
struct {
unsigned RB0D10 :1;
unsigned RB0D11 :1;
unsigned RB0D12 :1;
unsigned RB0D13 :1;
unsigned RB0D14 :1;
unsigned RB0D15 :1;
unsigned RB0D16 :1;
unsigned RB0D17 :1;
};
} RXB0D1bits_t;
extern volatile RXB0D1bits_t RXB0D1bits @ 0xF67;

# 10039
extern volatile unsigned char RXB0D2 @ 0xF68;

asm("RXB0D2 equ 0F68h");


typedef union {
struct {
unsigned RXB0D20 :1;
unsigned RXB0D21 :1;
unsigned RXB0D22 :1;
unsigned RXB0D23 :1;
unsigned RXB0D24 :1;
unsigned RXB0D25 :1;
unsigned RXB0D26 :1;
unsigned RXB0D27 :1;
};
struct {
unsigned RB0D20 :1;
unsigned RB0D21 :1;
unsigned RB0D22 :1;
unsigned RB0D23 :1;
unsigned RB0D24 :1;
unsigned RB0D25 :1;
unsigned RB0D26 :1;
unsigned RB0D27 :1;
};
} RXB0D2bits_t;
extern volatile RXB0D2bits_t RXB0D2bits @ 0xF68;

# 10150
extern volatile unsigned char RXB0D3 @ 0xF69;

asm("RXB0D3 equ 0F69h");


typedef union {
struct {
unsigned RXB0D30 :1;
unsigned RXB0D31 :1;
unsigned RXB0D32 :1;
unsigned RXB0D33 :1;
unsigned RXB0D34 :1;
unsigned RXB0D35 :1;
unsigned RXB0D36 :1;
unsigned RXB0D37 :1;
};
struct {
unsigned RB0D30 :1;
unsigned RB0D31 :1;
unsigned RB0D32 :1;
unsigned RB0D33 :1;
unsigned RB0D34 :1;
unsigned RB0D35 :1;
unsigned RB0D36 :1;
unsigned RB0D37 :1;
};
} RXB0D3bits_t;
extern volatile RXB0D3bits_t RXB0D3bits @ 0xF69;

# 10261
extern volatile unsigned char RXB0D4 @ 0xF6A;

asm("RXB0D4 equ 0F6Ah");


typedef union {
struct {
unsigned RXB0D40 :1;
unsigned RXB0D41 :1;
unsigned RXB0D42 :1;
unsigned RXB0D43 :1;
unsigned RXB0D44 :1;
unsigned RXB0D45 :1;
unsigned RXB0D46 :1;
unsigned RXB0D47 :1;
};
struct {
unsigned RB0D40 :1;
unsigned RB0D41 :1;
unsigned RB0D42 :1;
unsigned RB0D43 :1;
unsigned RB0D44 :1;
unsigned RB0D45 :1;
unsigned RB0D46 :1;
unsigned RB0D47 :1;
};
} RXB0D4bits_t;
extern volatile RXB0D4bits_t RXB0D4bits @ 0xF6A;

# 10372
extern volatile unsigned char RXB0D5 @ 0xF6B;

asm("RXB0D5 equ 0F6Bh");


typedef union {
struct {
unsigned RXB0D50 :1;
unsigned RXB0D51 :1;
unsigned RXB0D52 :1;
unsigned RXB0D53 :1;
unsigned RXB0D54 :1;
unsigned RXB0D55 :1;
unsigned RXB0D56 :1;
unsigned RXB0D57 :1;
};
struct {
unsigned RB0D50 :1;
unsigned RB0D51 :1;
unsigned RB0D52 :1;
unsigned RB0D53 :1;
unsigned RB0D54 :1;
unsigned RB0D55 :1;
unsigned RB0D56 :1;
unsigned RB0D57 :1;
};
} RXB0D5bits_t;
extern volatile RXB0D5bits_t RXB0D5bits @ 0xF6B;

# 10483
extern volatile unsigned char RXB0D6 @ 0xF6C;

asm("RXB0D6 equ 0F6Ch");


typedef union {
struct {
unsigned RXB0D60 :1;
unsigned RXB0D61 :1;
unsigned RXB0D62 :1;
unsigned RXB0D63 :1;
unsigned RXB0D64 :1;
unsigned RXB0D65 :1;
unsigned RXB0D66 :1;
unsigned RXB0D67 :1;
};
struct {
unsigned RB0D60 :1;
unsigned RB0D61 :1;
unsigned RB0D62 :1;
unsigned RB0D63 :1;
unsigned RB0D64 :1;
unsigned RB0D65 :1;
unsigned RB0D66 :1;
unsigned RB0D67 :1;
};
} RXB0D6bits_t;
extern volatile RXB0D6bits_t RXB0D6bits @ 0xF6C;

# 10594
extern volatile unsigned char RXB0D7 @ 0xF6D;

asm("RXB0D7 equ 0F6Dh");


typedef union {
struct {
unsigned RXB0D70 :1;
unsigned RXB0D71 :1;
unsigned RXB0D72 :1;
unsigned RXB0D73 :1;
unsigned RXB0D74 :1;
unsigned RXB0D75 :1;
unsigned RXB0D76 :1;
unsigned RXB0D77 :1;
};
struct {
unsigned RB0D70 :1;
unsigned RB0D71 :1;
unsigned RB0D72 :1;
unsigned RB0D73 :1;
unsigned RB0D74 :1;
unsigned RB0D75 :1;
unsigned RB0D76 :1;
unsigned RB0D77 :1;
};
} RXB0D7bits_t;
extern volatile RXB0D7bits_t RXB0D7bits @ 0xF6D;

# 10705
extern volatile unsigned char CANSTAT @ 0xF6E;

asm("CANSTAT equ 0F6Eh");


typedef union {
struct {
unsigned :1;
unsigned ICODE0 :1;
unsigned ICODE1 :1;
unsigned ICODE2 :1;
unsigned :1;
unsigned OPMODE0 :1;
unsigned OPMODE1 :1;
unsigned OPMODE2 :1;
};
struct {
unsigned :1;
unsigned EICODE1 :1;
};
struct {
unsigned :2;
unsigned EICODE2 :1;
};
struct {
unsigned :3;
unsigned EICODE3 :1;
};
} CANSTATbits_t;
extern volatile CANSTATbits_t CANSTATbits @ 0xF6E;

# 10783
extern volatile unsigned char CANCON @ 0xF6F;

asm("CANCON equ 0F6Fh");


typedef union {
struct {
unsigned :1;
unsigned WIN0 :1;
unsigned WIN1 :1;
unsigned WIN2 :1;
unsigned ABAT :1;
unsigned REQOP0 :1;
unsigned REQOP1 :1;
unsigned REQOP2 :1;
};
struct {
unsigned :1;
unsigned FP1 :1;
};
struct {
unsigned :2;
unsigned FP2 :1;
};
struct {
unsigned :3;
unsigned FP3 :1;
};
} CANCONbits_t;
extern volatile CANCONbits_t CANCONbits @ 0xF6F;

# 10866
extern volatile unsigned char BRGCON1 @ 0xF70;

asm("BRGCON1 equ 0F70h");


typedef union {
struct {
unsigned BRP0 :1;
unsigned BRP1 :1;
unsigned BRP2 :1;
unsigned BRP3 :1;
unsigned BRP4 :1;
unsigned BRP5 :1;
unsigned SJW0 :1;
unsigned SJW1 :1;
};
} BRGCON1bits_t;
extern volatile BRGCON1bits_t BRGCON1bits @ 0xF70;

# 10927
extern volatile unsigned char BRGCON2 @ 0xF71;

asm("BRGCON2 equ 0F71h");


typedef union {
struct {
unsigned PRSEG0 :1;
unsigned PRSEG1 :1;
unsigned PRSEG2 :1;
unsigned SEG1PH0 :1;
unsigned SEG1PH1 :1;
unsigned SEG1PH2 :1;
unsigned SAM :1;
unsigned SEG2PHTS :1;
};
struct {
unsigned :7;
unsigned SEG2PHT :1;
};
} BRGCON2bits_t;
extern volatile BRGCON2bits_t BRGCON2bits @ 0xF71;

# 10997
extern volatile unsigned char BRGCON3 @ 0xF72;

asm("BRGCON3 equ 0F72h");


typedef union {
struct {
unsigned SEG2PH0 :1;
unsigned SEG2PH1 :1;
unsigned SEG2PH2 :1;
unsigned :3;
unsigned WAKFIL :1;
};
} BRGCON3bits_t;
extern volatile BRGCON3bits_t BRGCON3bits @ 0xF72;

# 11035
extern volatile unsigned char CIOCON @ 0xF73;

asm("CIOCON equ 0F73h");


typedef union {
struct {
unsigned :4;
unsigned CANCAP :1;
unsigned ENDRHI :1;
};
} CIOCONbits_t;
extern volatile CIOCONbits_t CIOCONbits @ 0xF73;

# 11061
extern volatile unsigned char COMSTAT @ 0xF74;

asm("COMSTAT equ 0F74h");


typedef union {
struct {
unsigned EWARN :1;
unsigned RXWARN :1;
unsigned TXWARN :1;
unsigned RXBP :1;
unsigned TXBP :1;
unsigned TXBO :1;
unsigned RXB1OVFL :1;
unsigned RXB0OVFL :1;
};
struct {
unsigned :6;
unsigned RX2OVFL :1;
unsigned RX1OVFL :1;
};
struct {
unsigned :7;
unsigned FIFOEMPTY :1;
};
struct {
unsigned :6;
unsigned RXBNOVFL :1;
};
} COMSTATbits_t;
extern volatile COMSTATbits_t COMSTATbits @ 0xF74;

# 11155
extern volatile unsigned char RXERRCNT @ 0xF75;

asm("RXERRCNT equ 0F75h");


typedef union {
struct {
unsigned REC0 :1;
unsigned REC1 :1;
unsigned REC2 :1;
unsigned REC3 :1;
unsigned REC4 :1;
unsigned REC5 :1;
unsigned REC6 :1;
unsigned REC7 :1;
};
} RXERRCNTbits_t;
extern volatile RXERRCNTbits_t RXERRCNTbits @ 0xF75;

# 11216
extern volatile unsigned char TXERRCNT @ 0xF76;

asm("TXERRCNT equ 0F76h");


typedef union {
struct {
unsigned TEC0 :1;
unsigned TEC1 :1;
unsigned TEC2 :1;
unsigned TEC3 :1;
unsigned TEC4 :1;
unsigned TEC5 :1;
unsigned TEC6 :1;
unsigned TEC7 :1;
};
} TXERRCNTbits_t;
extern volatile TXERRCNTbits_t TXERRCNTbits @ 0xF76;

# 11277
extern volatile unsigned char PORTA @ 0xF80;

asm("PORTA equ 0F80h");


typedef union {
struct {
unsigned RA0 :1;
unsigned RA1 :1;
unsigned RA2 :1;
unsigned RA3 :1;
unsigned RA4 :1;
unsigned RA5 :1;
unsigned RA6 :1;
};
struct {
unsigned AN0 :1;
unsigned AN1 :1;
unsigned AN2 :1;
unsigned AN3 :1;
unsigned :1;
unsigned AN4 :1;
unsigned OSC2 :1;
};
struct {
unsigned :5;
unsigned NOT_SS :1;
};
struct {
unsigned CVREF :1;
unsigned :1;
unsigned VREFM :1;
unsigned VREFP :1;
unsigned T0CKI :1;
unsigned nSS :1;
unsigned CLKO :1;
};
struct {
unsigned :5;
unsigned SS :1;
};
struct {
unsigned :5;
unsigned LVDIN :1;
};
struct {
unsigned :7;
unsigned RA7 :1;
};
struct {
unsigned :7;
unsigned RJPU :1;
};
struct {
unsigned ULPWUIN :1;
};
} PORTAbits_t;
extern volatile PORTAbits_t PORTAbits @ 0xF80;

# 11463
extern volatile unsigned char PORTB @ 0xF81;

asm("PORTB equ 0F81h");


typedef union {
struct {
unsigned RB0 :1;
unsigned RB1 :1;
unsigned RB2 :1;
unsigned RB3 :1;
unsigned RB4 :1;
unsigned RB5 :1;
unsigned RB6 :1;
unsigned RB7 :1;
};
struct {
unsigned INT0 :1;
unsigned INT1 :1;
unsigned CANTX :1;
unsigned CANRX :1;
unsigned :1;
unsigned PGM :1;
unsigned PGC :1;
unsigned PGD :1;
};
struct {
unsigned :3;
unsigned CCP2_PA2 :1;
};
} PORTBbits_t;
extern volatile PORTBbits_t PORTBbits @ 0xF81;

# 11578
extern volatile unsigned char PORTC @ 0xF82;

asm("PORTC equ 0F82h");


typedef union {
struct {
unsigned RC0 :1;
unsigned RC1 :1;
unsigned RC2 :1;
unsigned RC3 :1;
unsigned RC4 :1;
unsigned RC5 :1;
unsigned RC6 :1;
unsigned RC7 :1;
};
struct {
unsigned T1OSO :1;
unsigned T1OSI :1;
unsigned :1;
unsigned SCK :1;
unsigned SDI :1;
unsigned SDO :1;
unsigned TX :1;
unsigned RX :1;
};
struct {
unsigned T1CKI :1;
unsigned :1;
unsigned CCP1 :1;
unsigned SCL :1;
unsigned SDA :1;
unsigned :1;
unsigned CK :1;
unsigned DT :1;
};
struct {
unsigned :1;
unsigned CCP2 :1;
};
struct {
unsigned :2;
unsigned PA1 :1;
};
struct {
unsigned :1;
unsigned PA2 :1;
};
} PORTCbits_t;
extern volatile PORTCbits_t PORTCbits @ 0xF82;

# 11751
extern volatile unsigned char PORTD @ 0xF83;

asm("PORTD equ 0F83h");


typedef union {
struct {
unsigned RD0 :1;
unsigned RD1 :1;
unsigned RD2 :1;
unsigned RD3 :1;
unsigned RD4 :1;
unsigned RD5 :1;
unsigned RD6 :1;
unsigned RD7 :1;
};
struct {
unsigned C1INP :1;
unsigned C1INM :1;
unsigned C2INP :1;
unsigned C2INM :1;
unsigned P1A :1;
unsigned P1B :1;
unsigned P1C :1;
unsigned P1D :1;
};
struct {
unsigned :4;
unsigned ECCP1 :1;
};
struct {
unsigned PSP0 :1;
unsigned PSP1 :1;
unsigned PSP2 :1;
unsigned PSP3 :1;
unsigned PSP4 :1;
unsigned PSP5 :1;
unsigned PSP6 :1;
unsigned PSP7 :1;
};
struct {
unsigned :7;
unsigned SS2 :1;
};
} PORTDbits_t;
extern volatile PORTDbits_t PORTDbits @ 0xF83;

# 11930
extern volatile unsigned char PORTE @ 0xF84;

asm("PORTE equ 0F84h");


typedef union {
struct {
unsigned RE0 :1;
unsigned RE1 :1;
unsigned RE2 :1;
};
struct {
unsigned AN5 :1;
unsigned AN6 :1;
unsigned AN7 :1;
};
struct {
unsigned NOT_RD :1;
};
struct {
unsigned :1;
unsigned NOT_WR :1;
};
struct {
unsigned :2;
unsigned NOT_CS :1;
};
struct {
unsigned nRD :1;
unsigned nWR :1;
unsigned nCS :1;
};
struct {
unsigned RD :1;
unsigned WR :1;
unsigned CS :1;
};
struct {
unsigned :2;
unsigned CCP10 :1;
};
struct {
unsigned :7;
unsigned CCP2E :1;
};
struct {
unsigned :6;
unsigned CCP6E :1;
};
struct {
unsigned :5;
unsigned CCP7E :1;
};
struct {
unsigned :4;
unsigned CCP8E :1;
};
struct {
unsigned :3;
unsigned CCP9E :1;
};
struct {
unsigned :7;
unsigned PA2E :1;
};
struct {
unsigned :6;
unsigned PB1E :1;
};
struct {
unsigned :2;
unsigned PB2 :1;
};
struct {
unsigned :4;
unsigned PB3E :1;
};
struct {
unsigned :5;
unsigned PC1E :1;
};
struct {
unsigned :1;
unsigned PC2 :1;
};
struct {
unsigned :3;
unsigned PC3E :1;
};
struct {
unsigned PD2 :1;
};
struct {
unsigned RDE :1;
};
struct {
unsigned :3;
unsigned RE3 :1;
};
struct {
unsigned :4;
unsigned RE4 :1;
};
struct {
unsigned :5;
unsigned RE5 :1;
};
struct {
unsigned :6;
unsigned RE6 :1;
};
struct {
unsigned :7;
unsigned RE7 :1;
};
struct {
unsigned :1;
unsigned WRE :1;
};
} PORTEbits_t;
extern volatile PORTEbits_t PORTEbits @ 0xF84;

# 12234
extern volatile unsigned char LATA @ 0xF89;

asm("LATA equ 0F89h");


typedef union {
struct {
unsigned LATA0 :1;
unsigned LATA1 :1;
unsigned LATA2 :1;
unsigned LATA3 :1;
unsigned LATA4 :1;
unsigned LATA5 :1;
unsigned LATA6 :1;
};
struct {
unsigned LA0 :1;
};
struct {
unsigned :1;
unsigned LA1 :1;
};
struct {
unsigned :2;
unsigned LA2 :1;
};
struct {
unsigned :3;
unsigned LA3 :1;
};
struct {
unsigned :4;
unsigned LA4 :1;
};
struct {
unsigned :5;
unsigned LA5 :1;
};
struct {
unsigned :6;
unsigned LA6 :1;
};
struct {
unsigned :7;
unsigned LA7 :1;
};
struct {
unsigned :7;
unsigned LATA7 :1;
};
} LATAbits_t;
extern volatile LATAbits_t LATAbits @ 0xF89;

# 12369
extern volatile unsigned char LATB @ 0xF8A;

asm("LATB equ 0F8Ah");


typedef union {
struct {
unsigned LATB0 :1;
unsigned LATB1 :1;
unsigned LATB2 :1;
unsigned LATB3 :1;
unsigned LATB4 :1;
unsigned LATB5 :1;
unsigned LATB6 :1;
unsigned LATB7 :1;
};
struct {
unsigned LB0 :1;
};
struct {
unsigned :1;
unsigned LB1 :1;
};
struct {
unsigned :2;
unsigned LB2 :1;
};
struct {
unsigned :3;
unsigned LB3 :1;
};
struct {
unsigned :4;
unsigned LB4 :1;
};
struct {
unsigned :5;
unsigned LB5 :1;
};
struct {
unsigned :6;
unsigned LB6 :1;
};
struct {
unsigned :7;
unsigned LB7 :1;
};
} LATBbits_t;
extern volatile LATBbits_t LATBbits @ 0xF8A;

# 12501
extern volatile unsigned char LATC @ 0xF8B;

asm("LATC equ 0F8Bh");


typedef union {
struct {
unsigned LATC0 :1;
unsigned LATC1 :1;
unsigned LATC2 :1;
unsigned LATC3 :1;
unsigned LATC4 :1;
unsigned LATC5 :1;
unsigned LATC6 :1;
unsigned LATC7 :1;
};
struct {
unsigned LC0 :1;
};
struct {
unsigned :1;
unsigned LC1 :1;
};
struct {
unsigned :2;
unsigned LC2 :1;
};
struct {
unsigned :3;
unsigned LC3 :1;
};
struct {
unsigned :4;
unsigned LC4 :1;
};
struct {
unsigned :5;
unsigned LC5 :1;
};
struct {
unsigned :6;
unsigned LC6 :1;
};
struct {
unsigned :7;
unsigned LC7 :1;
};
} LATCbits_t;
extern volatile LATCbits_t LATCbits @ 0xF8B;

# 12633
extern volatile unsigned char LATD @ 0xF8C;

asm("LATD equ 0F8Ch");


typedef union {
struct {
unsigned LATD0 :1;
unsigned LATD1 :1;
unsigned LATD2 :1;
unsigned LATD3 :1;
unsigned LATD4 :1;
unsigned LATD5 :1;
unsigned LATD6 :1;
unsigned LATD7 :1;
};
struct {
unsigned LD0 :1;
};
struct {
unsigned :1;
unsigned LD1 :1;
};
struct {
unsigned :2;
unsigned LD2 :1;
};
struct {
unsigned :3;
unsigned LD3 :1;
};
struct {
unsigned :4;
unsigned LD4 :1;
};
struct {
unsigned :5;
unsigned LD5 :1;
};
struct {
unsigned :6;
unsigned LD6 :1;
};
struct {
unsigned :7;
unsigned LD7 :1;
};
} LATDbits_t;
extern volatile LATDbits_t LATDbits @ 0xF8C;

# 12765
extern volatile unsigned char LATE @ 0xF8D;

asm("LATE equ 0F8Dh");


typedef union {
struct {
unsigned LATE0 :1;
unsigned LATE1 :1;
unsigned LATE2 :1;
};
struct {
unsigned LE0 :1;
};
struct {
unsigned :1;
unsigned LE1 :1;
};
struct {
unsigned :2;
unsigned LE2 :1;
};
struct {
unsigned :3;
unsigned LE3 :1;
};
struct {
unsigned :4;
unsigned LE4 :1;
};
struct {
unsigned :5;
unsigned LE5 :1;
};
struct {
unsigned :6;
unsigned LE6 :1;
};
struct {
unsigned :7;
unsigned LE7 :1;
};
} LATEbits_t;
extern volatile LATEbits_t LATEbits @ 0xF8D;

# 12867
extern volatile unsigned char TRISA @ 0xF92;

asm("TRISA equ 0F92h");


extern volatile unsigned char DDRA @ 0xF92;

asm("DDRA equ 0F92h");


typedef union {
struct {
unsigned TRISA0 :1;
unsigned TRISA1 :1;
unsigned TRISA2 :1;
unsigned TRISA3 :1;
unsigned TRISA4 :1;
unsigned TRISA5 :1;
unsigned TRISA6 :1;
};
struct {
unsigned RA0 :1;
unsigned RA1 :1;
unsigned RA2 :1;
unsigned RA3 :1;
unsigned RA4 :1;
unsigned RA5 :1;
unsigned RA6 :1;
};
} TRISAbits_t;
extern volatile TRISAbits_t TRISAbits @ 0xF92;

# 12970
typedef union {
struct {
unsigned TRISA0 :1;
unsigned TRISA1 :1;
unsigned TRISA2 :1;
unsigned TRISA3 :1;
unsigned TRISA4 :1;
unsigned TRISA5 :1;
unsigned TRISA6 :1;
};
struct {
unsigned RA0 :1;
unsigned RA1 :1;
unsigned RA2 :1;
unsigned RA3 :1;
unsigned RA4 :1;
unsigned RA5 :1;
unsigned RA6 :1;
};
} DDRAbits_t;
extern volatile DDRAbits_t DDRAbits @ 0xF92;

# 13064
extern volatile unsigned char TRISB @ 0xF93;

asm("TRISB equ 0F93h");


extern volatile unsigned char DDRB @ 0xF93;

asm("DDRB equ 0F93h");


typedef union {
struct {
unsigned TRISB0 :1;
unsigned TRISB1 :1;
unsigned TRISB2 :1;
unsigned TRISB3 :1;
unsigned TRISB4 :1;
unsigned TRISB5 :1;
unsigned TRISB6 :1;
unsigned TRISB7 :1;
};
struct {
unsigned RB0 :1;
unsigned RB1 :1;
unsigned RB2 :1;
unsigned RB3 :1;
unsigned RB4 :1;
unsigned RB5 :1;
unsigned RB6 :1;
unsigned RB7 :1;
};
} TRISBbits_t;
extern volatile TRISBbits_t TRISBbits @ 0xF93;

# 13179
typedef union {
struct {
unsigned TRISB0 :1;
unsigned TRISB1 :1;
unsigned TRISB2 :1;
unsigned TRISB3 :1;
unsigned TRISB4 :1;
unsigned TRISB5 :1;
unsigned TRISB6 :1;
unsigned TRISB7 :1;
};
struct {
unsigned RB0 :1;
unsigned RB1 :1;
unsigned RB2 :1;
unsigned RB3 :1;
unsigned RB4 :1;
unsigned RB5 :1;
unsigned RB6 :1;
unsigned RB7 :1;
};
} DDRBbits_t;
extern volatile DDRBbits_t DDRBbits @ 0xF93;

# 13285
extern volatile unsigned char TRISC @ 0xF94;

asm("TRISC equ 0F94h");


extern volatile unsigned char DDRC @ 0xF94;

asm("DDRC equ 0F94h");


typedef union {
struct {
unsigned TRISC0 :1;
unsigned TRISC1 :1;
unsigned TRISC2 :1;
unsigned TRISC3 :1;
unsigned TRISC4 :1;
unsigned TRISC5 :1;
unsigned TRISC6 :1;
unsigned TRISC7 :1;
};
struct {
unsigned RC0 :1;
unsigned RC1 :1;
unsigned RC2 :1;
unsigned RC3 :1;
unsigned RC4 :1;
unsigned RC5 :1;
unsigned RC6 :1;
unsigned RC7 :1;
};
} TRISCbits_t;
extern volatile TRISCbits_t TRISCbits @ 0xF94;

# 13400
typedef union {
struct {
unsigned TRISC0 :1;
unsigned TRISC1 :1;
unsigned TRISC2 :1;
unsigned TRISC3 :1;
unsigned TRISC4 :1;
unsigned TRISC5 :1;
unsigned TRISC6 :1;
unsigned TRISC7 :1;
};
struct {
unsigned RC0 :1;
unsigned RC1 :1;
unsigned RC2 :1;
unsigned RC3 :1;
unsigned RC4 :1;
unsigned RC5 :1;
unsigned RC6 :1;
unsigned RC7 :1;
};
} DDRCbits_t;
extern volatile DDRCbits_t DDRCbits @ 0xF94;

# 13506
extern volatile unsigned char TRISD @ 0xF95;

asm("TRISD equ 0F95h");


extern volatile unsigned char DDRD @ 0xF95;

asm("DDRD equ 0F95h");


typedef union {
struct {
unsigned TRISD0 :1;
unsigned TRISD1 :1;
unsigned TRISD2 :1;
unsigned TRISD3 :1;
unsigned TRISD4 :1;
unsigned TRISD5 :1;
unsigned TRISD6 :1;
unsigned TRISD7 :1;
};
struct {
unsigned RD0 :1;
unsigned RD1 :1;
unsigned RD2 :1;
unsigned RD3 :1;
unsigned RD4 :1;
unsigned RD5 :1;
unsigned RD6 :1;
unsigned RD7 :1;
};
} TRISDbits_t;
extern volatile TRISDbits_t TRISDbits @ 0xF95;

# 13621
typedef union {
struct {
unsigned TRISD0 :1;
unsigned TRISD1 :1;
unsigned TRISD2 :1;
unsigned TRISD3 :1;
unsigned TRISD4 :1;
unsigned TRISD5 :1;
unsigned TRISD6 :1;
unsigned TRISD7 :1;
};
struct {
unsigned RD0 :1;
unsigned RD1 :1;
unsigned RD2 :1;
unsigned RD3 :1;
unsigned RD4 :1;
unsigned RD5 :1;
unsigned RD6 :1;
unsigned RD7 :1;
};
} DDRDbits_t;
extern volatile DDRDbits_t DDRDbits @ 0xF95;

# 13727
extern volatile unsigned char TRISE @ 0xF96;

asm("TRISE equ 0F96h");


extern volatile unsigned char DDRE @ 0xF96;

asm("DDRE equ 0F96h");


typedef union {
struct {
unsigned TRISE0 :1;
unsigned TRISE1 :1;
unsigned TRISE2 :1;
unsigned :1;
unsigned PSPMODE :1;
unsigned IBOV :1;
unsigned OBF :1;
unsigned IBF :1;
};
struct {
unsigned RE0 :1;
unsigned RE1 :1;
unsigned RE2 :1;
};
struct {
unsigned DDRE0 :1;
unsigned DDRE1 :1;
unsigned DDRE2 :1;
};
} TRISEbits_t;
extern volatile TRISEbits_t TRISEbits @ 0xF96;

# 13827
typedef union {
struct {
unsigned TRISE0 :1;
unsigned TRISE1 :1;
unsigned TRISE2 :1;
unsigned :1;
unsigned PSPMODE :1;
unsigned IBOV :1;
unsigned OBF :1;
unsigned IBF :1;
};
struct {
unsigned RE0 :1;
unsigned RE1 :1;
unsigned RE2 :1;
};
struct {
unsigned DDRE0 :1;
unsigned DDRE1 :1;
unsigned DDRE2 :1;
};
} DDREbits_t;
extern volatile DDREbits_t DDREbits @ 0xF96;

# 13918
extern volatile unsigned char PIE1 @ 0xF9D;

asm("PIE1 equ 0F9Dh");


typedef union {
struct {
unsigned TMR1IE :1;
unsigned TMR2IE :1;
unsigned CCP1IE :1;
unsigned SSPIE :1;
unsigned TXIE :1;
unsigned RCIE :1;
unsigned ADIE :1;
unsigned PSPIE :1;
};
struct {
unsigned :5;
unsigned RC1IE :1;
};
struct {
unsigned :4;
unsigned TX1IE :1;
};
} PIE1bits_t;
extern volatile PIE1bits_t PIE1bits @ 0xF9D;

# 13997
extern volatile unsigned char PIR1 @ 0xF9E;

asm("PIR1 equ 0F9Eh");


typedef union {
struct {
unsigned TMR1IF :1;
unsigned TMR2IF :1;
unsigned CCP1IF :1;
unsigned SSPIF :1;
unsigned TXIF :1;
unsigned RCIF :1;
unsigned ADIF :1;
unsigned PSPIF :1;
};
struct {
unsigned :5;
unsigned RC1IF :1;
};
struct {
unsigned :4;
unsigned TX1IF :1;
};
} PIR1bits_t;
extern volatile PIR1bits_t PIR1bits @ 0xF9E;

# 14076
extern volatile unsigned char IPR1 @ 0xF9F;

asm("IPR1 equ 0F9Fh");


typedef union {
struct {
unsigned TMR1IP :1;
unsigned TMR2IP :1;
unsigned CCP1IP :1;
unsigned SSPIP :1;
unsigned TXIP :1;
unsigned RCIP :1;
unsigned ADIP :1;
unsigned PSPIP :1;
};
struct {
unsigned :5;
unsigned RC1IP :1;
};
struct {
unsigned :4;
unsigned TX1IP :1;
};
} IPR1bits_t;
extern volatile IPR1bits_t IPR1bits @ 0xF9F;

# 14155
extern volatile unsigned char PIE2 @ 0xFA0;

asm("PIE2 equ 0FA0h");


typedef union {
struct {
unsigned ECCP1IE :1;
unsigned TMR3IE :1;
unsigned LVDIE :1;
unsigned BCLIE :1;
unsigned EEIE :1;
unsigned :1;
unsigned CMIE :1;
};
} PIE2bits_t;
extern volatile PIE2bits_t PIE2bits @ 0xFA0;

# 14205
extern volatile unsigned char PIR2 @ 0xFA1;

asm("PIR2 equ 0FA1h");


typedef union {
struct {
unsigned ECCP1IF :1;
unsigned TMR3IF :1;
unsigned LVDIF :1;
unsigned BCLIF :1;
unsigned EEIF :1;
unsigned :1;
unsigned CMIF :1;
};
} PIR2bits_t;
extern volatile PIR2bits_t PIR2bits @ 0xFA1;

# 14255
extern volatile unsigned char IPR2 @ 0xFA2;

asm("IPR2 equ 0FA2h");


typedef union {
struct {
unsigned ECCP1IP :1;
unsigned TMR3IP :1;
unsigned LVDIP :1;
unsigned BCLIP :1;
unsigned EEIP :1;
unsigned :1;
unsigned CMIP :1;
};
} IPR2bits_t;
extern volatile IPR2bits_t IPR2bits @ 0xFA2;

# 14305
extern volatile unsigned char PIE3 @ 0xFA3;

asm("PIE3 equ 0FA3h");


typedef union {
struct {
unsigned RXB0IE :1;
unsigned RXB1IE :1;
unsigned TXB0IE :1;
unsigned TXB1IE :1;
unsigned TXB2IE :1;
unsigned ERRIE :1;
unsigned WAKIE :1;
unsigned IRXIE :1;
};
struct {
unsigned RX0IE :1;
unsigned RX1IE :1;
unsigned TX0IE :1;
unsigned TX1IE :1;
unsigned TX2IE :1;
unsigned :2;
unsigned IVRE :1;
};
struct {
unsigned :1;
unsigned RXBNIE :1;
};
struct {
unsigned :4;
unsigned TXBNIE :1;
};
} PIE3bits_t;
extern volatile PIE3bits_t PIE3bits @ 0xFA3;

# 14423
extern volatile unsigned char PIR3 @ 0xFA4;

asm("PIR3 equ 0FA4h");


typedef union {
struct {
unsigned RXB0IF :1;
unsigned RXB1IF :1;
unsigned TXB0IF :1;
unsigned TXB1IF :1;
unsigned TXB2IF :1;
unsigned ERRIF :1;
unsigned WAKIF :1;
unsigned IRXIF :1;
};
struct {
unsigned RX0IF :1;
unsigned RX1IF :1;
unsigned TX0IF :1;
unsigned TX1IF :1;
unsigned TX2IF :1;
unsigned :2;
unsigned IVRF :1;
};
struct {
unsigned :1;
unsigned RXBNIF :1;
};
struct {
unsigned :4;
unsigned TXBNIF :1;
};
} PIR3bits_t;
extern volatile PIR3bits_t PIR3bits @ 0xFA4;

# 14541
extern volatile unsigned char IPR3 @ 0xFA5;

asm("IPR3 equ 0FA5h");


typedef union {
struct {
unsigned RXB0IP :1;
unsigned RXB1IP :1;
unsigned TXB0IP :1;
unsigned TXB1IP :1;
unsigned TXB2IP :1;
unsigned ERRIP :1;
unsigned WAKIP :1;
unsigned IRXIP :1;
};
struct {
unsigned :7;
unsigned IVRP :1;
};
struct {
unsigned :1;
unsigned RXBNIP :1;
};
struct {
unsigned :4;
unsigned TXBNIP :1;
};
} IPR3bits_t;
extern volatile IPR3bits_t IPR3bits @ 0xFA5;

# 14629
extern volatile unsigned char EECON1 @ 0xFA6;

asm("EECON1 equ 0FA6h");


typedef union {
struct {
unsigned RD :1;
unsigned WR :1;
unsigned WREN :1;
unsigned WRERR :1;
unsigned FREE :1;
unsigned :1;
unsigned CFGS :1;
unsigned EEPGD :1;
};
struct {
unsigned :6;
unsigned EEFS :1;
};
} EECON1bits_t;
extern volatile EECON1bits_t EECON1bits @ 0xFA6;

# 14694
extern volatile unsigned char EECON2 @ 0xFA7;

asm("EECON2 equ 0FA7h");



extern volatile unsigned char EEDATA @ 0xFA8;

asm("EEDATA equ 0FA8h");



extern volatile unsigned char EEADR @ 0xFA9;

asm("EEADR equ 0FA9h");



extern volatile unsigned char RCSTA @ 0xFAB;

asm("RCSTA equ 0FABh");


extern volatile unsigned char RCSTA1 @ 0xFAB;

asm("RCSTA1 equ 0FABh");


typedef union {
struct {
unsigned RX9D :1;
unsigned OERR :1;
unsigned FERR :1;
unsigned ADDEN :1;
unsigned CREN :1;
unsigned SREN :1;
unsigned RX9 :1;
unsigned SPEN :1;
};
struct {
unsigned RCD8 :1;
unsigned :5;
unsigned RC9 :1;
};
struct {
unsigned :6;
unsigned RC8_9 :1;
};
struct {
unsigned :6;
unsigned NOT_RC8 :1;
};
struct {
unsigned :6;
unsigned nRC8 :1;
};
struct {
unsigned :5;
unsigned SRENA :1;
};
} RCSTAbits_t;
extern volatile RCSTAbits_t RCSTAbits @ 0xFAB;

# 14828
typedef union {
struct {
unsigned RX9D :1;
unsigned OERR :1;
unsigned FERR :1;
unsigned ADDEN :1;
unsigned CREN :1;
unsigned SREN :1;
unsigned RX9 :1;
unsigned SPEN :1;
};
struct {
unsigned RCD8 :1;
unsigned :5;
unsigned RC9 :1;
};
struct {
unsigned :6;
unsigned RC8_9 :1;
};
struct {
unsigned :6;
unsigned NOT_RC8 :1;
};
struct {
unsigned :6;
unsigned nRC8 :1;
};
struct {
unsigned :5;
unsigned SRENA :1;
};
} RCSTA1bits_t;
extern volatile RCSTA1bits_t RCSTA1bits @ 0xFAB;

# 14935
extern volatile unsigned char TXSTA @ 0xFAC;

asm("TXSTA equ 0FACh");


extern volatile unsigned char TXSTA1 @ 0xFAC;

asm("TXSTA1 equ 0FACh");


typedef union {
struct {
unsigned TX9D :1;
unsigned TRMT :1;
unsigned BRGH :1;
unsigned :1;
unsigned SYNC :1;
unsigned TXEN :1;
unsigned TX9 :1;
unsigned CSRC :1;
};
struct {
unsigned TXD8 :1;
unsigned :5;
unsigned TX8_9 :1;
};
struct {
unsigned :6;
unsigned NOT_TX8 :1;
};
struct {
unsigned :6;
unsigned nTX8 :1;
};
struct {
unsigned :2;
unsigned BRGH1 :1;
};
struct {
unsigned :7;
unsigned CSRC1 :1;
};
struct {
unsigned :4;
unsigned SYNC1 :1;
};
struct {
unsigned :1;
unsigned TRMT1 :1;
};
struct {
unsigned :6;
unsigned TX91 :1;
};
struct {
unsigned TX9D1 :1;
};
struct {
unsigned :5;
unsigned TXEN1 :1;
};
} TXSTAbits_t;
extern volatile TXSTAbits_t TXSTAbits @ 0xFAC;

# 15090
typedef union {
struct {
unsigned TX9D :1;
unsigned TRMT :1;
unsigned BRGH :1;
unsigned :1;
unsigned SYNC :1;
unsigned TXEN :1;
unsigned TX9 :1;
unsigned CSRC :1;
};
struct {
unsigned TXD8 :1;
unsigned :5;
unsigned TX8_9 :1;
};
struct {
unsigned :6;
unsigned NOT_TX8 :1;
};
struct {
unsigned :6;
unsigned nTX8 :1;
};
struct {
unsigned :2;
unsigned BRGH1 :1;
};
struct {
unsigned :7;
unsigned CSRC1 :1;
};
struct {
unsigned :4;
unsigned SYNC1 :1;
};
struct {
unsigned :1;
unsigned TRMT1 :1;
};
struct {
unsigned :6;
unsigned TX91 :1;
};
struct {
unsigned TX9D1 :1;
};
struct {
unsigned :5;
unsigned TXEN1 :1;
};
} TXSTA1bits_t;
extern volatile TXSTA1bits_t TXSTA1bits @ 0xFAC;

# 15236
extern volatile unsigned char TXREG @ 0xFAD;

asm("TXREG equ 0FADh");


extern volatile unsigned char TXREG1 @ 0xFAD;

asm("TXREG1 equ 0FADh");



extern volatile unsigned char RCREG @ 0xFAE;

asm("RCREG equ 0FAEh");


extern volatile unsigned char RCREG1 @ 0xFAE;

asm("RCREG1 equ 0FAEh");



extern volatile unsigned char SPBRG @ 0xFAF;

asm("SPBRG equ 0FAFh");


extern volatile unsigned char SPBRG1 @ 0xFAF;

asm("SPBRG1 equ 0FAFh");



extern volatile unsigned char T3CON @ 0xFB1;

asm("T3CON equ 0FB1h");


typedef union {
struct {
unsigned :2;
unsigned NOT_T3SYNC :1;
};
struct {
unsigned TMR3ON :1;
unsigned TMR3CS :1;
unsigned nT3SYNC :1;
unsigned T3CCP1 :1;
unsigned T3CKPS :2;
unsigned T3ECCP1 :1;
unsigned RD16 :1;
};
struct {
unsigned :2;
unsigned T3INSYNC :1;
unsigned :1;
unsigned T3CKPS0 :1;
unsigned T3CKPS1 :1;
};
struct {
unsigned :2;
unsigned T3SYNC :1;
};
struct {
unsigned :7;
unsigned RD163 :1;
};
struct {
unsigned :3;
unsigned SOSCEN3 :1;
};
struct {
unsigned :7;
unsigned T3RD16 :1;
};
} T3CONbits_t;
extern volatile T3CONbits_t T3CONbits @ 0xFB1;

# 15391
extern volatile unsigned short TMR3 @ 0xFB2;

asm("TMR3 equ 0FB2h");



extern volatile unsigned char TMR3L @ 0xFB2;

asm("TMR3L equ 0FB2h");



extern volatile unsigned char TMR3H @ 0xFB3;

asm("TMR3H equ 0FB3h");



extern volatile unsigned char CMCON @ 0xFB4;

asm("CMCON equ 0FB4h");


typedef union {
struct {
unsigned CM :3;
unsigned CIS :1;
unsigned C1INV :1;
unsigned C2INV :1;
unsigned C1OUT :1;
unsigned C2OUT :1;
};
struct {
unsigned CM0 :1;
unsigned CM1 :1;
unsigned CM2 :1;
};
struct {
unsigned CMEN0 :1;
};
struct {
unsigned :1;
unsigned CMEN1 :1;
};
struct {
unsigned :2;
unsigned CMEN2 :1;
};
} CMCONbits_t;
extern volatile CMCONbits_t CMCONbits @ 0xFB4;

# 15504
extern volatile unsigned char CVRCON @ 0xFB5;

asm("CVRCON equ 0FB5h");


typedef union {
struct {
unsigned CVR :4;
unsigned CVRSS :1;
unsigned CVRR :1;
unsigned CVROE :1;
unsigned CVREN :1;
};
struct {
unsigned CVR0 :1;
unsigned CVR1 :1;
unsigned CVR2 :1;
unsigned CVR3 :1;
};
struct {
unsigned :6;
unsigned CVROEN :1;
};
} CVRCONbits_t;
extern volatile CVRCONbits_t CVRCONbits @ 0xFB5;

# 15582
extern volatile unsigned char ECCPAS @ 0xFB6;

asm("ECCPAS equ 0FB6h");


typedef union {
struct {
unsigned PSSBD :2;
unsigned PSSAC :2;
unsigned ECCPAS :3;
unsigned ECCPASE :1;
};
struct {
unsigned PSSBD0 :1;
unsigned PSSBD1 :1;
unsigned PSSAC0 :1;
unsigned PSSAC1 :1;
unsigned ECCPAS0 :1;
unsigned ECCPAS1 :1;
unsigned ECCPAS2 :1;
};
} ECCPASbits_t;
extern volatile ECCPASbits_t ECCPASbits @ 0xFB6;

# 15663
extern volatile unsigned char ECCP1DEL @ 0xFB7;

asm("ECCP1DEL equ 0FB7h");


typedef union {
struct {
unsigned EPDC :8;
};
struct {
unsigned EPDC0 :1;
unsigned EPDC1 :1;
unsigned EPDC2 :1;
unsigned EPDC3 :1;
unsigned EPDC4 :1;
unsigned EPDC5 :1;
unsigned EPDC6 :1;
unsigned EPDC7 :1;
};
} ECCP1DELbits_t;
extern volatile ECCP1DELbits_t ECCP1DELbits @ 0xFB7;

# 15732
extern volatile unsigned char ECCP1CON @ 0xFBA;

asm("ECCP1CON equ 0FBAh");


typedef union {
struct {
unsigned ECCP1M :4;
unsigned EDC1B :2;
unsigned EPWM1M :2;
};
struct {
unsigned ECCP1M0 :1;
unsigned ECCP1M1 :1;
unsigned ECCP1M2 :1;
unsigned ECCP1M3 :1;
unsigned EDC1B0 :1;
unsigned EDC1B1 :1;
unsigned EPWM1M0 :1;
unsigned EPWM1M1 :1;
};
struct {
unsigned :4;
unsigned EDC2B0 :1;
unsigned EDC2B1 :1;
};
} ECCP1CONbits_t;
extern volatile ECCP1CONbits_t ECCP1CONbits @ 0xFBA;

# 15828
extern volatile unsigned short ECCPR1 @ 0xFBB;

asm("ECCPR1 equ 0FBBh");



extern volatile unsigned char ECCPR1L @ 0xFBB;

asm("ECCPR1L equ 0FBBh");



extern volatile unsigned char ECCPR1H @ 0xFBC;

asm("ECCPR1H equ 0FBCh");



extern volatile unsigned char CCP1CON @ 0xFBD;

asm("CCP1CON equ 0FBDh");


typedef union {
struct {
unsigned CCP1M :4;
unsigned DC1B :2;
};
struct {
unsigned CCP1M0 :1;
unsigned CCP1M1 :1;
unsigned CCP1M2 :1;
unsigned CCP1M3 :1;
unsigned DC1B0 :1;
unsigned DC1B1 :1;
};
struct {
unsigned :4;
unsigned CCP1Y :1;
unsigned CCP1X :1;
};
} CCP1CONbits_t;
extern volatile CCP1CONbits_t CCP1CONbits @ 0xFBD;

# 15924
extern volatile unsigned short CCPR1 @ 0xFBE;

asm("CCPR1 equ 0FBEh");



extern volatile unsigned char CCPR1L @ 0xFBE;

asm("CCPR1L equ 0FBEh");



extern volatile unsigned char CCPR1H @ 0xFBF;

asm("CCPR1H equ 0FBFh");



extern volatile unsigned char ADCON1 @ 0xFC1;

asm("ADCON1 equ 0FC1h");


typedef union {
struct {
unsigned PCFG :4;
unsigned :2;
unsigned ADCS2 :1;
unsigned ADFM :1;
};
struct {
unsigned PCFG0 :1;
unsigned PCFG1 :1;
unsigned PCFG2 :1;
unsigned PCFG3 :1;
};
struct {
unsigned :3;
unsigned CHSN3 :1;
};
} ADCON1bits_t;
extern volatile ADCON1bits_t ADCON1bits @ 0xFC1;

# 16009
extern volatile unsigned char ADCON0 @ 0xFC2;

asm("ADCON0 equ 0FC2h");


typedef union {
struct {
unsigned :2;
unsigned GO_NOT_DONE :1;
};
struct {
unsigned ADON :1;
unsigned :1;
unsigned GO_nDONE :1;
unsigned CHS :3;
unsigned ADCS :2;
};
struct {
unsigned :2;
unsigned GO_NOT_DONE :1;
};
struct {
unsigned :2;
unsigned DONE :1;
unsigned CHS0 :1;
unsigned CHS1 :1;
unsigned CHS2 :1;
unsigned ADCS0 :1;
unsigned ADCS1 :1;
};
struct {
unsigned :2;
unsigned GO_DONE :1;
};
struct {
unsigned :2;
unsigned GO :1;
};
struct {
unsigned :2;
unsigned NOT_DONE :1;
};
struct {
unsigned :2;
unsigned nDONE :1;
};
struct {
unsigned :7;
unsigned ADCAL :1;
};
struct {
unsigned :2;
unsigned GODONE :1;
};
} ADCON0bits_t;
extern volatile ADCON0bits_t ADCON0bits @ 0xFC2;

# 16153
extern volatile unsigned short ADRES @ 0xFC3;

asm("ADRES equ 0FC3h");



extern volatile unsigned char ADRESL @ 0xFC3;

asm("ADRESL equ 0FC3h");



extern volatile unsigned char ADRESH @ 0xFC4;

asm("ADRESH equ 0FC4h");



extern volatile unsigned char SSPCON2 @ 0xFC5;

asm("SSPCON2 equ 0FC5h");


typedef union {
struct {
unsigned SEN :1;
unsigned RSEN :1;
unsigned PEN :1;
unsigned RCEN :1;
unsigned ACKEN :1;
unsigned ACKDT :1;
unsigned ACKSTAT :1;
unsigned GCEN :1;
};
} SSPCON2bits_t;
extern volatile SSPCON2bits_t SSPCON2bits @ 0xFC5;

# 16232
extern volatile unsigned char SSPCON1 @ 0xFC6;

asm("SSPCON1 equ 0FC6h");


typedef union {
struct {
unsigned SSPM :4;
unsigned CKP :1;
unsigned SSPEN :1;
unsigned SSPOV :1;
unsigned WCOL :1;
};
struct {
unsigned SSPM0 :1;
unsigned SSPM1 :1;
unsigned SSPM2 :1;
unsigned SSPM3 :1;
};
} SSPCON1bits_t;
extern volatile SSPCON1bits_t SSPCON1bits @ 0xFC6;

# 16301
extern volatile unsigned char SSPSTAT @ 0xFC7;

asm("SSPSTAT equ 0FC7h");


typedef union {
struct {
unsigned :2;
unsigned R_NOT_W :1;
};
struct {
unsigned :5;
unsigned D_NOT_A :1;
};
struct {
unsigned BF :1;
unsigned UA :1;
unsigned R_nW :1;
unsigned S :1;
unsigned P :1;
unsigned D_nA :1;
unsigned CKE :1;
unsigned SMP :1;
};
struct {
unsigned :2;
unsigned R_NOT_W :1;
};
struct {
unsigned :5;
unsigned D_NOT_A :1;
};
struct {
unsigned :2;
unsigned I2C_READ :1;
unsigned I2C_START :1;
unsigned I2C_STOP :1;
unsigned I2C_DATA :1;
};
struct {
unsigned :2;
unsigned R :1;
unsigned :2;
unsigned D :1;
};
struct {
unsigned :2;
unsigned READ_WRITE :1;
unsigned :2;
unsigned DATA_ADDRESS :1;
};
struct {
unsigned :2;
unsigned NOT_WRITE :1;
};
struct {
unsigned :5;
unsigned NOT_ADDRESS :1;
};
struct {
unsigned :2;
unsigned nWRITE :1;
unsigned :2;
unsigned nADDRESS :1;
};
struct {
unsigned :2;
unsigned nW :1;
unsigned :2;
unsigned nA :1;
};
struct {
unsigned :2;
unsigned R_W :1;
unsigned :2;
unsigned D_A :1;
};
struct {
unsigned :5;
unsigned I2C_DAT :1;
};
struct {
unsigned :5;
unsigned DA :1;
};
struct {
unsigned :2;
unsigned RW :1;
};
struct {
unsigned :3;
unsigned START :1;
};
struct {
unsigned :4;
unsigned STOP :1;
};
struct {
unsigned :2;
unsigned NOT_W :1;
};
struct {
unsigned :5;
unsigned NOT_A :1;
};
} SSPSTATbits_t;
extern volatile SSPSTATbits_t SSPSTATbits @ 0xFC7;

# 16576
extern volatile unsigned char SSPADD @ 0xFC8;

asm("SSPADD equ 0FC8h");



extern volatile unsigned char SSPBUF @ 0xFC9;

asm("SSPBUF equ 0FC9h");



extern volatile unsigned char T2CON @ 0xFCA;

asm("T2CON equ 0FCAh");


typedef union {
struct {
unsigned T2CKPS :2;
unsigned TMR2ON :1;
unsigned TOUTPS :4;
};
struct {
unsigned T2CKPS0 :1;
unsigned T2CKPS1 :1;
unsigned :1;
unsigned TOUTPS0 :1;
unsigned TOUTPS1 :1;
unsigned TOUTPS2 :1;
unsigned TOUTPS3 :1;
};
} T2CONbits_t;
extern volatile T2CONbits_t T2CONbits @ 0xFCA;

# 16658
extern volatile unsigned char PR2 @ 0xFCB;

asm("PR2 equ 0FCBh");


extern volatile unsigned char MEMCON @ 0xFCB;

asm("MEMCON equ 0FCBh");


typedef union {
struct {
unsigned :7;
unsigned EBDIS :1;
};
struct {
unsigned :4;
unsigned WAIT0 :1;
};
struct {
unsigned :5;
unsigned WAIT1 :1;
};
struct {
unsigned WM0 :1;
};
struct {
unsigned :1;
unsigned WM1 :1;
};
} PR2bits_t;
extern volatile PR2bits_t PR2bits @ 0xFCB;

# 16717
typedef union {
struct {
unsigned :7;
unsigned EBDIS :1;
};
struct {
unsigned :4;
unsigned WAIT0 :1;
};
struct {
unsigned :5;
unsigned WAIT1 :1;
};
struct {
unsigned WM0 :1;
};
struct {
unsigned :1;
unsigned WM1 :1;
};
} MEMCONbits_t;
extern volatile MEMCONbits_t MEMCONbits @ 0xFCB;

# 16767
extern volatile unsigned char TMR2 @ 0xFCC;

asm("TMR2 equ 0FCCh");



extern volatile unsigned char T1CON @ 0xFCD;

asm("T1CON equ 0FCDh");


typedef union {
struct {
unsigned :2;
unsigned NOT_T1SYNC :1;
};
struct {
unsigned TMR1ON :1;
unsigned TMR1CS :1;
unsigned nT1SYNC :1;
unsigned T1OSCEN :1;
unsigned T1CKPS :2;
unsigned :1;
unsigned RD16 :1;
};
struct {
unsigned :2;
unsigned T1INSYNC :1;
unsigned :1;
unsigned T1CKPS0 :1;
unsigned T1CKPS1 :1;
};
struct {
unsigned :2;
unsigned T1SYNC :1;
};
struct {
unsigned :3;
unsigned SOSCEN :1;
};
struct {
unsigned :7;
unsigned T1RD16 :1;
};
} T1CONbits_t;
extern volatile T1CONbits_t T1CONbits @ 0xFCD;

# 16881
extern volatile unsigned short TMR1 @ 0xFCE;

asm("TMR1 equ 0FCEh");



extern volatile unsigned char TMR1L @ 0xFCE;

asm("TMR1L equ 0FCEh");



extern volatile unsigned char TMR1H @ 0xFCF;

asm("TMR1H equ 0FCFh");



extern volatile unsigned char RCON @ 0xFD0;

asm("RCON equ 0FD0h");


typedef union {
struct {
unsigned NOT_BOR :1;
};
struct {
unsigned :1;
unsigned NOT_POR :1;
};
struct {
unsigned :2;
unsigned NOT_PD :1;
};
struct {
unsigned :3;
unsigned NOT_TO :1;
};
struct {
unsigned :4;
unsigned NOT_RI :1;
};
struct {
unsigned nBOR :1;
unsigned nPOR :1;
unsigned nPD :1;
unsigned nTO :1;
unsigned nRI :1;
unsigned :2;
unsigned IPEN :1;
};
struct {
unsigned :7;
unsigned NOT_IPEN :1;
};
struct {
unsigned BOR :1;
unsigned POR :1;
unsigned PD :1;
unsigned TO :1;
unsigned RI :1;
unsigned :2;
unsigned nIPEN :1;
};
} RCONbits_t;
extern volatile RCONbits_t RCONbits @ 0xFD0;

# 17041
extern volatile unsigned char WDTCON @ 0xFD1;

asm("WDTCON equ 0FD1h");


typedef union {
struct {
unsigned SWDTEN :1;
};
struct {
unsigned SWDTE :1;
};
} WDTCONbits_t;
extern volatile WDTCONbits_t WDTCONbits @ 0xFD1;

# 17068
extern volatile unsigned char LVDCON @ 0xFD2;

asm("LVDCON equ 0FD2h");


typedef union {
struct {
unsigned LVDL :4;
unsigned LVDEN :1;
unsigned IRVST :1;
};
struct {
unsigned LVDL0 :1;
unsigned LVDL1 :1;
unsigned LVDL2 :1;
unsigned LVDL3 :1;
unsigned :1;
unsigned IVRST :1;
};
} LVDCONbits_t;
extern volatile LVDCONbits_t LVDCONbits @ 0xFD2;

# 17132
extern volatile unsigned char OSCCON @ 0xFD3;

asm("OSCCON equ 0FD3h");


typedef union {
struct {
unsigned SCS :1;
};
} OSCCONbits_t;
extern volatile OSCCONbits_t OSCCONbits @ 0xFD3;

# 17151
extern volatile unsigned char T0CON @ 0xFD5;

asm("T0CON equ 0FD5h");


typedef union {
struct {
unsigned T0PS :3;
unsigned PSA :1;
unsigned T0SE :1;
unsigned T0CS :1;
unsigned T08BIT :1;
unsigned TMR0ON :1;
};
struct {
unsigned T0PS0 :1;
unsigned T0PS1 :1;
unsigned T0PS2 :1;
};
} T0CONbits_t;
extern volatile T0CONbits_t T0CONbits @ 0xFD5;

# 17220
extern volatile unsigned short TMR0 @ 0xFD6;

asm("TMR0 equ 0FD6h");



extern volatile unsigned char TMR0L @ 0xFD6;

asm("TMR0L equ 0FD6h");



extern volatile unsigned char TMR0H @ 0xFD7;

asm("TMR0H equ 0FD7h");



extern volatile unsigned char STATUS @ 0xFD8;

asm("STATUS equ 0FD8h");


typedef union {
struct {
unsigned C :1;
unsigned DC :1;
unsigned Z :1;
unsigned OV :1;
unsigned N :1;
};
struct {
unsigned CARRY :1;
};
struct {
unsigned :4;
unsigned NEGATIVE :1;
};
struct {
unsigned :3;
unsigned OVERFLOW :1;
};
struct {
unsigned :2;
unsigned ZERO :1;
};
} STATUSbits_t;
extern volatile STATUSbits_t STATUSbits @ 0xFD8;

# 17316
extern volatile unsigned short FSR2 @ 0xFD9;

asm("FSR2 equ 0FD9h");



extern volatile unsigned char FSR2L @ 0xFD9;

asm("FSR2L equ 0FD9h");



extern volatile unsigned char FSR2H @ 0xFDA;

asm("FSR2H equ 0FDAh");



extern volatile unsigned char PLUSW2 @ 0xFDB;

asm("PLUSW2 equ 0FDBh");



extern volatile unsigned char PREINC2 @ 0xFDC;

asm("PREINC2 equ 0FDCh");



extern volatile unsigned char POSTDEC2 @ 0xFDD;

asm("POSTDEC2 equ 0FDDh");



extern volatile unsigned char POSTINC2 @ 0xFDE;

asm("POSTINC2 equ 0FDEh");



extern volatile unsigned char INDF2 @ 0xFDF;

asm("INDF2 equ 0FDFh");



extern volatile unsigned char BSR @ 0xFE0;

asm("BSR equ 0FE0h");



extern volatile unsigned short FSR1 @ 0xFE1;

asm("FSR1 equ 0FE1h");



extern volatile unsigned char FSR1L @ 0xFE1;

asm("FSR1L equ 0FE1h");



extern volatile unsigned char FSR1H @ 0xFE2;

asm("FSR1H equ 0FE2h");



extern volatile unsigned char PLUSW1 @ 0xFE3;

asm("PLUSW1 equ 0FE3h");



extern volatile unsigned char PREINC1 @ 0xFE4;

asm("PREINC1 equ 0FE4h");



extern volatile unsigned char POSTDEC1 @ 0xFE5;

asm("POSTDEC1 equ 0FE5h");



extern volatile unsigned char POSTINC1 @ 0xFE6;

asm("POSTINC1 equ 0FE6h");



extern volatile unsigned char INDF1 @ 0xFE7;

asm("INDF1 equ 0FE7h");



extern volatile unsigned char WREG @ 0xFE8;

asm("WREG equ 0FE8h");

# 17429
extern volatile unsigned short FSR0 @ 0xFE9;

asm("FSR0 equ 0FE9h");



extern volatile unsigned char FSR0L @ 0xFE9;

asm("FSR0L equ 0FE9h");



extern volatile unsigned char FSR0H @ 0xFEA;

asm("FSR0H equ 0FEAh");



extern volatile unsigned char PLUSW0 @ 0xFEB;

asm("PLUSW0 equ 0FEBh");



extern volatile unsigned char PREINC0 @ 0xFEC;

asm("PREINC0 equ 0FECh");



extern volatile unsigned char POSTDEC0 @ 0xFED;

asm("POSTDEC0 equ 0FEDh");



extern volatile unsigned char POSTINC0 @ 0xFEE;

asm("POSTINC0 equ 0FEEh");



extern volatile unsigned char INDF0 @ 0xFEF;

asm("INDF0 equ 0FEFh");



extern volatile unsigned char INTCON3 @ 0xFF0;

asm("INTCON3 equ 0FF0h");


typedef union {
struct {
unsigned INT1IF :1;
unsigned INT2IF :1;
unsigned :1;
unsigned INT1IE :1;
unsigned INT2IE :1;
unsigned :1;
unsigned INT1IP :1;
unsigned INT2IP :1;
};
struct {
unsigned INT1F :1;
unsigned INT2F :1;
unsigned :1;
unsigned INT1E :1;
unsigned INT2E :1;
unsigned :1;
unsigned INT1P :1;
unsigned INT2P :1;
};
} INTCON3bits_t;
extern volatile INTCON3bits_t INTCON3bits @ 0xFF0;

# 17568
extern volatile unsigned char INTCON2 @ 0xFF1;

asm("INTCON2 equ 0FF1h");


typedef union {
struct {
unsigned :7;
unsigned NOT_RBPU :1;
};
struct {
unsigned RBIP :1;
unsigned :1;
unsigned TMR0IP :1;
unsigned :1;
unsigned INTEDG2 :1;
unsigned INTEDG1 :1;
unsigned INTEDG0 :1;
unsigned nRBPU :1;
};
struct {
unsigned :2;
unsigned T0IP :1;
unsigned :4;
unsigned RBPU :1;
};
} INTCON2bits_t;
extern volatile INTCON2bits_t INTCON2bits @ 0xFF1;

# 17644
extern volatile unsigned char INTCON @ 0xFF2;

asm("INTCON equ 0FF2h");


extern volatile unsigned char INTCON1 @ 0xFF2;

asm("INTCON1 equ 0FF2h");


typedef union {
struct {
unsigned RBIF :1;
unsigned INT0IF :1;
unsigned TMR0IF :1;
unsigned RBIE :1;
unsigned INT0IE :1;
unsigned TMR0IE :1;
unsigned PEIE_GIEL :1;
unsigned GIE_GIEH :1;
};
struct {
unsigned RBIF :1;
unsigned INT0IF :1;
unsigned TMR0IF :1;
unsigned RBIE :1;
unsigned INT0IE :1;
unsigned TMR0IE :1;
unsigned PEIE :1;
unsigned GIE :1;
};
struct {
unsigned RBIF :1;
unsigned INT0IF :1;
unsigned TMR0IF :1;
unsigned RBIE :1;
unsigned INT0IE :1;
unsigned TMR0IE :1;
unsigned GIEL :1;
unsigned GIEH :1;
};
struct {
unsigned :1;
unsigned INT0F :1;
unsigned T0IF :1;
unsigned :1;
unsigned INT0E :1;
unsigned T0IE :1;
unsigned PEIE :1;
unsigned GIE :1;
};
struct {
unsigned :6;
unsigned GIEL :1;
unsigned GIEH :1;
};
} INTCONbits_t;
extern volatile INTCONbits_t INTCONbits @ 0xFF2;

# 17784
typedef union {
struct {
unsigned RBIF :1;
unsigned INT0IF :1;
unsigned TMR0IF :1;
unsigned RBIE :1;
unsigned INT0IE :1;
unsigned TMR0IE :1;
unsigned PEIE_GIEL :1;
unsigned GIE_GIEH :1;
};
struct {
unsigned RBIF :1;
unsigned INT0IF :1;
unsigned TMR0IF :1;
unsigned RBIE :1;
unsigned INT0IE :1;
unsigned TMR0IE :1;
unsigned PEIE :1;
unsigned GIE :1;
};
struct {
unsigned RBIF :1;
unsigned INT0IF :1;
unsigned TMR0IF :1;
unsigned RBIE :1;
unsigned INT0IE :1;
unsigned TMR0IE :1;
unsigned GIEL :1;
unsigned GIEH :1;
};
struct {
unsigned :1;
unsigned INT0F :1;
unsigned T0IF :1;
unsigned :1;
unsigned INT0E :1;
unsigned T0IE :1;
unsigned PEIE :1;
unsigned GIE :1;
};
struct {
unsigned :6;
unsigned GIEL :1;
unsigned GIEH :1;
};
} INTCON1bits_t;
extern volatile INTCON1bits_t INTCON1bits @ 0xFF2;

# 17915
extern volatile unsigned short PROD @ 0xFF3;

asm("PROD equ 0FF3h");



extern volatile unsigned char PRODL @ 0xFF3;

asm("PRODL equ 0FF3h");



extern volatile unsigned char PRODH @ 0xFF4;

asm("PRODH equ 0FF4h");



extern volatile unsigned char TABLAT @ 0xFF5;

asm("TABLAT equ 0FF5h");




extern volatile unsigned short long TBLPTR @ 0xFF6;


asm("TBLPTR equ 0FF6h");



extern volatile unsigned char TBLPTRL @ 0xFF6;

asm("TBLPTRL equ 0FF6h");



extern volatile unsigned char TBLPTRH @ 0xFF7;

asm("TBLPTRH equ 0FF7h");



extern volatile unsigned char TBLPTRU @ 0xFF8;

asm("TBLPTRU equ 0FF8h");




extern volatile unsigned short long PCLAT @ 0xFF9;


asm("PCLAT equ 0FF9h");



extern volatile unsigned short long PC @ 0xFF9;


asm("PC equ 0FF9h");



extern volatile unsigned char PCL @ 0xFF9;

asm("PCL equ 0FF9h");



extern volatile unsigned char PCLATH @ 0xFFA;

asm("PCLATH equ 0FFAh");



extern volatile unsigned char PCLATU @ 0xFFB;

asm("PCLATU equ 0FFBh");



extern volatile unsigned char STKPTR @ 0xFFC;

asm("STKPTR equ 0FFCh");


typedef union {
struct {
unsigned STKPTR :5;
unsigned :1;
unsigned STKUNF :1;
unsigned STKFUL :1;
};
struct {
unsigned STKPTR0 :1;
unsigned STKPTR1 :1;
unsigned STKPTR2 :1;
unsigned STKPTR3 :1;
unsigned STKPTR4 :1;
unsigned :2;
unsigned STKOVF :1;
};
struct {
unsigned SP0 :1;
unsigned SP1 :1;
unsigned SP2 :1;
unsigned SP3 :1;
unsigned SP4 :1;
};
} STKPTRbits_t;
extern volatile STKPTRbits_t STKPTRbits @ 0xFFC;

# 18102
extern volatile unsigned short long TOS @ 0xFFD;


asm("TOS equ 0FFDh");



extern volatile unsigned char TOSL @ 0xFFD;

asm("TOSL equ 0FFDh");



extern volatile unsigned char TOSH @ 0xFFE;

asm("TOSH equ 0FFEh");



extern volatile unsigned char TOSU @ 0xFFF;

asm("TOSU equ 0FFFh");

# 18133
extern volatile __bit ABAT @ (((unsigned) &CANCON)*8) + 4;

extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;

extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;

extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;

extern volatile __bit ADCAL @ (((unsigned) &ADCON0)*8) + 7;

extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;

extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;

extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;

extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;

extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;

extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;

extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;

extern volatile __bit ADIP @ (((unsigned) &IPR1)*8) + 6;

extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;

extern volatile __bit AN0 @ (((unsigned) &PORTA)*8) + 0;

extern volatile __bit AN1 @ (((unsigned) &PORTA)*8) + 1;

extern volatile __bit AN2 @ (((unsigned) &PORTA)*8) + 2;

extern volatile __bit AN3 @ (((unsigned) &PORTA)*8) + 3;

extern volatile __bit AN4 @ (((unsigned) &PORTA)*8) + 5;

extern volatile __bit AN5 @ (((unsigned) &PORTE)*8) + 0;

extern volatile __bit AN6 @ (((unsigned) &PORTE)*8) + 1;

extern volatile __bit AN7 @ (((unsigned) &PORTE)*8) + 2;

extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;

extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;

extern volatile __bit BCLIP @ (((unsigned) &IPR2)*8) + 3;

extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;

extern volatile __bit BOR @ (((unsigned) &RCON)*8) + 0;

extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;

extern volatile __bit BRGH1 @ (((unsigned) &TXSTA)*8) + 2;

extern volatile __bit BRP0 @ (((unsigned) &BRGCON1)*8) + 0;

extern volatile __bit BRP1 @ (((unsigned) &BRGCON1)*8) + 1;

extern volatile __bit BRP2 @ (((unsigned) &BRGCON1)*8) + 2;

extern volatile __bit BRP3 @ (((unsigned) &BRGCON1)*8) + 3;

extern volatile __bit BRP4 @ (((unsigned) &BRGCON1)*8) + 4;

extern volatile __bit BRP5 @ (((unsigned) &BRGCON1)*8) + 5;

extern volatile __bit C1INM @ (((unsigned) &PORTD)*8) + 1;

extern volatile __bit C1INP @ (((unsigned) &PORTD)*8) + 0;

extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;

extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;

extern volatile __bit C2INM @ (((unsigned) &PORTD)*8) + 3;

extern volatile __bit C2INP @ (((unsigned) &PORTD)*8) + 2;

extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;

extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;

extern volatile __bit CANCAP @ (((unsigned) &CIOCON)*8) + 4;

extern volatile __bit CANRX @ (((unsigned) &PORTB)*8) + 3;

extern volatile __bit CANTX @ (((unsigned) &PORTB)*8) + 2;

extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;

extern volatile __bit CCP1 @ (((unsigned) &PORTC)*8) + 2;

extern volatile __bit CCP10 @ (((unsigned) &PORTE)*8) + 2;

extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;

extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;

extern volatile __bit CCP1IP @ (((unsigned) &IPR1)*8) + 2;

extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;

extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;

extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;

extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;

extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;

extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;

extern volatile __bit CCP2 @ (((unsigned) &PORTC)*8) + 1;

extern volatile __bit CCP2E @ (((unsigned) &PORTE)*8) + 7;

extern volatile __bit CCP2_PA2 @ (((unsigned) &PORTB)*8) + 3;

extern volatile __bit CCP6E @ (((unsigned) &PORTE)*8) + 6;

extern volatile __bit CCP7E @ (((unsigned) &PORTE)*8) + 5;

extern volatile __bit CCP8E @ (((unsigned) &PORTE)*8) + 4;

extern volatile __bit CCP9E @ (((unsigned) &PORTE)*8) + 3;

extern volatile __bit CFGS @ (((unsigned) &EECON1)*8) + 6;

extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;

extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;

extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;

extern volatile __bit CHSN3 @ (((unsigned) &ADCON1)*8) + 3;

extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;

extern volatile __bit CK @ (((unsigned) &PORTC)*8) + 6;

extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;

extern volatile __bit CKP @ (((unsigned) &SSPCON1)*8) + 4;

extern volatile __bit CLKO @ (((unsigned) &PORTA)*8) + 6;

extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;

extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;

extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;

extern volatile __bit CMEN0 @ (((unsigned) &CMCON)*8) + 0;

extern volatile __bit CMEN1 @ (((unsigned) &CMCON)*8) + 1;

extern volatile __bit CMEN2 @ (((unsigned) &CMCON)*8) + 2;

extern volatile __bit CMIE @ (((unsigned) &PIE2)*8) + 6;

extern volatile __bit CMIF @ (((unsigned) &PIR2)*8) + 6;

extern volatile __bit CMIP @ (((unsigned) &IPR2)*8) + 6;

extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;

extern volatile __bit CS @ (((unsigned) &PORTE)*8) + 2;

extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;

extern volatile __bit CSRC1 @ (((unsigned) &TXSTA)*8) + 7;

extern volatile __bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;

extern volatile __bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;

extern volatile __bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;

extern volatile __bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;

extern volatile __bit CVREF @ (((unsigned) &PORTA)*8) + 0;

extern volatile __bit CVREN @ (((unsigned) &CVRCON)*8) + 7;

extern volatile __bit CVROE @ (((unsigned) &CVRCON)*8) + 6;

extern volatile __bit CVROEN @ (((unsigned) &CVRCON)*8) + 6;

extern volatile __bit CVRR @ (((unsigned) &CVRCON)*8) + 5;

extern volatile __bit CVRSS @ (((unsigned) &CVRCON)*8) + 4;

extern volatile __bit DA @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;

extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;

extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;

extern volatile __bit DDRE0 @ (((unsigned) &TRISE)*8) + 0;

extern volatile __bit DDRE1 @ (((unsigned) &TRISE)*8) + 1;

extern volatile __bit DDRE2 @ (((unsigned) &TRISE)*8) + 2;

extern volatile __bit DONE @ (((unsigned) &ADCON0)*8) + 2;

extern volatile __bit DT @ (((unsigned) &PORTC)*8) + 7;

extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit D_NOT_A @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit EBDIS @ (((unsigned) &PR2)*8) + 7;

extern volatile __bit ECCP1 @ (((unsigned) &PORTD)*8) + 4;

extern volatile __bit ECCP1IE @ (((unsigned) &PIE2)*8) + 0;

extern volatile __bit ECCP1IF @ (((unsigned) &PIR2)*8) + 0;

extern volatile __bit ECCP1IP @ (((unsigned) &IPR2)*8) + 0;

extern volatile __bit ECCP1M0 @ (((unsigned) &ECCP1CON)*8) + 0;

extern volatile __bit ECCP1M1 @ (((unsigned) &ECCP1CON)*8) + 1;

extern volatile __bit ECCP1M2 @ (((unsigned) &ECCP1CON)*8) + 2;

extern volatile __bit ECCP1M3 @ (((unsigned) &ECCP1CON)*8) + 3;

extern volatile __bit ECCPAS0 @ (((unsigned) &ECCPAS)*8) + 4;

extern volatile __bit ECCPAS1 @ (((unsigned) &ECCPAS)*8) + 5;

extern volatile __bit ECCPAS2 @ (((unsigned) &ECCPAS)*8) + 6;

extern volatile __bit ECCPASE @ (((unsigned) &ECCPAS)*8) + 7;

extern volatile __bit EDC1B0 @ (((unsigned) &ECCP1CON)*8) + 4;

extern volatile __bit EDC1B1 @ (((unsigned) &ECCP1CON)*8) + 5;

extern volatile __bit EDC2B0 @ (((unsigned) &ECCP1CON)*8) + 4;

extern volatile __bit EDC2B1 @ (((unsigned) &ECCP1CON)*8) + 5;

extern volatile __bit EEFS @ (((unsigned) &EECON1)*8) + 6;

extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;

extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;

extern volatile __bit EEIP @ (((unsigned) &IPR2)*8) + 4;

extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;

extern volatile __bit EICODE1 @ (((unsigned) &CANSTAT)*8) + 1;

extern volatile __bit EICODE2 @ (((unsigned) &CANSTAT)*8) + 2;

extern volatile __bit EICODE3 @ (((unsigned) &CANSTAT)*8) + 3;

extern volatile __bit ENDRHI @ (((unsigned) &CIOCON)*8) + 5;

extern volatile __bit EPDC0 @ (((unsigned) &ECCP1DEL)*8) + 0;

extern volatile __bit EPDC1 @ (((unsigned) &ECCP1DEL)*8) + 1;

extern volatile __bit EPDC2 @ (((unsigned) &ECCP1DEL)*8) + 2;

extern volatile __bit EPDC3 @ (((unsigned) &ECCP1DEL)*8) + 3;

extern volatile __bit EPDC4 @ (((unsigned) &ECCP1DEL)*8) + 4;

extern volatile __bit EPDC5 @ (((unsigned) &ECCP1DEL)*8) + 5;

extern volatile __bit EPDC6 @ (((unsigned) &ECCP1DEL)*8) + 6;

extern volatile __bit EPDC7 @ (((unsigned) &ECCP1DEL)*8) + 7;

extern volatile __bit EPWM1M0 @ (((unsigned) &ECCP1CON)*8) + 6;

extern volatile __bit EPWM1M1 @ (((unsigned) &ECCP1CON)*8) + 7;

extern volatile __bit ERRIE @ (((unsigned) &PIE3)*8) + 5;

extern volatile __bit ERRIF @ (((unsigned) &PIR3)*8) + 5;

extern volatile __bit ERRIP @ (((unsigned) &IPR3)*8) + 5;

extern volatile __bit EWARN @ (((unsigned) &COMSTAT)*8) + 0;

extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;

extern volatile __bit FIFOEMPTY @ (((unsigned) &COMSTAT)*8) + 7;

extern volatile __bit FILHIT1 @ (((unsigned) &RXB1CON)*8) + 1;

extern volatile __bit FILHIT2 @ (((unsigned) &RXB1CON)*8) + 2;

extern volatile __bit FP1 @ (((unsigned) &CANCON)*8) + 1;

extern volatile __bit FP2 @ (((unsigned) &CANCON)*8) + 2;

extern volatile __bit FP3 @ (((unsigned) &CANCON)*8) + 3;

extern volatile __bit FREE @ (((unsigned) &EECON1)*8) + 4;

extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;

extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;

extern volatile __bit GIEH @ (((unsigned) &INTCON)*8) + 7;

extern volatile __bit GIEL @ (((unsigned) &INTCON)*8) + 6;

extern volatile __bit GIE_GIEH @ (((unsigned) &INTCON)*8) + 7;

extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;

extern volatile __bit GODONE @ (((unsigned) &ADCON0)*8) + 2;

extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;

extern volatile __bit GO_NOT_DONE @ (((unsigned) &ADCON0)*8) + 2;

extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;

extern volatile __bit I2C_DAT @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;

extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;

extern volatile __bit IBF @ (((unsigned) &TRISE)*8) + 7;

extern volatile __bit IBOV @ (((unsigned) &TRISE)*8) + 5;

extern volatile __bit INT0 @ (((unsigned) &PORTB)*8) + 0;

extern volatile __bit INT0E @ (((unsigned) &INTCON)*8) + 4;

extern volatile __bit INT0F @ (((unsigned) &INTCON)*8) + 1;

extern volatile __bit INT0IE @ (((unsigned) &INTCON)*8) + 4;

extern volatile __bit INT0IF @ (((unsigned) &INTCON)*8) + 1;

extern volatile __bit INT1 @ (((unsigned) &PORTB)*8) + 1;

extern volatile __bit INT1E @ (((unsigned) &INTCON3)*8) + 3;

extern volatile __bit INT1F @ (((unsigned) &INTCON3)*8) + 0;

extern volatile __bit INT1IE @ (((unsigned) &INTCON3)*8) + 3;

extern volatile __bit INT1IF @ (((unsigned) &INTCON3)*8) + 0;

extern volatile __bit INT1IP @ (((unsigned) &INTCON3)*8) + 6;

extern volatile __bit INT1P @ (((unsigned) &INTCON3)*8) + 6;

extern volatile __bit INT2E @ (((unsigned) &INTCON3)*8) + 4;

extern volatile __bit INT2F @ (((unsigned) &INTCON3)*8) + 1;

extern volatile __bit INT2IE @ (((unsigned) &INTCON3)*8) + 4;

extern volatile __bit INT2IF @ (((unsigned) &INTCON3)*8) + 1;

extern volatile __bit INT2IP @ (((unsigned) &INTCON3)*8) + 7;

extern volatile __bit INT2P @ (((unsigned) &INTCON3)*8) + 7;

extern volatile __bit INTEDG0 @ (((unsigned) &INTCON2)*8) + 6;

extern volatile __bit INTEDG1 @ (((unsigned) &INTCON2)*8) + 5;

extern volatile __bit INTEDG2 @ (((unsigned) &INTCON2)*8) + 4;

extern volatile __bit IPEN @ (((unsigned) &RCON)*8) + 7;

extern volatile __bit IRVST @ (((unsigned) &LVDCON)*8) + 5;

extern volatile __bit IRXIE @ (((unsigned) &PIE3)*8) + 7;

extern volatile __bit IRXIF @ (((unsigned) &PIR3)*8) + 7;

extern volatile __bit IRXIP @ (((unsigned) &IPR3)*8) + 7;

extern volatile __bit IVRE @ (((unsigned) &PIE3)*8) + 7;

extern volatile __bit IVRF @ (((unsigned) &PIR3)*8) + 7;

extern volatile __bit IVRP @ (((unsigned) &IPR3)*8) + 7;

extern volatile __bit IVRST @ (((unsigned) &LVDCON)*8) + 5;

extern volatile __bit JTOFF @ (((unsigned) &RXB0CON)*8) + 1;

extern volatile __bit LA0 @ (((unsigned) &LATA)*8) + 0;

extern volatile __bit LA1 @ (((unsigned) &LATA)*8) + 1;

extern volatile __bit LA2 @ (((unsigned) &LATA)*8) + 2;

extern volatile __bit LA3 @ (((unsigned) &LATA)*8) + 3;

extern volatile __bit LA4 @ (((unsigned) &LATA)*8) + 4;

extern volatile __bit LA5 @ (((unsigned) &LATA)*8) + 5;

extern volatile __bit LA6 @ (((unsigned) &LATA)*8) + 6;

extern volatile __bit LA7 @ (((unsigned) &LATA)*8) + 7;

extern volatile __bit LATA0 @ (((unsigned) &LATA)*8) + 0;

extern volatile __bit LATA1 @ (((unsigned) &LATA)*8) + 1;

extern volatile __bit LATA2 @ (((unsigned) &LATA)*8) + 2;

extern volatile __bit LATA3 @ (((unsigned) &LATA)*8) + 3;

extern volatile __bit LATA4 @ (((unsigned) &LATA)*8) + 4;

extern volatile __bit LATA5 @ (((unsigned) &LATA)*8) + 5;

extern volatile __bit LATA6 @ (((unsigned) &LATA)*8) + 6;

extern volatile __bit LATA7 @ (((unsigned) &LATA)*8) + 7;

extern volatile __bit LATB0 @ (((unsigned) &LATB)*8) + 0;

extern volatile __bit LATB1 @ (((unsigned) &LATB)*8) + 1;

extern volatile __bit LATB2 @ (((unsigned) &LATB)*8) + 2;

extern volatile __bit LATB3 @ (((unsigned) &LATB)*8) + 3;

extern volatile __bit LATB4 @ (((unsigned) &LATB)*8) + 4;

extern volatile __bit LATB5 @ (((unsigned) &LATB)*8) + 5;

extern volatile __bit LATB6 @ (((unsigned) &LATB)*8) + 6;

extern volatile __bit LATB7 @ (((unsigned) &LATB)*8) + 7;

extern volatile __bit LATC0 @ (((unsigned) &LATC)*8) + 0;

extern volatile __bit LATC1 @ (((unsigned) &LATC)*8) + 1;

extern volatile __bit LATC2 @ (((unsigned) &LATC)*8) + 2;

extern volatile __bit LATC3 @ (((unsigned) &LATC)*8) + 3;

extern volatile __bit LATC4 @ (((unsigned) &LATC)*8) + 4;

extern volatile __bit LATC5 @ (((unsigned) &LATC)*8) + 5;

extern volatile __bit LATC6 @ (((unsigned) &LATC)*8) + 6;

extern volatile __bit LATC7 @ (((unsigned) &LATC)*8) + 7;

extern volatile __bit LATD0 @ (((unsigned) &LATD)*8) + 0;

extern volatile __bit LATD1 @ (((unsigned) &LATD)*8) + 1;

extern volatile __bit LATD2 @ (((unsigned) &LATD)*8) + 2;

extern volatile __bit LATD3 @ (((unsigned) &LATD)*8) + 3;

extern volatile __bit LATD4 @ (((unsigned) &LATD)*8) + 4;

extern volatile __bit LATD5 @ (((unsigned) &LATD)*8) + 5;

extern volatile __bit LATD6 @ (((unsigned) &LATD)*8) + 6;

extern volatile __bit LATD7 @ (((unsigned) &LATD)*8) + 7;

extern volatile __bit LATE0 @ (((unsigned) &LATE)*8) + 0;

extern volatile __bit LATE1 @ (((unsigned) &LATE)*8) + 1;

extern volatile __bit LATE2 @ (((unsigned) &LATE)*8) + 2;

extern volatile __bit LB0 @ (((unsigned) &LATB)*8) + 0;

extern volatile __bit LB1 @ (((unsigned) &LATB)*8) + 1;

extern volatile __bit LB2 @ (((unsigned) &LATB)*8) + 2;

extern volatile __bit LB3 @ (((unsigned) &LATB)*8) + 3;

extern volatile __bit LB4 @ (((unsigned) &LATB)*8) + 4;

extern volatile __bit LB5 @ (((unsigned) &LATB)*8) + 5;

extern volatile __bit LB6 @ (((unsigned) &LATB)*8) + 6;

extern volatile __bit LB7 @ (((unsigned) &LATB)*8) + 7;

extern volatile __bit LC0 @ (((unsigned) &LATC)*8) + 0;

extern volatile __bit LC1 @ (((unsigned) &LATC)*8) + 1;

extern volatile __bit LC2 @ (((unsigned) &LATC)*8) + 2;

extern volatile __bit LC3 @ (((unsigned) &LATC)*8) + 3;

extern volatile __bit LC4 @ (((unsigned) &LATC)*8) + 4;

extern volatile __bit LC5 @ (((unsigned) &LATC)*8) + 5;

extern volatile __bit LC6 @ (((unsigned) &LATC)*8) + 6;

extern volatile __bit LC7 @ (((unsigned) &LATC)*8) + 7;

extern volatile __bit LD0 @ (((unsigned) &LATD)*8) + 0;

extern volatile __bit LD1 @ (((unsigned) &LATD)*8) + 1;

extern volatile __bit LD2 @ (((unsigned) &LATD)*8) + 2;

extern volatile __bit LD3 @ (((unsigned) &LATD)*8) + 3;

extern volatile __bit LD4 @ (((unsigned) &LATD)*8) + 4;

extern volatile __bit LD5 @ (((unsigned) &LATD)*8) + 5;

extern volatile __bit LD6 @ (((unsigned) &LATD)*8) + 6;

extern volatile __bit LD7 @ (((unsigned) &LATD)*8) + 7;

extern volatile __bit LE0 @ (((unsigned) &LATE)*8) + 0;

extern volatile __bit LE1 @ (((unsigned) &LATE)*8) + 1;

extern volatile __bit LE2 @ (((unsigned) &LATE)*8) + 2;

extern volatile __bit LE3 @ (((unsigned) &LATE)*8) + 3;

extern volatile __bit LE4 @ (((unsigned) &LATE)*8) + 4;

extern volatile __bit LE5 @ (((unsigned) &LATE)*8) + 5;

extern volatile __bit LE6 @ (((unsigned) &LATE)*8) + 6;

extern volatile __bit LE7 @ (((unsigned) &LATE)*8) + 7;

extern volatile __bit LVDEN @ (((unsigned) &LVDCON)*8) + 4;

extern volatile __bit LVDIE @ (((unsigned) &PIE2)*8) + 2;

extern volatile __bit LVDIF @ (((unsigned) &PIR2)*8) + 2;

extern volatile __bit LVDIN @ (((unsigned) &PORTA)*8) + 5;

extern volatile __bit LVDIP @ (((unsigned) &IPR2)*8) + 2;

extern volatile __bit LVDL0 @ (((unsigned) &LVDCON)*8) + 0;

extern volatile __bit LVDL1 @ (((unsigned) &LVDCON)*8) + 1;

extern volatile __bit LVDL2 @ (((unsigned) &LVDCON)*8) + 2;

extern volatile __bit LVDL3 @ (((unsigned) &LVDCON)*8) + 3;

extern volatile __bit NEGATIVE @ (((unsigned) &STATUS)*8) + 4;

extern volatile __bit NOT_A @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit NOT_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit NOT_BOR @ (((unsigned) &RCON)*8) + 0;

extern volatile __bit NOT_CS @ (((unsigned) &PORTE)*8) + 2;

extern volatile __bit NOT_DONE @ (((unsigned) &ADCON0)*8) + 2;

extern volatile __bit NOT_IPEN @ (((unsigned) &RCON)*8) + 7;

extern volatile __bit NOT_PD @ (((unsigned) &RCON)*8) + 2;

extern volatile __bit NOT_POR @ (((unsigned) &RCON)*8) + 1;

extern volatile __bit NOT_RBPU @ (((unsigned) &INTCON2)*8) + 7;

extern volatile __bit NOT_RC8 @ (((unsigned) &RCSTA)*8) + 6;

extern volatile __bit NOT_RD @ (((unsigned) &PORTE)*8) + 0;

extern volatile __bit NOT_RI @ (((unsigned) &RCON)*8) + 4;

extern volatile __bit NOT_SS @ (((unsigned) &PORTA)*8) + 5;

extern volatile __bit NOT_T1SYNC @ (((unsigned) &T1CON)*8) + 2;

extern volatile __bit NOT_T3SYNC @ (((unsigned) &T3CON)*8) + 2;

extern volatile __bit NOT_TO @ (((unsigned) &RCON)*8) + 3;

extern volatile __bit NOT_TX8 @ (((unsigned) &TXSTA)*8) + 6;

extern volatile __bit NOT_W @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit NOT_WR @ (((unsigned) &PORTE)*8) + 1;

extern volatile __bit NOT_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit OBF @ (((unsigned) &TRISE)*8) + 6;

extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;

extern volatile __bit OSC2 @ (((unsigned) &PORTA)*8) + 6;

extern volatile __bit OV @ (((unsigned) &STATUS)*8) + 3;

extern volatile __bit OVERFLOW @ (((unsigned) &STATUS)*8) + 3;

extern volatile __bit P1A @ (((unsigned) &PORTD)*8) + 4;

extern volatile __bit P1B @ (((unsigned) &PORTD)*8) + 5;

extern volatile __bit P1C @ (((unsigned) &PORTD)*8) + 6;

extern volatile __bit P1D @ (((unsigned) &PORTD)*8) + 7;

extern volatile __bit PA1 @ (((unsigned) &PORTC)*8) + 2;

extern volatile __bit PA2 @ (((unsigned) &PORTC)*8) + 1;

extern volatile __bit PA2E @ (((unsigned) &PORTE)*8) + 7;

extern volatile __bit PB1E @ (((unsigned) &PORTE)*8) + 6;

extern volatile __bit PB2 @ (((unsigned) &PORTE)*8) + 2;

extern volatile __bit PB3E @ (((unsigned) &PORTE)*8) + 4;

extern volatile __bit PC1E @ (((unsigned) &PORTE)*8) + 5;

extern volatile __bit PC2 @ (((unsigned) &PORTE)*8) + 1;

extern volatile __bit PC3E @ (((unsigned) &PORTE)*8) + 3;

extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;

extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;

extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;

extern volatile __bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;

extern volatile __bit PD @ (((unsigned) &RCON)*8) + 2;

extern volatile __bit PD2 @ (((unsigned) &PORTE)*8) + 0;

extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;

extern volatile __bit PEIE_GIEL @ (((unsigned) &INTCON)*8) + 6;

extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;

extern volatile __bit PGC @ (((unsigned) &PORTB)*8) + 6;

extern volatile __bit PGD @ (((unsigned) &PORTB)*8) + 7;

extern volatile __bit PGM @ (((unsigned) &PORTB)*8) + 5;

extern volatile __bit POR @ (((unsigned) &RCON)*8) + 1;

extern volatile __bit PRSEG0 @ (((unsigned) &BRGCON2)*8) + 0;

extern volatile __bit PRSEG1 @ (((unsigned) &BRGCON2)*8) + 1;

extern volatile __bit PRSEG2 @ (((unsigned) &BRGCON2)*8) + 2;

extern volatile __bit PSA @ (((unsigned) &T0CON)*8) + 3;

extern volatile __bit PSP0 @ (((unsigned) &PORTD)*8) + 0;

extern volatile __bit PSP1 @ (((unsigned) &PORTD)*8) + 1;

extern volatile __bit PSP2 @ (((unsigned) &PORTD)*8) + 2;

extern volatile __bit PSP3 @ (((unsigned) &PORTD)*8) + 3;

extern volatile __bit PSP4 @ (((unsigned) &PORTD)*8) + 4;

extern volatile __bit PSP5 @ (((unsigned) &PORTD)*8) + 5;

extern volatile __bit PSP6 @ (((unsigned) &PORTD)*8) + 6;

extern volatile __bit PSP7 @ (((unsigned) &PORTD)*8) + 7;

extern volatile __bit PSPIE @ (((unsigned) &PIE1)*8) + 7;

extern volatile __bit PSPIF @ (((unsigned) &PIR1)*8) + 7;

extern volatile __bit PSPIP @ (((unsigned) &IPR1)*8) + 7;

extern volatile __bit PSPMODE @ (((unsigned) &TRISE)*8) + 4;

extern volatile __bit PSSAC0 @ (((unsigned) &ECCPAS)*8) + 2;

extern volatile __bit PSSAC1 @ (((unsigned) &ECCPAS)*8) + 3;

extern volatile __bit PSSBD0 @ (((unsigned) &ECCPAS)*8) + 0;

extern volatile __bit PSSBD1 @ (((unsigned) &ECCPAS)*8) + 1;

extern volatile __bit __attribute__((__deprecated__)) RA0 @ (((unsigned) &PORTA)*8) + 0;

extern volatile __bit __attribute__((__deprecated__)) RA1 @ (((unsigned) &PORTA)*8) + 1;

extern volatile __bit __attribute__((__deprecated__)) RA2 @ (((unsigned) &PORTA)*8) + 2;

extern volatile __bit __attribute__((__deprecated__)) RA3 @ (((unsigned) &PORTA)*8) + 3;

extern volatile __bit __attribute__((__deprecated__)) RA4 @ (((unsigned) &PORTA)*8) + 4;

extern volatile __bit __attribute__((__deprecated__)) RA5 @ (((unsigned) &PORTA)*8) + 5;

extern volatile __bit __attribute__((__deprecated__)) RA6 @ (((unsigned) &PORTA)*8) + 6;

extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;

extern volatile __bit __attribute__((__deprecated__)) RB0 @ (((unsigned) &PORTB)*8) + 0;

extern volatile __bit RB0D00 @ (((unsigned) &RXB0D0)*8) + 0;

extern volatile __bit RB0D01 @ (((unsigned) &RXB0D0)*8) + 1;

extern volatile __bit RB0D02 @ (((unsigned) &RXB0D0)*8) + 2;

extern volatile __bit RB0D03 @ (((unsigned) &RXB0D0)*8) + 3;

extern volatile __bit RB0D04 @ (((unsigned) &RXB0D0)*8) + 4;

extern volatile __bit RB0D05 @ (((unsigned) &RXB0D0)*8) + 5;

extern volatile __bit RB0D06 @ (((unsigned) &RXB0D0)*8) + 6;

extern volatile __bit RB0D07 @ (((unsigned) &RXB0D0)*8) + 7;

extern volatile __bit RB0D10 @ (((unsigned) &RXB0D1)*8) + 0;

extern volatile __bit RB0D11 @ (((unsigned) &RXB0D1)*8) + 1;

extern volatile __bit RB0D12 @ (((unsigned) &RXB0D1)*8) + 2;

extern volatile __bit RB0D13 @ (((unsigned) &RXB0D1)*8) + 3;

extern volatile __bit RB0D14 @ (((unsigned) &RXB0D1)*8) + 4;

extern volatile __bit RB0D15 @ (((unsigned) &RXB0D1)*8) + 5;

extern volatile __bit RB0D16 @ (((unsigned) &RXB0D1)*8) + 6;

extern volatile __bit RB0D17 @ (((unsigned) &RXB0D1)*8) + 7;

extern volatile __bit RB0D20 @ (((unsigned) &RXB0D2)*8) + 0;

extern volatile __bit RB0D21 @ (((unsigned) &RXB0D2)*8) + 1;

extern volatile __bit RB0D22 @ (((unsigned) &RXB0D2)*8) + 2;

extern volatile __bit RB0D23 @ (((unsigned) &RXB0D2)*8) + 3;

extern volatile __bit RB0D24 @ (((unsigned) &RXB0D2)*8) + 4;

extern volatile __bit RB0D25 @ (((unsigned) &RXB0D2)*8) + 5;

extern volatile __bit RB0D26 @ (((unsigned) &RXB0D2)*8) + 6;

extern volatile __bit RB0D27 @ (((unsigned) &RXB0D2)*8) + 7;

extern volatile __bit RB0D30 @ (((unsigned) &RXB0D3)*8) + 0;

extern volatile __bit RB0D31 @ (((unsigned) &RXB0D3)*8) + 1;

extern volatile __bit RB0D32 @ (((unsigned) &RXB0D3)*8) + 2;

extern volatile __bit RB0D33 @ (((unsigned) &RXB0D3)*8) + 3;

extern volatile __bit RB0D34 @ (((unsigned) &RXB0D3)*8) + 4;

extern volatile __bit RB0D35 @ (((unsigned) &RXB0D3)*8) + 5;

extern volatile __bit RB0D36 @ (((unsigned) &RXB0D3)*8) + 6;

extern volatile __bit RB0D37 @ (((unsigned) &RXB0D3)*8) + 7;

extern volatile __bit RB0D40 @ (((unsigned) &RXB0D4)*8) + 0;

extern volatile __bit RB0D41 @ (((unsigned) &RXB0D4)*8) + 1;

extern volatile __bit RB0D42 @ (((unsigned) &RXB0D4)*8) + 2;

extern volatile __bit RB0D43 @ (((unsigned) &RXB0D4)*8) + 3;

extern volatile __bit RB0D44 @ (((unsigned) &RXB0D4)*8) + 4;

extern volatile __bit RB0D45 @ (((unsigned) &RXB0D4)*8) + 5;

extern volatile __bit RB0D46 @ (((unsigned) &RXB0D4)*8) + 6;

extern volatile __bit RB0D47 @ (((unsigned) &RXB0D4)*8) + 7;

extern volatile __bit RB0D50 @ (((unsigned) &RXB0D5)*8) + 0;

extern volatile __bit RB0D51 @ (((unsigned) &RXB0D5)*8) + 1;

extern volatile __bit RB0D52 @ (((unsigned) &RXB0D5)*8) + 2;

extern volatile __bit RB0D53 @ (((unsigned) &RXB0D5)*8) + 3;

extern volatile __bit RB0D54 @ (((unsigned) &RXB0D5)*8) + 4;

extern volatile __bit RB0D55 @ (((unsigned) &RXB0D5)*8) + 5;

extern volatile __bit RB0D56 @ (((unsigned) &RXB0D5)*8) + 6;

extern volatile __bit RB0D57 @ (((unsigned) &RXB0D5)*8) + 7;

extern volatile __bit RB0D60 @ (((unsigned) &RXB0D6)*8) + 0;

extern volatile __bit RB0D61 @ (((unsigned) &RXB0D6)*8) + 1;

extern volatile __bit RB0D62 @ (((unsigned) &RXB0D6)*8) + 2;

extern volatile __bit RB0D63 @ (((unsigned) &RXB0D6)*8) + 3;

extern volatile __bit RB0D64 @ (((unsigned) &RXB0D6)*8) + 4;

extern volatile __bit RB0D65 @ (((unsigned) &RXB0D6)*8) + 5;

extern volatile __bit RB0D66 @ (((unsigned) &RXB0D6)*8) + 6;

extern volatile __bit RB0D67 @ (((unsigned) &RXB0D6)*8) + 7;

extern volatile __bit RB0D70 @ (((unsigned) &RXB0D7)*8) + 0;

extern volatile __bit RB0D71 @ (((unsigned) &RXB0D7)*8) + 1;

extern volatile __bit RB0D72 @ (((unsigned) &RXB0D7)*8) + 2;

extern volatile __bit RB0D73 @ (((unsigned) &RXB0D7)*8) + 3;

extern volatile __bit RB0D74 @ (((unsigned) &RXB0D7)*8) + 4;

extern volatile __bit RB0D75 @ (((unsigned) &RXB0D7)*8) + 5;

extern volatile __bit RB0D76 @ (((unsigned) &RXB0D7)*8) + 6;

extern volatile __bit RB0D77 @ (((unsigned) &RXB0D7)*8) + 7;

extern volatile __bit __attribute__((__deprecated__)) RB1 @ (((unsigned) &PORTB)*8) + 1;

extern volatile __bit __attribute__((__deprecated__)) RB2 @ (((unsigned) &PORTB)*8) + 2;

extern volatile __bit __attribute__((__deprecated__)) RB3 @ (((unsigned) &PORTB)*8) + 3;

extern volatile __bit __attribute__((__deprecated__)) RB4 @ (((unsigned) &PORTB)*8) + 4;

extern volatile __bit __attribute__((__deprecated__)) RB5 @ (((unsigned) &PORTB)*8) + 5;

extern volatile __bit __attribute__((__deprecated__)) RB6 @ (((unsigned) &PORTB)*8) + 6;

extern volatile __bit __attribute__((__deprecated__)) RB7 @ (((unsigned) &PORTB)*8) + 7;

extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;

extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;

extern volatile __bit RBIP @ (((unsigned) &INTCON2)*8) + 0;

extern volatile __bit RBPU @ (((unsigned) &INTCON2)*8) + 7;

extern volatile __bit __attribute__((__deprecated__)) RC0 @ (((unsigned) &PORTC)*8) + 0;

extern volatile __bit __attribute__((__deprecated__)) RC1 @ (((unsigned) &PORTC)*8) + 1;

extern volatile __bit RC1IE @ (((unsigned) &PIE1)*8) + 5;

extern volatile __bit RC1IF @ (((unsigned) &PIR1)*8) + 5;

extern volatile __bit RC1IP @ (((unsigned) &IPR1)*8) + 5;

extern volatile __bit __attribute__((__deprecated__)) RC2 @ (((unsigned) &PORTC)*8) + 2;

extern volatile __bit __attribute__((__deprecated__)) RC3 @ (((unsigned) &PORTC)*8) + 3;

extern volatile __bit __attribute__((__deprecated__)) RC4 @ (((unsigned) &PORTC)*8) + 4;

extern volatile __bit __attribute__((__deprecated__)) RC5 @ (((unsigned) &PORTC)*8) + 5;

extern volatile __bit __attribute__((__deprecated__)) RC6 @ (((unsigned) &PORTC)*8) + 6;

extern volatile __bit __attribute__((__deprecated__)) RC7 @ (((unsigned) &PORTC)*8) + 7;

extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;

extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;

extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;

extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;

extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;

extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;

extern volatile __bit RCIP @ (((unsigned) &IPR1)*8) + 5;

extern volatile __bit __attribute__((__deprecated__)) RD @ (((unsigned) &EECON1)*8) + 0;

extern volatile __bit __attribute__((__deprecated__)) RD0 @ (((unsigned) &PORTD)*8) + 0;

extern volatile __bit __attribute__((__deprecated__)) RD1 @ (((unsigned) &PORTD)*8) + 1;

extern volatile __bit __attribute__((__deprecated__)) RD16 @ (((unsigned) &T1CON)*8) + 7;

extern volatile __bit RD163 @ (((unsigned) &T3CON)*8) + 7;

extern volatile __bit __attribute__((__deprecated__)) RD2 @ (((unsigned) &PORTD)*8) + 2;

extern volatile __bit __attribute__((__deprecated__)) RD3 @ (((unsigned) &PORTD)*8) + 3;

extern volatile __bit __attribute__((__deprecated__)) RD4 @ (((unsigned) &PORTD)*8) + 4;

extern volatile __bit __attribute__((__deprecated__)) RD5 @ (((unsigned) &PORTD)*8) + 5;

extern volatile __bit __attribute__((__deprecated__)) RD6 @ (((unsigned) &PORTD)*8) + 6;

extern volatile __bit __attribute__((__deprecated__)) RD7 @ (((unsigned) &PORTD)*8) + 7;

extern volatile __bit RDE @ (((unsigned) &PORTE)*8) + 0;

extern volatile __bit __attribute__((__deprecated__)) RE0 @ (((unsigned) &PORTE)*8) + 0;

extern volatile __bit __attribute__((__deprecated__)) RE1 @ (((unsigned) &PORTE)*8) + 1;

extern volatile __bit __attribute__((__deprecated__)) RE2 @ (((unsigned) &PORTE)*8) + 2;

extern volatile __bit RE3 @ (((unsigned) &PORTE)*8) + 3;

extern volatile __bit RE4 @ (((unsigned) &PORTE)*8) + 4;

extern volatile __bit RE5 @ (((unsigned) &PORTE)*8) + 5;

extern volatile __bit RE6 @ (((unsigned) &PORTE)*8) + 6;

extern volatile __bit RE7 @ (((unsigned) &PORTE)*8) + 7;

extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit REC0 @ (((unsigned) &RXERRCNT)*8) + 0;

extern volatile __bit REC1 @ (((unsigned) &RXERRCNT)*8) + 1;

extern volatile __bit REC2 @ (((unsigned) &RXERRCNT)*8) + 2;

extern volatile __bit REC3 @ (((unsigned) &RXERRCNT)*8) + 3;

extern volatile __bit REC4 @ (((unsigned) &RXERRCNT)*8) + 4;

extern volatile __bit REC5 @ (((unsigned) &RXERRCNT)*8) + 5;

extern volatile __bit REC6 @ (((unsigned) &RXERRCNT)*8) + 6;

extern volatile __bit REC7 @ (((unsigned) &RXERRCNT)*8) + 7;

extern volatile __bit REQOP0 @ (((unsigned) &CANCON)*8) + 5;

extern volatile __bit REQOP1 @ (((unsigned) &CANCON)*8) + 6;

extern volatile __bit REQOP2 @ (((unsigned) &CANCON)*8) + 7;

extern volatile __bit RI @ (((unsigned) &RCON)*8) + 4;

extern volatile __bit RJPU @ (((unsigned) &PORTA)*8) + 7;

extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;

extern volatile __bit RW @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit RX @ (((unsigned) &PORTC)*8) + 7;

extern volatile __bit RX0IE @ (((unsigned) &PIE3)*8) + 0;

extern volatile __bit RX0IF @ (((unsigned) &PIR3)*8) + 0;

extern volatile __bit RX1IE @ (((unsigned) &PIE3)*8) + 1;

extern volatile __bit RX1IF @ (((unsigned) &PIR3)*8) + 1;

extern volatile __bit RX1OVFL @ (((unsigned) &COMSTAT)*8) + 7;

extern volatile __bit RX2OVFL @ (((unsigned) &COMSTAT)*8) + 6;

extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;

extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;

extern volatile __bit RXB0D00 @ (((unsigned) &RXB0D0)*8) + 0;

extern volatile __bit RXB0D01 @ (((unsigned) &RXB0D0)*8) + 1;

extern volatile __bit RXB0D02 @ (((unsigned) &RXB0D0)*8) + 2;

extern volatile __bit RXB0D03 @ (((unsigned) &RXB0D0)*8) + 3;

extern volatile __bit RXB0D04 @ (((unsigned) &RXB0D0)*8) + 4;

extern volatile __bit RXB0D05 @ (((unsigned) &RXB0D0)*8) + 5;

extern volatile __bit RXB0D06 @ (((unsigned) &RXB0D0)*8) + 6;

extern volatile __bit RXB0D07 @ (((unsigned) &RXB0D0)*8) + 7;

extern volatile __bit RXB0D10 @ (((unsigned) &RXB0D1)*8) + 0;

extern volatile __bit RXB0D11 @ (((unsigned) &RXB0D1)*8) + 1;

extern volatile __bit RXB0D12 @ (((unsigned) &RXB0D1)*8) + 2;

extern volatile __bit RXB0D13 @ (((unsigned) &RXB0D1)*8) + 3;

extern volatile __bit RXB0D14 @ (((unsigned) &RXB0D1)*8) + 4;

extern volatile __bit RXB0D15 @ (((unsigned) &RXB0D1)*8) + 5;

extern volatile __bit RXB0D16 @ (((unsigned) &RXB0D1)*8) + 6;

extern volatile __bit RXB0D17 @ (((unsigned) &RXB0D1)*8) + 7;

extern volatile __bit RXB0D20 @ (((unsigned) &RXB0D2)*8) + 0;

extern volatile __bit RXB0D21 @ (((unsigned) &RXB0D2)*8) + 1;

extern volatile __bit RXB0D22 @ (((unsigned) &RXB0D2)*8) + 2;

extern volatile __bit RXB0D23 @ (((unsigned) &RXB0D2)*8) + 3;

extern volatile __bit RXB0D24 @ (((unsigned) &RXB0D2)*8) + 4;

extern volatile __bit RXB0D25 @ (((unsigned) &RXB0D2)*8) + 5;

extern volatile __bit RXB0D26 @ (((unsigned) &RXB0D2)*8) + 6;

extern volatile __bit RXB0D27 @ (((unsigned) &RXB0D2)*8) + 7;

extern volatile __bit RXB0D30 @ (((unsigned) &RXB0D3)*8) + 0;

extern volatile __bit RXB0D31 @ (((unsigned) &RXB0D3)*8) + 1;

extern volatile __bit RXB0D32 @ (((unsigned) &RXB0D3)*8) + 2;

extern volatile __bit RXB0D33 @ (((unsigned) &RXB0D3)*8) + 3;

extern volatile __bit RXB0D34 @ (((unsigned) &RXB0D3)*8) + 4;

extern volatile __bit RXB0D35 @ (((unsigned) &RXB0D3)*8) + 5;

extern volatile __bit RXB0D36 @ (((unsigned) &RXB0D3)*8) + 6;

extern volatile __bit RXB0D37 @ (((unsigned) &RXB0D3)*8) + 7;

extern volatile __bit RXB0D40 @ (((unsigned) &RXB0D4)*8) + 0;

extern volatile __bit RXB0D41 @ (((unsigned) &RXB0D4)*8) + 1;

extern volatile __bit RXB0D42 @ (((unsigned) &RXB0D4)*8) + 2;

extern volatile __bit RXB0D43 @ (((unsigned) &RXB0D4)*8) + 3;

extern volatile __bit RXB0D44 @ (((unsigned) &RXB0D4)*8) + 4;

extern volatile __bit RXB0D45 @ (((unsigned) &RXB0D4)*8) + 5;

extern volatile __bit RXB0D46 @ (((unsigned) &RXB0D4)*8) + 6;

extern volatile __bit RXB0D47 @ (((unsigned) &RXB0D4)*8) + 7;

extern volatile __bit RXB0D50 @ (((unsigned) &RXB0D5)*8) + 0;

extern volatile __bit RXB0D51 @ (((unsigned) &RXB0D5)*8) + 1;

extern volatile __bit RXB0D52 @ (((unsigned) &RXB0D5)*8) + 2;

extern volatile __bit RXB0D53 @ (((unsigned) &RXB0D5)*8) + 3;

extern volatile __bit RXB0D54 @ (((unsigned) &RXB0D5)*8) + 4;

extern volatile __bit RXB0D55 @ (((unsigned) &RXB0D5)*8) + 5;

extern volatile __bit RXB0D56 @ (((unsigned) &RXB0D5)*8) + 6;

extern volatile __bit RXB0D57 @ (((unsigned) &RXB0D5)*8) + 7;

extern volatile __bit RXB0D60 @ (((unsigned) &RXB0D6)*8) + 0;

extern volatile __bit RXB0D61 @ (((unsigned) &RXB0D6)*8) + 1;

extern volatile __bit RXB0D62 @ (((unsigned) &RXB0D6)*8) + 2;

extern volatile __bit RXB0D63 @ (((unsigned) &RXB0D6)*8) + 3;

extern volatile __bit RXB0D64 @ (((unsigned) &RXB0D6)*8) + 4;

extern volatile __bit RXB0D65 @ (((unsigned) &RXB0D6)*8) + 5;

extern volatile __bit RXB0D66 @ (((unsigned) &RXB0D6)*8) + 6;

extern volatile __bit RXB0D67 @ (((unsigned) &RXB0D6)*8) + 7;

extern volatile __bit RXB0D70 @ (((unsigned) &RXB0D7)*8) + 0;

extern volatile __bit RXB0D71 @ (((unsigned) &RXB0D7)*8) + 1;

extern volatile __bit RXB0D72 @ (((unsigned) &RXB0D7)*8) + 2;

extern volatile __bit RXB0D73 @ (((unsigned) &RXB0D7)*8) + 3;

extern volatile __bit RXB0D74 @ (((unsigned) &RXB0D7)*8) + 4;

extern volatile __bit RXB0D75 @ (((unsigned) &RXB0D7)*8) + 5;

extern volatile __bit RXB0D76 @ (((unsigned) &RXB0D7)*8) + 6;

extern volatile __bit RXB0D77 @ (((unsigned) &RXB0D7)*8) + 7;

extern volatile __bit RXB0DBEN @ (((unsigned) &RXB0CON)*8) + 2;

extern volatile __bit RXB0DLC0 @ (((unsigned) &RXB0DLC)*8) + 0;

extern volatile __bit RXB0DLC1 @ (((unsigned) &RXB0DLC)*8) + 1;

extern volatile __bit RXB0DLC2 @ (((unsigned) &RXB0DLC)*8) + 2;

extern volatile __bit RXB0DLC3 @ (((unsigned) &RXB0DLC)*8) + 3;

extern volatile __bit RXB0EID0 @ (((unsigned) &RXB0EIDL)*8) + 0;

extern volatile __bit RXB0EID1 @ (((unsigned) &RXB0EIDL)*8) + 1;

extern volatile __bit RXB0EID10 @ (((unsigned) &RXB0EIDH)*8) + 2;

extern volatile __bit RXB0EID11 @ (((unsigned) &RXB0EIDH)*8) + 3;

extern volatile __bit RXB0EID12 @ (((unsigned) &RXB0EIDH)*8) + 4;

extern volatile __bit RXB0EID13 @ (((unsigned) &RXB0EIDH)*8) + 5;

extern volatile __bit RXB0EID14 @ (((unsigned) &RXB0EIDH)*8) + 6;

extern volatile __bit RXB0EID15 @ (((unsigned) &RXB0EIDH)*8) + 7;

extern volatile __bit RXB0EID16 @ (((unsigned) &RXB0SIDL)*8) + 0;

extern volatile __bit RXB0EID17 @ (((unsigned) &RXB0SIDL)*8) + 1;

extern volatile __bit RXB0EID2 @ (((unsigned) &RXB0EIDL)*8) + 2;

extern volatile __bit RXB0EID3 @ (((unsigned) &RXB0EIDL)*8) + 3;

extern volatile __bit RXB0EID4 @ (((unsigned) &RXB0EIDL)*8) + 4;

extern volatile __bit RXB0EID5 @ (((unsigned) &RXB0EIDL)*8) + 5;

extern volatile __bit RXB0EID6 @ (((unsigned) &RXB0EIDL)*8) + 6;

extern volatile __bit RXB0EID7 @ (((unsigned) &RXB0EIDL)*8) + 7;

extern volatile __bit RXB0EID8 @ (((unsigned) &RXB0EIDH)*8) + 0;

extern volatile __bit RXB0EID9 @ (((unsigned) &RXB0EIDH)*8) + 1;

extern volatile __bit RXB0EXID @ (((unsigned) &RXB0SIDL)*8) + 3;

extern volatile __bit RXB0FILHIT0 @ (((unsigned) &RXB0CON)*8) + 0;

extern volatile __bit RXB0FILHIT1 @ (((unsigned) &RXB0CON)*8) + 1;

extern volatile __bit RXB0FILHIT2 @ (((unsigned) &RXB0CON)*8) + 2;

extern volatile __bit RXB0FILHIT3 @ (((unsigned) &RXB0CON)*8) + 3;

extern volatile __bit RXB0FUL @ (((unsigned) &RXB0CON)*8) + 7;

extern volatile __bit RXB0IE @ (((unsigned) &PIE3)*8) + 0;

extern volatile __bit RXB0IF @ (((unsigned) &PIR3)*8) + 0;

extern volatile __bit RXB0IP @ (((unsigned) &IPR3)*8) + 0;

extern volatile __bit RXB0M0 @ (((unsigned) &RXB0CON)*8) + 5;

extern volatile __bit RXB0M1 @ (((unsigned) &RXB0CON)*8) + 6;

extern volatile __bit RXB0OVFL @ (((unsigned) &COMSTAT)*8) + 7;

extern volatile __bit RXB0RB0 @ (((unsigned) &RXB0DLC)*8) + 4;

extern volatile __bit RXB0RB1 @ (((unsigned) &RXB0DLC)*8) + 5;

extern volatile __bit RXB0RTR @ (((unsigned) &RXB0DLC)*8) + 6;

extern volatile __bit RXB0RTRR0 @ (((unsigned) &RXB0CON)*8) + 3;

extern volatile __bit RXB0RTRRO @ (((unsigned) &RXB0CON)*8) + 5;

extern volatile __bit RXB0SID0 @ (((unsigned) &RXB0SIDL)*8) + 5;

extern volatile __bit RXB0SID1 @ (((unsigned) &RXB0SIDL)*8) + 6;

extern volatile __bit RXB0SID10 @ (((unsigned) &RXB0SIDH)*8) + 7;

extern volatile __bit RXB0SID2 @ (((unsigned) &RXB0SIDL)*8) + 7;

extern volatile __bit RXB0SID3 @ (((unsigned) &RXB0SIDH)*8) + 0;

extern volatile __bit RXB0SID4 @ (((unsigned) &RXB0SIDH)*8) + 1;

extern volatile __bit RXB0SID5 @ (((unsigned) &RXB0SIDH)*8) + 2;

extern volatile __bit RXB0SID6 @ (((unsigned) &RXB0SIDH)*8) + 3;

extern volatile __bit RXB0SID7 @ (((unsigned) &RXB0SIDH)*8) + 4;

extern volatile __bit RXB0SID8 @ (((unsigned) &RXB0SIDH)*8) + 5;

extern volatile __bit RXB0SID9 @ (((unsigned) &RXB0SIDH)*8) + 6;

extern volatile __bit RXB0SRR @ (((unsigned) &RXB0SIDL)*8) + 4;

extern volatile __bit RXB1D00 @ (((unsigned) &RXB1D0)*8) + 0;

extern volatile __bit RXB1D01 @ (((unsigned) &RXB1D0)*8) + 1;

extern volatile __bit RXB1D02 @ (((unsigned) &RXB1D0)*8) + 2;

extern volatile __bit RXB1D03 @ (((unsigned) &RXB1D0)*8) + 3;

extern volatile __bit RXB1D04 @ (((unsigned) &RXB1D0)*8) + 4;

extern volatile __bit RXB1D05 @ (((unsigned) &RXB1D0)*8) + 5;

extern volatile __bit RXB1D06 @ (((unsigned) &RXB1D0)*8) + 6;

extern volatile __bit RXB1D07 @ (((unsigned) &RXB1D0)*8) + 7;

extern volatile __bit RXB1D10 @ (((unsigned) &RXB1D1)*8) + 0;

extern volatile __bit RXB1D11 @ (((unsigned) &RXB1D1)*8) + 1;

extern volatile __bit RXB1D12 @ (((unsigned) &RXB1D1)*8) + 2;

extern volatile __bit RXB1D13 @ (((unsigned) &RXB1D1)*8) + 3;

extern volatile __bit RXB1D14 @ (((unsigned) &RXB1D1)*8) + 4;

extern volatile __bit RXB1D15 @ (((unsigned) &RXB1D1)*8) + 5;

extern volatile __bit RXB1D16 @ (((unsigned) &RXB1D1)*8) + 6;

extern volatile __bit RXB1D17 @ (((unsigned) &RXB1D1)*8) + 7;

extern volatile __bit RXB1D20 @ (((unsigned) &RXB1D2)*8) + 0;

extern volatile __bit RXB1D21 @ (((unsigned) &RXB1D2)*8) + 1;

extern volatile __bit RXB1D22 @ (((unsigned) &RXB1D2)*8) + 2;

extern volatile __bit RXB1D23 @ (((unsigned) &RXB1D2)*8) + 3;

extern volatile __bit RXB1D24 @ (((unsigned) &RXB1D2)*8) + 4;

extern volatile __bit RXB1D25 @ (((unsigned) &RXB1D2)*8) + 5;

extern volatile __bit RXB1D26 @ (((unsigned) &RXB1D2)*8) + 6;

extern volatile __bit RXB1D27 @ (((unsigned) &RXB1D2)*8) + 7;

extern volatile __bit RXB1D30 @ (((unsigned) &RXB1D3)*8) + 0;

extern volatile __bit RXB1D31 @ (((unsigned) &RXB1D3)*8) + 1;

extern volatile __bit RXB1D32 @ (((unsigned) &RXB1D3)*8) + 2;

extern volatile __bit RXB1D33 @ (((unsigned) &RXB1D3)*8) + 3;

extern volatile __bit RXB1D34 @ (((unsigned) &RXB1D3)*8) + 4;

extern volatile __bit RXB1D35 @ (((unsigned) &RXB1D3)*8) + 5;

extern volatile __bit RXB1D36 @ (((unsigned) &RXB1D3)*8) + 6;

extern volatile __bit RXB1D37 @ (((unsigned) &RXB1D3)*8) + 7;

extern volatile __bit RXB1D40 @ (((unsigned) &RXB1D4)*8) + 0;

extern volatile __bit RXB1D41 @ (((unsigned) &RXB1D4)*8) + 1;

extern volatile __bit RXB1D42 @ (((unsigned) &RXB1D4)*8) + 2;

extern volatile __bit RXB1D43 @ (((unsigned) &RXB1D4)*8) + 3;

extern volatile __bit RXB1D44 @ (((unsigned) &RXB1D4)*8) + 4;

extern volatile __bit RXB1D45 @ (((unsigned) &RXB1D4)*8) + 5;

extern volatile __bit RXB1D46 @ (((unsigned) &RXB1D4)*8) + 6;

extern volatile __bit RXB1D47 @ (((unsigned) &RXB1D4)*8) + 7;

extern volatile __bit RXB1D50 @ (((unsigned) &RXB1D5)*8) + 0;

extern volatile __bit RXB1D51 @ (((unsigned) &RXB1D5)*8) + 1;

extern volatile __bit RXB1D52 @ (((unsigned) &RXB1D5)*8) + 2;

extern volatile __bit RXB1D53 @ (((unsigned) &RXB1D5)*8) + 3;

extern volatile __bit RXB1D54 @ (((unsigned) &RXB1D5)*8) + 4;

extern volatile __bit RXB1D55 @ (((unsigned) &RXB1D5)*8) + 5;

extern volatile __bit RXB1D56 @ (((unsigned) &RXB1D5)*8) + 6;

extern volatile __bit RXB1D57 @ (((unsigned) &RXB1D5)*8) + 7;

extern volatile __bit RXB1D60 @ (((unsigned) &RXB1D6)*8) + 0;

extern volatile __bit RXB1D61 @ (((unsigned) &RXB1D6)*8) + 1;

extern volatile __bit RXB1D62 @ (((unsigned) &RXB1D6)*8) + 2;

extern volatile __bit RXB1D63 @ (((unsigned) &RXB1D6)*8) + 3;

extern volatile __bit RXB1D64 @ (((unsigned) &RXB1D6)*8) + 4;

extern volatile __bit RXB1D65 @ (((unsigned) &RXB1D6)*8) + 5;

extern volatile __bit RXB1D66 @ (((unsigned) &RXB1D6)*8) + 6;

extern volatile __bit RXB1D67 @ (((unsigned) &RXB1D6)*8) + 7;

extern volatile __bit RXB1D70 @ (((unsigned) &RXB1D7)*8) + 0;

extern volatile __bit RXB1D71 @ (((unsigned) &RXB1D7)*8) + 1;

extern volatile __bit RXB1D72 @ (((unsigned) &RXB1D7)*8) + 2;

extern volatile __bit RXB1D73 @ (((unsigned) &RXB1D7)*8) + 3;

extern volatile __bit RXB1D74 @ (((unsigned) &RXB1D7)*8) + 4;

extern volatile __bit RXB1D75 @ (((unsigned) &RXB1D7)*8) + 5;

extern volatile __bit RXB1D76 @ (((unsigned) &RXB1D7)*8) + 6;

extern volatile __bit RXB1D77 @ (((unsigned) &RXB1D7)*8) + 7;

extern volatile __bit RXB1DLC0 @ (((unsigned) &RXB1DLC)*8) + 0;

extern volatile __bit RXB1DLC1 @ (((unsigned) &RXB1DLC)*8) + 1;

extern volatile __bit RXB1DLC2 @ (((unsigned) &RXB1DLC)*8) + 2;

extern volatile __bit RXB1DLC3 @ (((unsigned) &RXB1DLC)*8) + 3;

extern volatile __bit RXB1EID0 @ (((unsigned) &RXB1EIDL)*8) + 0;

extern volatile __bit RXB1EID1 @ (((unsigned) &RXB1EIDL)*8) + 1;

extern volatile __bit RXB1EID10 @ (((unsigned) &RXB1EIDH)*8) + 2;

extern volatile __bit RXB1EID11 @ (((unsigned) &RXB1EIDH)*8) + 3;

extern volatile __bit RXB1EID12 @ (((unsigned) &RXB1EIDH)*8) + 4;

extern volatile __bit RXB1EID13 @ (((unsigned) &RXB1EIDH)*8) + 5;

extern volatile __bit RXB1EID14 @ (((unsigned) &RXB1EIDH)*8) + 6;

extern volatile __bit RXB1EID15 @ (((unsigned) &RXB1EIDH)*8) + 7;

extern volatile __bit RXB1EID16 @ (((unsigned) &RXB1SIDL)*8) + 0;

extern volatile __bit RXB1EID17 @ (((unsigned) &RXB1SIDL)*8) + 1;

extern volatile __bit RXB1EID2 @ (((unsigned) &RXB1EIDL)*8) + 2;

extern volatile __bit RXB1EID3 @ (((unsigned) &RXB1EIDL)*8) + 3;

extern volatile __bit RXB1EID4 @ (((unsigned) &RXB1EIDL)*8) + 4;

extern volatile __bit RXB1EID5 @ (((unsigned) &RXB1EIDL)*8) + 5;

extern volatile __bit RXB1EID6 @ (((unsigned) &RXB1EIDL)*8) + 6;

extern volatile __bit RXB1EID7 @ (((unsigned) &RXB1EIDL)*8) + 7;

extern volatile __bit RXB1EID8 @ (((unsigned) &RXB1EIDH)*8) + 0;

extern volatile __bit RXB1EID9 @ (((unsigned) &RXB1EIDH)*8) + 1;

extern volatile __bit RXB1EXID @ (((unsigned) &RXB1SIDL)*8) + 3;

extern volatile __bit RXB1FILHIT0 @ (((unsigned) &RXB1CON)*8) + 0;

extern volatile __bit RXB1FILHIT1 @ (((unsigned) &RXB1CON)*8) + 1;

extern volatile __bit RXB1FILHIT2 @ (((unsigned) &RXB1CON)*8) + 2;

extern volatile __bit RXB1FILHIT3 @ (((unsigned) &RXB1CON)*8) + 3;

extern volatile __bit RXB1FUL @ (((unsigned) &RXB1CON)*8) + 7;

extern volatile __bit RXB1IE @ (((unsigned) &PIE3)*8) + 1;

extern volatile __bit RXB1IF @ (((unsigned) &PIR3)*8) + 1;

extern volatile __bit RXB1IP @ (((unsigned) &IPR3)*8) + 1;

extern volatile __bit RXB1M0 @ (((unsigned) &RXB1CON)*8) + 5;

extern volatile __bit RXB1M1 @ (((unsigned) &RXB1CON)*8) + 6;

extern volatile __bit RXB1OVFL @ (((unsigned) &COMSTAT)*8) + 6;

extern volatile __bit RXB1RB0 @ (((unsigned) &RXB1DLC)*8) + 4;

extern volatile __bit RXB1RB1 @ (((unsigned) &RXB1DLC)*8) + 5;

extern volatile __bit RXB1RTR @ (((unsigned) &RXB1DLC)*8) + 6;

extern volatile __bit RXB1RTRR0 @ (((unsigned) &RXB1CON)*8) + 3;

extern volatile __bit RXB1RTRRO @ (((unsigned) &RXB1CON)*8) + 5;

extern volatile __bit RXB1SID0 @ (((unsigned) &RXB1SIDL)*8) + 5;

extern volatile __bit RXB1SID1 @ (((unsigned) &RXB1SIDL)*8) + 6;

extern volatile __bit RXB1SID10 @ (((unsigned) &RXB1SIDH)*8) + 7;

extern volatile __bit RXB1SID2 @ (((unsigned) &RXB1SIDL)*8) + 7;

extern volatile __bit RXB1SID3 @ (((unsigned) &RXB1SIDH)*8) + 0;

extern volatile __bit RXB1SID4 @ (((unsigned) &RXB1SIDH)*8) + 1;

extern volatile __bit RXB1SID5 @ (((unsigned) &RXB1SIDH)*8) + 2;

extern volatile __bit RXB1SID6 @ (((unsigned) &RXB1SIDH)*8) + 3;

extern volatile __bit RXB1SID7 @ (((unsigned) &RXB1SIDH)*8) + 4;

extern volatile __bit RXB1SID8 @ (((unsigned) &RXB1SIDH)*8) + 5;

extern volatile __bit RXB1SID9 @ (((unsigned) &RXB1SIDH)*8) + 6;

extern volatile __bit RXB1SRR @ (((unsigned) &RXB1SIDL)*8) + 4;

extern volatile __bit RXBNIE @ (((unsigned) &PIE3)*8) + 1;

extern volatile __bit RXBNIF @ (((unsigned) &PIR3)*8) + 1;

extern volatile __bit RXBNIP @ (((unsigned) &IPR3)*8) + 1;

extern volatile __bit RXBNOVFL @ (((unsigned) &COMSTAT)*8) + 6;

extern volatile __bit RXBP @ (((unsigned) &COMSTAT)*8) + 3;

extern volatile __bit RXF0EID0 @ (((unsigned) &RXF0EIDL)*8) + 0;

extern volatile __bit RXF0EID1 @ (((unsigned) &RXF0EIDL)*8) + 1;

extern volatile __bit RXF0EID10 @ (((unsigned) &RXF0EIDH)*8) + 2;

extern volatile __bit RXF0EID11 @ (((unsigned) &RXF0EIDH)*8) + 3;

extern volatile __bit RXF0EID12 @ (((unsigned) &RXF0EIDH)*8) + 4;

extern volatile __bit RXF0EID13 @ (((unsigned) &RXF0EIDH)*8) + 5;

extern volatile __bit RXF0EID14 @ (((unsigned) &RXF0EIDH)*8) + 6;

extern volatile __bit RXF0EID15 @ (((unsigned) &RXF0EIDH)*8) + 7;

extern volatile __bit RXF0EID16 @ (((unsigned) &RXF0SIDL)*8) + 0;

extern volatile __bit RXF0EID17 @ (((unsigned) &RXF0SIDL)*8) + 1;

extern volatile __bit RXF0EID2 @ (((unsigned) &RXF0EIDL)*8) + 2;

extern volatile __bit RXF0EID3 @ (((unsigned) &RXF0EIDL)*8) + 3;

extern volatile __bit RXF0EID4 @ (((unsigned) &RXF0EIDL)*8) + 4;

extern volatile __bit RXF0EID5 @ (((unsigned) &RXF0EIDL)*8) + 5;

extern volatile __bit RXF0EID6 @ (((unsigned) &RXF0EIDL)*8) + 6;

extern volatile __bit RXF0EID7 @ (((unsigned) &RXF0EIDL)*8) + 7;

extern volatile __bit RXF0EID8 @ (((unsigned) &RXF0EIDH)*8) + 0;

extern volatile __bit RXF0EID9 @ (((unsigned) &RXF0EIDH)*8) + 1;

extern volatile __bit RXF0EXIDEN @ (((unsigned) &RXF0SIDL)*8) + 3;

extern volatile __bit RXF0SID0 @ (((unsigned) &RXF0SIDL)*8) + 5;

extern volatile __bit RXF0SID1 @ (((unsigned) &RXF0SIDL)*8) + 6;

extern volatile __bit RXF0SID10 @ (((unsigned) &RXF0SIDH)*8) + 7;

extern volatile __bit RXF0SID2 @ (((unsigned) &RXF0SIDL)*8) + 7;

extern volatile __bit RXF0SID3 @ (((unsigned) &RXF0SIDH)*8) + 0;

extern volatile __bit RXF0SID4 @ (((unsigned) &RXF0SIDH)*8) + 1;

extern volatile __bit RXF0SID5 @ (((unsigned) &RXF0SIDH)*8) + 2;

extern volatile __bit RXF0SID6 @ (((unsigned) &RXF0SIDH)*8) + 3;

extern volatile __bit RXF0SID7 @ (((unsigned) &RXF0SIDH)*8) + 4;

extern volatile __bit RXF0SID8 @ (((unsigned) &RXF0SIDH)*8) + 5;

extern volatile __bit RXF0SID9 @ (((unsigned) &RXF0SIDH)*8) + 6;

extern volatile __bit RXF1EID0 @ (((unsigned) &RXF1EIDL)*8) + 0;

extern volatile __bit RXF1EID1 @ (((unsigned) &RXF1EIDL)*8) + 1;

extern volatile __bit RXF1EID10 @ (((unsigned) &RXF1EIDH)*8) + 2;

extern volatile __bit RXF1EID11 @ (((unsigned) &RXF1EIDH)*8) + 3;

extern volatile __bit RXF1EID12 @ (((unsigned) &RXF1EIDH)*8) + 4;

extern volatile __bit RXF1EID13 @ (((unsigned) &RXF1EIDH)*8) + 5;

extern volatile __bit RXF1EID14 @ (((unsigned) &RXF1EIDH)*8) + 6;

extern volatile __bit RXF1EID15 @ (((unsigned) &RXF1EIDH)*8) + 7;

extern volatile __bit RXF1EID16 @ (((unsigned) &RXF1SIDL)*8) + 0;

extern volatile __bit RXF1EID17 @ (((unsigned) &RXF1SIDL)*8) + 1;

extern volatile __bit RXF1EID2 @ (((unsigned) &RXF1EIDL)*8) + 2;

extern volatile __bit RXF1EID3 @ (((unsigned) &RXF1EIDL)*8) + 3;

extern volatile __bit RXF1EID4 @ (((unsigned) &RXF1EIDL)*8) + 4;

extern volatile __bit RXF1EID5 @ (((unsigned) &RXF1EIDL)*8) + 5;

extern volatile __bit RXF1EID6 @ (((unsigned) &RXF1EIDL)*8) + 6;

extern volatile __bit RXF1EID7 @ (((unsigned) &RXF1EIDL)*8) + 7;

extern volatile __bit RXF1EID8 @ (((unsigned) &RXF1EIDH)*8) + 0;

extern volatile __bit RXF1EID9 @ (((unsigned) &RXF1EIDH)*8) + 1;

extern volatile __bit RXF1EXIDEN @ (((unsigned) &RXF1SIDL)*8) + 3;

extern volatile __bit RXF1SID0 @ (((unsigned) &RXF1SIDL)*8) + 5;

extern volatile __bit RXF1SID1 @ (((unsigned) &RXF1SIDL)*8) + 6;

extern volatile __bit RXF1SID10 @ (((unsigned) &RXF1SIDH)*8) + 7;

extern volatile __bit RXF1SID2 @ (((unsigned) &RXF1SIDL)*8) + 7;

extern volatile __bit RXF1SID3 @ (((unsigned) &RXF1SIDH)*8) + 0;

extern volatile __bit RXF1SID4 @ (((unsigned) &RXF1SIDH)*8) + 1;

extern volatile __bit RXF1SID5 @ (((unsigned) &RXF1SIDH)*8) + 2;

extern volatile __bit RXF1SID6 @ (((unsigned) &RXF1SIDH)*8) + 3;

extern volatile __bit RXF1SID7 @ (((unsigned) &RXF1SIDH)*8) + 4;

extern volatile __bit RXF1SID8 @ (((unsigned) &RXF1SIDH)*8) + 5;

extern volatile __bit RXF1SID9 @ (((unsigned) &RXF1SIDH)*8) + 6;

extern volatile __bit RXF2EID0 @ (((unsigned) &RXF2EIDL)*8) + 0;

extern volatile __bit RXF2EID1 @ (((unsigned) &RXF2EIDL)*8) + 1;

extern volatile __bit RXF2EID10 @ (((unsigned) &RXF2EIDH)*8) + 2;

extern volatile __bit RXF2EID11 @ (((unsigned) &RXF2EIDH)*8) + 3;

extern volatile __bit RXF2EID12 @ (((unsigned) &RXF2EIDH)*8) + 4;

extern volatile __bit RXF2EID13 @ (((unsigned) &RXF2EIDH)*8) + 5;

extern volatile __bit RXF2EID14 @ (((unsigned) &RXF2EIDH)*8) + 6;

extern volatile __bit RXF2EID15 @ (((unsigned) &RXF2EIDH)*8) + 7;

extern volatile __bit RXF2EID16 @ (((unsigned) &RXF2SIDL)*8) + 0;

extern volatile __bit RXF2EID17 @ (((unsigned) &RXF2SIDL)*8) + 1;

extern volatile __bit RXF2EID2 @ (((unsigned) &RXF2EIDL)*8) + 2;

extern volatile __bit RXF2EID3 @ (((unsigned) &RXF2EIDL)*8) + 3;

extern volatile __bit RXF2EID4 @ (((unsigned) &RXF2EIDL)*8) + 4;

extern volatile __bit RXF2EID5 @ (((unsigned) &RXF2EIDL)*8) + 5;

extern volatile __bit RXF2EID6 @ (((unsigned) &RXF2EIDL)*8) + 6;

extern volatile __bit RXF2EID7 @ (((unsigned) &RXF2EIDL)*8) + 7;

extern volatile __bit RXF2EID8 @ (((unsigned) &RXF2EIDH)*8) + 0;

extern volatile __bit RXF2EID9 @ (((unsigned) &RXF2EIDH)*8) + 1;

extern volatile __bit RXF2EXIDEN @ (((unsigned) &RXF2SIDL)*8) + 3;

extern volatile __bit RXF2SID0 @ (((unsigned) &RXF2SIDL)*8) + 5;

extern volatile __bit RXF2SID1 @ (((unsigned) &RXF2SIDL)*8) + 6;

extern volatile __bit RXF2SID10 @ (((unsigned) &RXF2SIDH)*8) + 7;

extern volatile __bit RXF2SID2 @ (((unsigned) &RXF2SIDL)*8) + 7;

extern volatile __bit RXF2SID3 @ (((unsigned) &RXF2SIDH)*8) + 0;

extern volatile __bit RXF2SID4 @ (((unsigned) &RXF2SIDH)*8) + 1;

extern volatile __bit RXF2SID5 @ (((unsigned) &RXF2SIDH)*8) + 2;

extern volatile __bit RXF2SID6 @ (((unsigned) &RXF2SIDH)*8) + 3;

extern volatile __bit RXF2SID7 @ (((unsigned) &RXF2SIDH)*8) + 4;

extern volatile __bit RXF2SID8 @ (((unsigned) &RXF2SIDH)*8) + 5;

extern volatile __bit RXF2SID9 @ (((unsigned) &RXF2SIDH)*8) + 6;

extern volatile __bit RXF3EID0 @ (((unsigned) &RXF3EIDL)*8) + 0;

extern volatile __bit RXF3EID1 @ (((unsigned) &RXF3EIDL)*8) + 1;

extern volatile __bit RXF3EID10 @ (((unsigned) &RXF3EIDH)*8) + 2;

extern volatile __bit RXF3EID11 @ (((unsigned) &RXF3EIDH)*8) + 3;

extern volatile __bit RXF3EID12 @ (((unsigned) &RXF3EIDH)*8) + 4;

extern volatile __bit RXF3EID13 @ (((unsigned) &RXF3EIDH)*8) + 5;

extern volatile __bit RXF3EID14 @ (((unsigned) &RXF3EIDH)*8) + 6;

extern volatile __bit RXF3EID15 @ (((unsigned) &RXF3EIDH)*8) + 7;

extern volatile __bit RXF3EID16 @ (((unsigned) &RXF3SIDL)*8) + 0;

extern volatile __bit RXF3EID17 @ (((unsigned) &RXF3SIDL)*8) + 1;

extern volatile __bit RXF3EID2 @ (((unsigned) &RXF3EIDL)*8) + 2;

extern volatile __bit RXF3EID3 @ (((unsigned) &RXF3EIDL)*8) + 3;

extern volatile __bit RXF3EID4 @ (((unsigned) &RXF3EIDL)*8) + 4;

extern volatile __bit RXF3EID5 @ (((unsigned) &RXF3EIDL)*8) + 5;

extern volatile __bit RXF3EID6 @ (((unsigned) &RXF3EIDL)*8) + 6;

extern volatile __bit RXF3EID7 @ (((unsigned) &RXF3EIDL)*8) + 7;

extern volatile __bit RXF3EID8 @ (((unsigned) &RXF3EIDH)*8) + 0;

extern volatile __bit RXF3EID9 @ (((unsigned) &RXF3EIDH)*8) + 1;

extern volatile __bit RXF3EXIDEN @ (((unsigned) &RXF3SIDL)*8) + 3;

extern volatile __bit RXF3SID0 @ (((unsigned) &RXF3SIDL)*8) + 5;

extern volatile __bit RXF3SID1 @ (((unsigned) &RXF3SIDL)*8) + 6;

extern volatile __bit RXF3SID10 @ (((unsigned) &RXF3SIDH)*8) + 7;

extern volatile __bit RXF3SID2 @ (((unsigned) &RXF3SIDL)*8) + 7;

extern volatile __bit RXF3SID3 @ (((unsigned) &RXF3SIDH)*8) + 0;

extern volatile __bit RXF3SID4 @ (((unsigned) &RXF3SIDH)*8) + 1;

extern volatile __bit RXF3SID5 @ (((unsigned) &RXF3SIDH)*8) + 2;

extern volatile __bit RXF3SID6 @ (((unsigned) &RXF3SIDH)*8) + 3;

extern volatile __bit RXF3SID7 @ (((unsigned) &RXF3SIDH)*8) + 4;

extern volatile __bit RXF3SID8 @ (((unsigned) &RXF3SIDH)*8) + 5;

extern volatile __bit RXF3SID9 @ (((unsigned) &RXF3SIDH)*8) + 6;

extern volatile __bit RXF4EID0 @ (((unsigned) &RXF4EIDL)*8) + 0;

extern volatile __bit RXF4EID1 @ (((unsigned) &RXF4EIDL)*8) + 1;

extern volatile __bit RXF4EID10 @ (((unsigned) &RXF4EIDH)*8) + 2;

extern volatile __bit RXF4EID11 @ (((unsigned) &RXF4EIDH)*8) + 3;

extern volatile __bit RXF4EID12 @ (((unsigned) &RXF4EIDH)*8) + 4;

extern volatile __bit RXF4EID13 @ (((unsigned) &RXF4EIDH)*8) + 5;

extern volatile __bit RXF4EID14 @ (((unsigned) &RXF4EIDH)*8) + 6;

extern volatile __bit RXF4EID15 @ (((unsigned) &RXF4EIDH)*8) + 7;

extern volatile __bit RXF4EID16 @ (((unsigned) &RXF4SIDL)*8) + 0;

extern volatile __bit RXF4EID17 @ (((unsigned) &RXF4SIDL)*8) + 1;

extern volatile __bit RXF4EID2 @ (((unsigned) &RXF4EIDL)*8) + 2;

extern volatile __bit RXF4EID3 @ (((unsigned) &RXF4EIDL)*8) + 3;

extern volatile __bit RXF4EID4 @ (((unsigned) &RXF4EIDL)*8) + 4;

extern volatile __bit RXF4EID5 @ (((unsigned) &RXF4EIDL)*8) + 5;

extern volatile __bit RXF4EID6 @ (((unsigned) &RXF4EIDL)*8) + 6;

extern volatile __bit RXF4EID7 @ (((unsigned) &RXF4EIDL)*8) + 7;

extern volatile __bit RXF4EID8 @ (((unsigned) &RXF4EIDH)*8) + 0;

extern volatile __bit RXF4EID9 @ (((unsigned) &RXF4EIDH)*8) + 1;

extern volatile __bit RXF4EXIDEN @ (((unsigned) &RXF4SIDL)*8) + 3;

extern volatile __bit RXF4SID0 @ (((unsigned) &RXF4SIDL)*8) + 5;

extern volatile __bit RXF4SID1 @ (((unsigned) &RXF4SIDL)*8) + 6;

extern volatile __bit RXF4SID10 @ (((unsigned) &RXF4SIDH)*8) + 7;

extern volatile __bit RXF4SID2 @ (((unsigned) &RXF4SIDL)*8) + 7;

extern volatile __bit RXF4SID3 @ (((unsigned) &RXF4SIDH)*8) + 0;

extern volatile __bit RXF4SID4 @ (((unsigned) &RXF4SIDH)*8) + 1;

extern volatile __bit RXF4SID5 @ (((unsigned) &RXF4SIDH)*8) + 2;

extern volatile __bit RXF4SID6 @ (((unsigned) &RXF4SIDH)*8) + 3;

extern volatile __bit RXF4SID7 @ (((unsigned) &RXF4SIDH)*8) + 4;

extern volatile __bit RXF4SID8 @ (((unsigned) &RXF4SIDH)*8) + 5;

extern volatile __bit RXF4SID9 @ (((unsigned) &RXF4SIDH)*8) + 6;

extern volatile __bit RXF5EID0 @ (((unsigned) &RXF5EIDL)*8) + 0;

extern volatile __bit RXF5EID1 @ (((unsigned) &RXF5EIDL)*8) + 1;

extern volatile __bit RXF5EID10 @ (((unsigned) &RXF5EIDH)*8) + 2;

extern volatile __bit RXF5EID11 @ (((unsigned) &RXF5EIDH)*8) + 3;

extern volatile __bit RXF5EID12 @ (((unsigned) &RXF5EIDH)*8) + 4;

extern volatile __bit RXF5EID13 @ (((unsigned) &RXF5EIDH)*8) + 5;

extern volatile __bit RXF5EID14 @ (((unsigned) &RXF5EIDH)*8) + 6;

extern volatile __bit RXF5EID15 @ (((unsigned) &RXF5EIDH)*8) + 7;

extern volatile __bit RXF5EID16 @ (((unsigned) &RXF5SIDL)*8) + 0;

extern volatile __bit RXF5EID17 @ (((unsigned) &RXF5SIDL)*8) + 1;

extern volatile __bit RXF5EID2 @ (((unsigned) &RXF5EIDL)*8) + 2;

extern volatile __bit RXF5EID3 @ (((unsigned) &RXF5EIDL)*8) + 3;

extern volatile __bit RXF5EID4 @ (((unsigned) &RXF5EIDL)*8) + 4;

extern volatile __bit RXF5EID5 @ (((unsigned) &RXF5EIDL)*8) + 5;

extern volatile __bit RXF5EID6 @ (((unsigned) &RXF5EIDL)*8) + 6;

extern volatile __bit RXF5EID7 @ (((unsigned) &RXF5EIDL)*8) + 7;

extern volatile __bit RXF5EID8 @ (((unsigned) &RXF5EIDH)*8) + 0;

extern volatile __bit RXF5EID9 @ (((unsigned) &RXF5EIDH)*8) + 1;

extern volatile __bit RXF5EXIDEN @ (((unsigned) &RXF5SIDL)*8) + 3;

extern volatile __bit RXF5SID0 @ (((unsigned) &RXF5SIDL)*8) + 5;

extern volatile __bit RXF5SID1 @ (((unsigned) &RXF5SIDL)*8) + 6;

extern volatile __bit RXF5SID10 @ (((unsigned) &RXF5SIDH)*8) + 7;

extern volatile __bit RXF5SID2 @ (((unsigned) &RXF5SIDL)*8) + 7;

extern volatile __bit RXF5SID3 @ (((unsigned) &RXF5SIDH)*8) + 0;

extern volatile __bit RXF5SID4 @ (((unsigned) &RXF5SIDH)*8) + 1;

extern volatile __bit RXF5SID5 @ (((unsigned) &RXF5SIDH)*8) + 2;

extern volatile __bit RXF5SID6 @ (((unsigned) &RXF5SIDH)*8) + 3;

extern volatile __bit RXF5SID7 @ (((unsigned) &RXF5SIDH)*8) + 4;

extern volatile __bit RXF5SID8 @ (((unsigned) &RXF5SIDH)*8) + 5;

extern volatile __bit RXF5SID9 @ (((unsigned) &RXF5SIDH)*8) + 6;

extern volatile __bit RXM0EID0 @ (((unsigned) &RXM0EIDL)*8) + 0;

extern volatile __bit RXM0EID1 @ (((unsigned) &RXM0EIDL)*8) + 1;

extern volatile __bit RXM0EID10 @ (((unsigned) &RXM0EIDH)*8) + 2;

extern volatile __bit RXM0EID11 @ (((unsigned) &RXM0EIDH)*8) + 3;

extern volatile __bit RXM0EID12 @ (((unsigned) &RXM0EIDH)*8) + 4;

extern volatile __bit RXM0EID13 @ (((unsigned) &RXM0EIDH)*8) + 5;

extern volatile __bit RXM0EID14 @ (((unsigned) &RXM0EIDH)*8) + 6;

extern volatile __bit RXM0EID15 @ (((unsigned) &RXM0EIDH)*8) + 7;

extern volatile __bit RXM0EID16 @ (((unsigned) &RXM0SIDL)*8) + 0;

extern volatile __bit RXM0EID17 @ (((unsigned) &RXM0SIDL)*8) + 1;

extern volatile __bit RXM0EID2 @ (((unsigned) &RXM0EIDL)*8) + 2;

extern volatile __bit RXM0EID3 @ (((unsigned) &RXM0EIDL)*8) + 3;

extern volatile __bit RXM0EID4 @ (((unsigned) &RXM0EIDL)*8) + 4;

extern volatile __bit RXM0EID5 @ (((unsigned) &RXM0EIDL)*8) + 5;

extern volatile __bit RXM0EID6 @ (((unsigned) &RXM0EIDL)*8) + 6;

extern volatile __bit RXM0EID7 @ (((unsigned) &RXM0EIDL)*8) + 7;

extern volatile __bit RXM0EID8 @ (((unsigned) &RXM0EIDH)*8) + 0;

extern volatile __bit RXM0EID9 @ (((unsigned) &RXM0EIDH)*8) + 1;

extern volatile __bit RXM0SID0 @ (((unsigned) &RXM0SIDL)*8) + 5;

extern volatile __bit RXM0SID1 @ (((unsigned) &RXM0SIDL)*8) + 6;

extern volatile __bit RXM0SID10 @ (((unsigned) &RXM0SIDH)*8) + 7;

extern volatile __bit RXM0SID2 @ (((unsigned) &RXM0SIDL)*8) + 7;

extern volatile __bit RXM0SID3 @ (((unsigned) &RXM0SIDH)*8) + 0;

extern volatile __bit RXM0SID4 @ (((unsigned) &RXM0SIDH)*8) + 1;

extern volatile __bit RXM0SID5 @ (((unsigned) &RXM0SIDH)*8) + 2;

extern volatile __bit RXM0SID6 @ (((unsigned) &RXM0SIDH)*8) + 3;

extern volatile __bit RXM0SID7 @ (((unsigned) &RXM0SIDH)*8) + 4;

extern volatile __bit RXM0SID8 @ (((unsigned) &RXM0SIDH)*8) + 5;

extern volatile __bit RXM0SID9 @ (((unsigned) &RXM0SIDH)*8) + 6;

extern volatile __bit RXM1EID0 @ (((unsigned) &RXM1EIDL)*8) + 0;

extern volatile __bit RXM1EID1 @ (((unsigned) &RXM1EIDL)*8) + 1;

extern volatile __bit RXM1EID10 @ (((unsigned) &RXM1EIDH)*8) + 2;

extern volatile __bit RXM1EID11 @ (((unsigned) &RXM1EIDH)*8) + 3;

extern volatile __bit RXM1EID12 @ (((unsigned) &RXM1EIDH)*8) + 4;

extern volatile __bit RXM1EID13 @ (((unsigned) &RXM1EIDH)*8) + 5;

extern volatile __bit RXM1EID14 @ (((unsigned) &RXM1EIDH)*8) + 6;

extern volatile __bit RXM1EID15 @ (((unsigned) &RXM1EIDH)*8) + 7;

extern volatile __bit RXM1EID16 @ (((unsigned) &RXM1SIDL)*8) + 0;

extern volatile __bit RXM1EID17 @ (((unsigned) &RXM1SIDL)*8) + 1;

extern volatile __bit RXM1EID2 @ (((unsigned) &RXM1EIDL)*8) + 2;

extern volatile __bit RXM1EID3 @ (((unsigned) &RXM1EIDL)*8) + 3;

extern volatile __bit RXM1EID4 @ (((unsigned) &RXM1EIDL)*8) + 4;

extern volatile __bit RXM1EID5 @ (((unsigned) &RXM1EIDL)*8) + 5;

extern volatile __bit RXM1EID6 @ (((unsigned) &RXM1EIDL)*8) + 6;

extern volatile __bit RXM1EID7 @ (((unsigned) &RXM1EIDL)*8) + 7;

extern volatile __bit RXM1EID8 @ (((unsigned) &RXM1EIDH)*8) + 0;

extern volatile __bit RXM1EID9 @ (((unsigned) &RXM1EIDH)*8) + 1;

extern volatile __bit RXM1SID0 @ (((unsigned) &RXM1SIDL)*8) + 5;

extern volatile __bit RXM1SID1 @ (((unsigned) &RXM1SIDL)*8) + 6;

extern volatile __bit RXM1SID10 @ (((unsigned) &RXM1SIDH)*8) + 7;

extern volatile __bit RXM1SID2 @ (((unsigned) &RXM1SIDL)*8) + 7;

extern volatile __bit RXM1SID3 @ (((unsigned) &RXM1SIDH)*8) + 0;

extern volatile __bit RXM1SID4 @ (((unsigned) &RXM1SIDH)*8) + 1;

extern volatile __bit RXM1SID5 @ (((unsigned) &RXM1SIDH)*8) + 2;

extern volatile __bit RXM1SID6 @ (((unsigned) &RXM1SIDH)*8) + 3;

extern volatile __bit RXM1SID7 @ (((unsigned) &RXM1SIDH)*8) + 4;

extern volatile __bit RXM1SID8 @ (((unsigned) &RXM1SIDH)*8) + 5;

extern volatile __bit RXM1SID9 @ (((unsigned) &RXM1SIDH)*8) + 6;

extern volatile __bit RXWARN @ (((unsigned) &COMSTAT)*8) + 1;

extern volatile __bit R_NOT_W @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit SAM @ (((unsigned) &BRGCON2)*8) + 6;

extern volatile __bit SCK @ (((unsigned) &PORTC)*8) + 3;

extern volatile __bit SCL @ (((unsigned) &PORTC)*8) + 3;

extern volatile __bit SCS @ (((unsigned) &OSCCON)*8) + 0;

extern volatile __bit SDA @ (((unsigned) &PORTC)*8) + 4;

extern volatile __bit SDI @ (((unsigned) &PORTC)*8) + 4;

extern volatile __bit SDO @ (((unsigned) &PORTC)*8) + 5;

extern volatile __bit SEG1PH0 @ (((unsigned) &BRGCON2)*8) + 3;

extern volatile __bit SEG1PH1 @ (((unsigned) &BRGCON2)*8) + 4;

extern volatile __bit SEG1PH2 @ (((unsigned) &BRGCON2)*8) + 5;

extern volatile __bit SEG2PH0 @ (((unsigned) &BRGCON3)*8) + 0;

extern volatile __bit SEG2PH1 @ (((unsigned) &BRGCON3)*8) + 1;

extern volatile __bit SEG2PH2 @ (((unsigned) &BRGCON3)*8) + 2;

extern volatile __bit SEG2PHT @ (((unsigned) &BRGCON2)*8) + 7;

extern volatile __bit SEG2PHTS @ (((unsigned) &BRGCON2)*8) + 7;

extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;

extern volatile __bit SJW0 @ (((unsigned) &BRGCON1)*8) + 6;

extern volatile __bit SJW1 @ (((unsigned) &BRGCON1)*8) + 7;

extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;

extern volatile __bit SOSCEN @ (((unsigned) &T1CON)*8) + 3;

extern volatile __bit SOSCEN3 @ (((unsigned) &T3CON)*8) + 3;

extern volatile __bit SP0 @ (((unsigned) &STKPTR)*8) + 0;

extern volatile __bit SP1 @ (((unsigned) &STKPTR)*8) + 1;

extern volatile __bit SP2 @ (((unsigned) &STKPTR)*8) + 2;

extern volatile __bit SP3 @ (((unsigned) &STKPTR)*8) + 3;

extern volatile __bit SP4 @ (((unsigned) &STKPTR)*8) + 4;

extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;

extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;

extern volatile __bit SRENA @ (((unsigned) &RCSTA)*8) + 5;

extern volatile __bit SS @ (((unsigned) &PORTA)*8) + 5;

extern volatile __bit SS2 @ (((unsigned) &PORTD)*8) + 7;

extern volatile __bit SSPEN @ (((unsigned) &SSPCON1)*8) + 5;

extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;

extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;

extern volatile __bit SSPIP @ (((unsigned) &IPR1)*8) + 3;

extern volatile __bit SSPM0 @ (((unsigned) &SSPCON1)*8) + 0;

extern volatile __bit SSPM1 @ (((unsigned) &SSPCON1)*8) + 1;

extern volatile __bit SSPM2 @ (((unsigned) &SSPCON1)*8) + 2;

extern volatile __bit SSPM3 @ (((unsigned) &SSPCON1)*8) + 3;

extern volatile __bit SSPOV @ (((unsigned) &SSPCON1)*8) + 6;

extern volatile __bit START @ (((unsigned) &SSPSTAT)*8) + 3;

extern volatile __bit STKFUL @ (((unsigned) &STKPTR)*8) + 7;

extern volatile __bit STKOVF @ (((unsigned) &STKPTR)*8) + 7;

extern volatile __bit STKPTR0 @ (((unsigned) &STKPTR)*8) + 0;

extern volatile __bit STKPTR1 @ (((unsigned) &STKPTR)*8) + 1;

extern volatile __bit STKPTR2 @ (((unsigned) &STKPTR)*8) + 2;

extern volatile __bit STKPTR3 @ (((unsigned) &STKPTR)*8) + 3;

extern volatile __bit STKPTR4 @ (((unsigned) &STKPTR)*8) + 4;

extern volatile __bit STKUNF @ (((unsigned) &STKPTR)*8) + 6;

extern volatile __bit STOP @ (((unsigned) &SSPSTAT)*8) + 4;

extern volatile __bit SWDTE @ (((unsigned) &WDTCON)*8) + 0;

extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;

extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;

extern volatile __bit SYNC1 @ (((unsigned) &TXSTA)*8) + 4;

extern volatile __bit T08BIT @ (((unsigned) &T0CON)*8) + 6;

extern volatile __bit T0CKI @ (((unsigned) &PORTA)*8) + 4;

extern volatile __bit T0CS @ (((unsigned) &T0CON)*8) + 5;

extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;

extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;

extern volatile __bit T0IP @ (((unsigned) &INTCON2)*8) + 2;

extern volatile __bit T0PS0 @ (((unsigned) &T0CON)*8) + 0;

extern volatile __bit T0PS1 @ (((unsigned) &T0CON)*8) + 1;

extern volatile __bit T0PS2 @ (((unsigned) &T0CON)*8) + 2;

extern volatile __bit T0SE @ (((unsigned) &T0CON)*8) + 4;

extern volatile __bit T1CKI @ (((unsigned) &PORTC)*8) + 0;

extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;

extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;

extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;

extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;

extern volatile __bit T1OSI @ (((unsigned) &PORTC)*8) + 1;

extern volatile __bit T1OSO @ (((unsigned) &PORTC)*8) + 0;

extern volatile __bit T1RD16 @ (((unsigned) &T1CON)*8) + 7;

extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;

extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;

extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;

extern volatile __bit T3CCP1 @ (((unsigned) &T3CON)*8) + 3;

extern volatile __bit T3CKPS0 @ (((unsigned) &T3CON)*8) + 4;

extern volatile __bit T3CKPS1 @ (((unsigned) &T3CON)*8) + 5;

extern volatile __bit T3ECCP1 @ (((unsigned) &T3CON)*8) + 6;

extern volatile __bit T3INSYNC @ (((unsigned) &T3CON)*8) + 2;

extern volatile __bit T3RD16 @ (((unsigned) &T3CON)*8) + 7;

extern volatile __bit T3SYNC @ (((unsigned) &T3CON)*8) + 2;

extern volatile __bit TBB1D23 @ (((unsigned) &TXB1D2)*8) + 3;

extern volatile __bit TEC0 @ (((unsigned) &TXERRCNT)*8) + 0;

extern volatile __bit TEC1 @ (((unsigned) &TXERRCNT)*8) + 1;

extern volatile __bit TEC2 @ (((unsigned) &TXERRCNT)*8) + 2;

extern volatile __bit TEC3 @ (((unsigned) &TXERRCNT)*8) + 3;

extern volatile __bit TEC4 @ (((unsigned) &TXERRCNT)*8) + 4;

extern volatile __bit TEC5 @ (((unsigned) &TXERRCNT)*8) + 5;

extern volatile __bit TEC6 @ (((unsigned) &TXERRCNT)*8) + 6;

extern volatile __bit TEC7 @ (((unsigned) &TXERRCNT)*8) + 7;

extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;

extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;

extern volatile __bit TMR0IP @ (((unsigned) &INTCON2)*8) + 2;

extern volatile __bit TMR0ON @ (((unsigned) &T0CON)*8) + 7;

extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;

extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;

extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;

extern volatile __bit TMR1IP @ (((unsigned) &IPR1)*8) + 0;

extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;

extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;

extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;

extern volatile __bit TMR2IP @ (((unsigned) &IPR1)*8) + 1;

extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;

extern volatile __bit TMR3CS @ (((unsigned) &T3CON)*8) + 1;

extern volatile __bit TMR3IE @ (((unsigned) &PIE2)*8) + 1;

extern volatile __bit TMR3IF @ (((unsigned) &PIR2)*8) + 1;

extern volatile __bit TMR3IP @ (((unsigned) &IPR2)*8) + 1;

extern volatile __bit TMR3ON @ (((unsigned) &T3CON)*8) + 0;

extern volatile __bit TO @ (((unsigned) &RCON)*8) + 3;

extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;

extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;

extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;

extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;

extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;

extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;

extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;

extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;

extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;

extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;

extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;

extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;

extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;

extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;

extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;

extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;

extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;

extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;

extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;

extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;

extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;

extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;

extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;

extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;

extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;

extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;

extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;

extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;

extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;

extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;

extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;

extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;

extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;

extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;

extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;

extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;

extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;

extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;

extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;

extern volatile __bit TRMT1 @ (((unsigned) &TXSTA)*8) + 1;

extern volatile __bit TX @ (((unsigned) &PORTC)*8) + 6;

extern volatile __bit TX0IE @ (((unsigned) &PIE3)*8) + 2;

extern volatile __bit TX0IF @ (((unsigned) &PIR3)*8) + 2;

extern volatile __bit __attribute__((__deprecated__)) TX1IE @ (((unsigned) &PIE3)*8) + 3;

extern volatile __bit __attribute__((__deprecated__)) TX1IF @ (((unsigned) &PIR3)*8) + 3;

extern volatile __bit TX1IP @ (((unsigned) &IPR1)*8) + 4;

extern volatile __bit TX2IE @ (((unsigned) &PIE3)*8) + 4;

extern volatile __bit TX2IF @ (((unsigned) &PIR3)*8) + 4;

extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;

extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;

extern volatile __bit TX91 @ (((unsigned) &TXSTA)*8) + 6;

extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;

extern volatile __bit TX9D1 @ (((unsigned) &TXSTA)*8) + 0;

extern volatile __bit TXB0ABT @ (((unsigned) &TXB0CON)*8) + 6;

extern volatile __bit TXB0D00 @ (((unsigned) &TXB0D0)*8) + 0;

extern volatile __bit TXB0D01 @ (((unsigned) &TXB0D0)*8) + 1;

extern volatile __bit TXB0D02 @ (((unsigned) &TXB0D0)*8) + 2;

extern volatile __bit TXB0D03 @ (((unsigned) &TXB0D0)*8) + 3;

extern volatile __bit TXB0D04 @ (((unsigned) &TXB0D0)*8) + 4;

extern volatile __bit TXB0D05 @ (((unsigned) &TXB0D0)*8) + 5;

extern volatile __bit TXB0D06 @ (((unsigned) &TXB0D0)*8) + 6;

extern volatile __bit TXB0D07 @ (((unsigned) &TXB0D0)*8) + 7;

extern volatile __bit TXB0D10 @ (((unsigned) &TXB0D1)*8) + 0;

extern volatile __bit TXB0D11 @ (((unsigned) &TXB0D1)*8) + 1;

extern volatile __bit TXB0D12 @ (((unsigned) &TXB0D1)*8) + 2;

extern volatile __bit TXB0D13 @ (((unsigned) &TXB0D1)*8) + 3;

extern volatile __bit TXB0D14 @ (((unsigned) &TXB0D1)*8) + 4;

extern volatile __bit TXB0D15 @ (((unsigned) &TXB0D1)*8) + 5;

extern volatile __bit TXB0D16 @ (((unsigned) &TXB0D1)*8) + 6;

extern volatile __bit TXB0D17 @ (((unsigned) &TXB0D1)*8) + 7;

extern volatile __bit TXB0D20 @ (((unsigned) &TXB0D2)*8) + 0;

extern volatile __bit TXB0D21 @ (((unsigned) &TXB0D2)*8) + 1;

extern volatile __bit TXB0D22 @ (((unsigned) &TXB0D2)*8) + 2;

extern volatile __bit TXB0D23 @ (((unsigned) &TXB0D2)*8) + 3;

extern volatile __bit TXB0D24 @ (((unsigned) &TXB0D2)*8) + 4;

extern volatile __bit TXB0D25 @ (((unsigned) &TXB0D2)*8) + 5;

extern volatile __bit TXB0D26 @ (((unsigned) &TXB0D2)*8) + 6;

extern volatile __bit TXB0D27 @ (((unsigned) &TXB0D2)*8) + 7;

extern volatile __bit TXB0D30 @ (((unsigned) &TXB0D3)*8) + 0;

extern volatile __bit TXB0D31 @ (((unsigned) &TXB0D3)*8) + 1;

extern volatile __bit TXB0D32 @ (((unsigned) &TXB0D3)*8) + 2;

extern volatile __bit TXB0D33 @ (((unsigned) &TXB0D3)*8) + 3;

extern volatile __bit TXB0D34 @ (((unsigned) &TXB0D3)*8) + 4;

extern volatile __bit TXB0D35 @ (((unsigned) &TXB0D3)*8) + 5;

extern volatile __bit TXB0D36 @ (((unsigned) &TXB0D3)*8) + 6;

extern volatile __bit TXB0D37 @ (((unsigned) &TXB0D3)*8) + 7;

extern volatile __bit TXB0D40 @ (((unsigned) &TXB0D4)*8) + 0;

extern volatile __bit TXB0D41 @ (((unsigned) &TXB0D4)*8) + 1;

extern volatile __bit TXB0D42 @ (((unsigned) &TXB0D4)*8) + 2;

extern volatile __bit TXB0D43 @ (((unsigned) &TXB0D4)*8) + 3;

extern volatile __bit TXB0D44 @ (((unsigned) &TXB0D4)*8) + 4;

extern volatile __bit TXB0D45 @ (((unsigned) &TXB0D4)*8) + 5;

extern volatile __bit TXB0D46 @ (((unsigned) &TXB0D4)*8) + 6;

extern volatile __bit TXB0D47 @ (((unsigned) &TXB0D4)*8) + 7;

extern volatile __bit TXB0D50 @ (((unsigned) &TXB0D5)*8) + 0;

extern volatile __bit TXB0D51 @ (((unsigned) &TXB0D5)*8) + 1;

extern volatile __bit TXB0D52 @ (((unsigned) &TXB0D5)*8) + 2;

extern volatile __bit TXB0D53 @ (((unsigned) &TXB0D5)*8) + 3;

extern volatile __bit TXB0D54 @ (((unsigned) &TXB0D5)*8) + 4;

extern volatile __bit TXB0D55 @ (((unsigned) &TXB0D5)*8) + 5;

extern volatile __bit TXB0D56 @ (((unsigned) &TXB0D5)*8) + 6;

extern volatile __bit TXB0D57 @ (((unsigned) &TXB0D5)*8) + 7;

extern volatile __bit TXB0D60 @ (((unsigned) &TXB0D6)*8) + 0;

extern volatile __bit TXB0D61 @ (((unsigned) &TXB0D6)*8) + 1;

extern volatile __bit TXB0D62 @ (((unsigned) &TXB0D6)*8) + 2;

extern volatile __bit TXB0D63 @ (((unsigned) &TXB0D6)*8) + 3;

extern volatile __bit TXB0D64 @ (((unsigned) &TXB0D6)*8) + 4;

extern volatile __bit TXB0D65 @ (((unsigned) &TXB0D6)*8) + 5;

extern volatile __bit TXB0D66 @ (((unsigned) &TXB0D6)*8) + 6;

extern volatile __bit TXB0D67 @ (((unsigned) &TXB0D6)*8) + 7;

extern volatile __bit TXB0D70 @ (((unsigned) &TXB0D7)*8) + 0;

extern volatile __bit TXB0D71 @ (((unsigned) &TXB0D7)*8) + 1;

extern volatile __bit TXB0D72 @ (((unsigned) &TXB0D7)*8) + 2;

extern volatile __bit TXB0D73 @ (((unsigned) &TXB0D7)*8) + 3;

extern volatile __bit TXB0D74 @ (((unsigned) &TXB0D7)*8) + 4;

extern volatile __bit TXB0D75 @ (((unsigned) &TXB0D7)*8) + 5;

extern volatile __bit TXB0D76 @ (((unsigned) &TXB0D7)*8) + 6;

extern volatile __bit TXB0D77 @ (((unsigned) &TXB0D7)*8) + 7;

extern volatile __bit TXB0DLC0 @ (((unsigned) &TXB0DLC)*8) + 0;

extern volatile __bit TXB0DLC1 @ (((unsigned) &TXB0DLC)*8) + 1;

extern volatile __bit TXB0DLC2 @ (((unsigned) &TXB0DLC)*8) + 2;

extern volatile __bit TXB0DLC3 @ (((unsigned) &TXB0DLC)*8) + 3;

extern volatile __bit TXB0EID0 @ (((unsigned) &TXB0EIDL)*8) + 0;

extern volatile __bit TXB0EID1 @ (((unsigned) &TXB0EIDL)*8) + 1;

extern volatile __bit TXB0EID10 @ (((unsigned) &TXB0EIDH)*8) + 2;

extern volatile __bit TXB0EID11 @ (((unsigned) &TXB0EIDH)*8) + 3;

extern volatile __bit TXB0EID12 @ (((unsigned) &TXB0EIDH)*8) + 4;

extern volatile __bit TXB0EID13 @ (((unsigned) &TXB0EIDH)*8) + 5;

extern volatile __bit TXB0EID14 @ (((unsigned) &TXB0EIDH)*8) + 6;

extern volatile __bit TXB0EID15 @ (((unsigned) &TXB0EIDH)*8) + 7;

extern volatile __bit TXB0EID16 @ (((unsigned) &TXB0SIDL)*8) + 0;

extern volatile __bit TXB0EID17 @ (((unsigned) &TXB0SIDL)*8) + 1;

extern volatile __bit TXB0EID2 @ (((unsigned) &TXB0EIDL)*8) + 2;

extern volatile __bit TXB0EID3 @ (((unsigned) &TXB0EIDL)*8) + 3;

extern volatile __bit TXB0EID4 @ (((unsigned) &TXB0EIDL)*8) + 4;

extern volatile __bit TXB0EID5 @ (((unsigned) &TXB0EIDL)*8) + 5;

extern volatile __bit TXB0EID6 @ (((unsigned) &TXB0EIDL)*8) + 6;

extern volatile __bit TXB0EID7 @ (((unsigned) &TXB0EIDL)*8) + 7;

extern volatile __bit TXB0EID8 @ (((unsigned) &TXB0EIDH)*8) + 0;

extern volatile __bit TXB0EID9 @ (((unsigned) &TXB0EIDH)*8) + 1;

extern volatile __bit TXB0ERR @ (((unsigned) &TXB0CON)*8) + 4;

extern volatile __bit TXB0EXIDE @ (((unsigned) &TXB0SIDL)*8) + 3;

extern volatile __bit TXB0IE @ (((unsigned) &PIE3)*8) + 2;

extern volatile __bit TXB0IF @ (((unsigned) &PIR3)*8) + 2;

extern volatile __bit TXB0IP @ (((unsigned) &IPR3)*8) + 2;

extern volatile __bit TXB0LARB @ (((unsigned) &TXB0CON)*8) + 5;

extern volatile __bit TXB0PRI0 @ (((unsigned) &TXB0CON)*8) + 0;

extern volatile __bit TXB0PRI1 @ (((unsigned) &TXB0CON)*8) + 1;

extern volatile __bit TXB0REQ @ (((unsigned) &TXB0CON)*8) + 3;

extern volatile __bit TXB0RTR @ (((unsigned) &TXB0DLC)*8) + 6;

extern volatile __bit TXB0SID0 @ (((unsigned) &TXB0SIDL)*8) + 5;

extern volatile __bit TXB0SID1 @ (((unsigned) &TXB0SIDL)*8) + 6;

extern volatile __bit TXB0SID10 @ (((unsigned) &TXB0SIDH)*8) + 7;

extern volatile __bit TXB0SID2 @ (((unsigned) &TXB0SIDL)*8) + 7;

extern volatile __bit TXB0SID3 @ (((unsigned) &TXB0SIDH)*8) + 0;

extern volatile __bit TXB0SID4 @ (((unsigned) &TXB0SIDH)*8) + 1;

extern volatile __bit TXB0SID5 @ (((unsigned) &TXB0SIDH)*8) + 2;

extern volatile __bit TXB0SID6 @ (((unsigned) &TXB0SIDH)*8) + 3;

extern volatile __bit TXB0SID7 @ (((unsigned) &TXB0SIDH)*8) + 4;

extern volatile __bit TXB0SID8 @ (((unsigned) &TXB0SIDH)*8) + 5;

extern volatile __bit TXB0SID9 @ (((unsigned) &TXB0SIDH)*8) + 6;

extern volatile __bit TXB1ABT @ (((unsigned) &TXB1CON)*8) + 6;

extern volatile __bit TXB1D00 @ (((unsigned) &TXB1D0)*8) + 0;

extern volatile __bit TXB1D01 @ (((unsigned) &TXB1D0)*8) + 1;

extern volatile __bit TXB1D02 @ (((unsigned) &TXB1D0)*8) + 2;

extern volatile __bit TXB1D03 @ (((unsigned) &TXB1D0)*8) + 3;

extern volatile __bit TXB1D04 @ (((unsigned) &TXB1D0)*8) + 4;

extern volatile __bit TXB1D05 @ (((unsigned) &TXB1D0)*8) + 5;

extern volatile __bit TXB1D06 @ (((unsigned) &TXB1D0)*8) + 6;

extern volatile __bit TXB1D07 @ (((unsigned) &TXB1D0)*8) + 7;

extern volatile __bit TXB1D10 @ (((unsigned) &TXB1D1)*8) + 0;

extern volatile __bit TXB1D11 @ (((unsigned) &TXB1D1)*8) + 1;

extern volatile __bit TXB1D12 @ (((unsigned) &TXB1D1)*8) + 2;

extern volatile __bit TXB1D13 @ (((unsigned) &TXB1D1)*8) + 3;

extern volatile __bit TXB1D14 @ (((unsigned) &TXB1D1)*8) + 4;

extern volatile __bit TXB1D15 @ (((unsigned) &TXB1D1)*8) + 5;

extern volatile __bit TXB1D16 @ (((unsigned) &TXB1D1)*8) + 6;

extern volatile __bit TXB1D17 @ (((unsigned) &TXB1D1)*8) + 7;

extern volatile __bit TXB1D20 @ (((unsigned) &TXB1D2)*8) + 0;

extern volatile __bit TXB1D21 @ (((unsigned) &TXB1D2)*8) + 1;

extern volatile __bit TXB1D22 @ (((unsigned) &TXB1D2)*8) + 2;

extern volatile __bit TXB1D23 @ (((unsigned) &TXB1D2)*8) + 3;

extern volatile __bit TXB1D24 @ (((unsigned) &TXB1D2)*8) + 4;

extern volatile __bit TXB1D25 @ (((unsigned) &TXB1D2)*8) + 5;

extern volatile __bit TXB1D26 @ (((unsigned) &TXB1D2)*8) + 6;

extern volatile __bit TXB1D27 @ (((unsigned) &TXB1D2)*8) + 7;

extern volatile __bit TXB1D30 @ (((unsigned) &TXB1D3)*8) + 0;

extern volatile __bit TXB1D31 @ (((unsigned) &TXB1D3)*8) + 1;

extern volatile __bit TXB1D32 @ (((unsigned) &TXB1D3)*8) + 2;

extern volatile __bit TXB1D33 @ (((unsigned) &TXB1D3)*8) + 3;

extern volatile __bit TXB1D34 @ (((unsigned) &TXB1D3)*8) + 4;

extern volatile __bit TXB1D35 @ (((unsigned) &TXB1D3)*8) + 5;

extern volatile __bit TXB1D36 @ (((unsigned) &TXB1D3)*8) + 6;

extern volatile __bit TXB1D37 @ (((unsigned) &TXB1D3)*8) + 7;

extern volatile __bit TXB1D40 @ (((unsigned) &TXB1D4)*8) + 0;

extern volatile __bit TXB1D41 @ (((unsigned) &TXB1D4)*8) + 1;

extern volatile __bit TXB1D42 @ (((unsigned) &TXB1D4)*8) + 2;

extern volatile __bit TXB1D43 @ (((unsigned) &TXB1D4)*8) + 3;

extern volatile __bit TXB1D44 @ (((unsigned) &TXB1D4)*8) + 4;

extern volatile __bit TXB1D45 @ (((unsigned) &TXB1D4)*8) + 5;

extern volatile __bit TXB1D46 @ (((unsigned) &TXB1D4)*8) + 6;

extern volatile __bit TXB1D47 @ (((unsigned) &TXB1D4)*8) + 7;

extern volatile __bit TXB1D50 @ (((unsigned) &TXB1D5)*8) + 0;

extern volatile __bit TXB1D51 @ (((unsigned) &TXB1D5)*8) + 1;

extern volatile __bit TXB1D52 @ (((unsigned) &TXB1D5)*8) + 2;

extern volatile __bit TXB1D53 @ (((unsigned) &TXB1D5)*8) + 3;

extern volatile __bit TXB1D54 @ (((unsigned) &TXB1D5)*8) + 4;

extern volatile __bit TXB1D55 @ (((unsigned) &TXB1D5)*8) + 5;

extern volatile __bit TXB1D56 @ (((unsigned) &TXB1D5)*8) + 6;

extern volatile __bit TXB1D57 @ (((unsigned) &TXB1D5)*8) + 7;

extern volatile __bit TXB1D60 @ (((unsigned) &TXB1D6)*8) + 0;

extern volatile __bit TXB1D61 @ (((unsigned) &TXB1D6)*8) + 1;

extern volatile __bit TXB1D62 @ (((unsigned) &TXB1D6)*8) + 2;

extern volatile __bit TXB1D63 @ (((unsigned) &TXB1D6)*8) + 3;

extern volatile __bit TXB1D64 @ (((unsigned) &TXB1D6)*8) + 4;

extern volatile __bit TXB1D65 @ (((unsigned) &TXB1D6)*8) + 5;

extern volatile __bit TXB1D66 @ (((unsigned) &TXB1D6)*8) + 6;

extern volatile __bit TXB1D67 @ (((unsigned) &TXB1D6)*8) + 7;

extern volatile __bit TXB1D70 @ (((unsigned) &TXB1D7)*8) + 0;

extern volatile __bit TXB1D71 @ (((unsigned) &TXB1D7)*8) + 1;

extern volatile __bit TXB1D72 @ (((unsigned) &TXB1D7)*8) + 2;

extern volatile __bit TXB1D73 @ (((unsigned) &TXB1D7)*8) + 3;

extern volatile __bit TXB1D74 @ (((unsigned) &TXB1D7)*8) + 4;

extern volatile __bit TXB1D75 @ (((unsigned) &TXB1D7)*8) + 5;

extern volatile __bit TXB1D76 @ (((unsigned) &TXB1D7)*8) + 6;

extern volatile __bit TXB1D77 @ (((unsigned) &TXB1D7)*8) + 7;

extern volatile __bit TXB1DLC0 @ (((unsigned) &TXB1DLC)*8) + 0;

extern volatile __bit TXB1DLC1 @ (((unsigned) &TXB1DLC)*8) + 1;

extern volatile __bit TXB1DLC2 @ (((unsigned) &TXB1DLC)*8) + 2;

extern volatile __bit TXB1DLC3 @ (((unsigned) &TXB1DLC)*8) + 3;

extern volatile __bit TXB1EID0 @ (((unsigned) &TXB1EIDL)*8) + 0;

extern volatile __bit TXB1EID1 @ (((unsigned) &TXB1EIDL)*8) + 1;

extern volatile __bit TXB1EID10 @ (((unsigned) &TXB1EIDH)*8) + 2;

extern volatile __bit TXB1EID11 @ (((unsigned) &TXB1EIDH)*8) + 3;

extern volatile __bit TXB1EID12 @ (((unsigned) &TXB1EIDH)*8) + 4;

extern volatile __bit TXB1EID13 @ (((unsigned) &TXB1EIDH)*8) + 5;

extern volatile __bit TXB1EID14 @ (((unsigned) &TXB1EIDH)*8) + 6;

extern volatile __bit TXB1EID15 @ (((unsigned) &TXB1EIDH)*8) + 7;

extern volatile __bit TXB1EID16 @ (((unsigned) &TXB1SIDL)*8) + 0;

extern volatile __bit TXB1EID17 @ (((unsigned) &TXB1SIDL)*8) + 1;

extern volatile __bit TXB1EID2 @ (((unsigned) &TXB1EIDL)*8) + 2;

extern volatile __bit TXB1EID3 @ (((unsigned) &TXB1EIDL)*8) + 3;

extern volatile __bit TXB1EID4 @ (((unsigned) &TXB1EIDL)*8) + 4;

extern volatile __bit TXB1EID5 @ (((unsigned) &TXB1EIDL)*8) + 5;

extern volatile __bit TXB1EID6 @ (((unsigned) &TXB1EIDL)*8) + 6;

extern volatile __bit TXB1EID7 @ (((unsigned) &TXB1EIDL)*8) + 7;

extern volatile __bit TXB1EID8 @ (((unsigned) &TXB1EIDH)*8) + 0;

extern volatile __bit TXB1EID9 @ (((unsigned) &TXB1EIDH)*8) + 1;

extern volatile __bit TXB1ERR @ (((unsigned) &TXB1CON)*8) + 4;

extern volatile __bit TXB1EXIDE @ (((unsigned) &TXB1SIDL)*8) + 3;

extern volatile __bit TXB1IE @ (((unsigned) &PIE3)*8) + 3;

extern volatile __bit TXB1IF @ (((unsigned) &PIR3)*8) + 3;

extern volatile __bit TXB1IP @ (((unsigned) &IPR3)*8) + 3;

extern volatile __bit TXB1LARB @ (((unsigned) &TXB1CON)*8) + 5;

extern volatile __bit TXB1PRI0 @ (((unsigned) &TXB1CON)*8) + 0;

extern volatile __bit TXB1PRI1 @ (((unsigned) &TXB1CON)*8) + 1;

extern volatile __bit TXB1REQ @ (((unsigned) &TXB1CON)*8) + 3;

extern volatile __bit TXB1RTR @ (((unsigned) &TXB1DLC)*8) + 6;

extern volatile __bit TXB1SID0 @ (((unsigned) &TXB1SIDL)*8) + 5;

extern volatile __bit TXB1SID1 @ (((unsigned) &TXB1SIDL)*8) + 6;

extern volatile __bit TXB1SID10 @ (((unsigned) &TXB1SIDH)*8) + 7;

extern volatile __bit TXB1SID2 @ (((unsigned) &TXB1SIDL)*8) + 7;

extern volatile __bit TXB1SID3 @ (((unsigned) &TXB1SIDH)*8) + 0;

extern volatile __bit TXB1SID4 @ (((unsigned) &TXB1SIDH)*8) + 1;

extern volatile __bit TXB1SID5 @ (((unsigned) &TXB1SIDH)*8) + 2;

extern volatile __bit TXB1SID6 @ (((unsigned) &TXB1SIDH)*8) + 3;

extern volatile __bit TXB1SID7 @ (((unsigned) &TXB1SIDH)*8) + 4;

extern volatile __bit TXB1SID8 @ (((unsigned) &TXB1SIDH)*8) + 5;

extern volatile __bit TXB1SID9 @ (((unsigned) &TXB1SIDH)*8) + 6;

extern volatile __bit TXB2ABT @ (((unsigned) &TXB2CON)*8) + 6;

extern volatile __bit TXB2D00 @ (((unsigned) &TXB2D0)*8) + 0;

extern volatile __bit TXB2D01 @ (((unsigned) &TXB2D0)*8) + 1;

extern volatile __bit TXB2D02 @ (((unsigned) &TXB2D0)*8) + 2;

extern volatile __bit TXB2D03 @ (((unsigned) &TXB2D0)*8) + 3;

extern volatile __bit TXB2D04 @ (((unsigned) &TXB2D0)*8) + 4;

extern volatile __bit TXB2D05 @ (((unsigned) &TXB2D0)*8) + 5;

extern volatile __bit TXB2D06 @ (((unsigned) &TXB2D0)*8) + 6;

extern volatile __bit TXB2D07 @ (((unsigned) &TXB2D0)*8) + 7;

extern volatile __bit TXB2D10 @ (((unsigned) &TXB2D1)*8) + 0;

extern volatile __bit TXB2D11 @ (((unsigned) &TXB2D1)*8) + 1;

extern volatile __bit TXB2D12 @ (((unsigned) &TXB2D1)*8) + 2;

extern volatile __bit TXB2D13 @ (((unsigned) &TXB2D1)*8) + 3;

extern volatile __bit TXB2D14 @ (((unsigned) &TXB2D1)*8) + 4;

extern volatile __bit TXB2D15 @ (((unsigned) &TXB2D1)*8) + 5;

extern volatile __bit TXB2D16 @ (((unsigned) &TXB2D1)*8) + 6;

extern volatile __bit TXB2D17 @ (((unsigned) &TXB2D1)*8) + 7;

extern volatile __bit TXB2D20 @ (((unsigned) &TXB2D2)*8) + 0;

extern volatile __bit TXB2D21 @ (((unsigned) &TXB2D2)*8) + 1;

extern volatile __bit TXB2D22 @ (((unsigned) &TXB2D2)*8) + 2;

extern volatile __bit TXB2D23 @ (((unsigned) &TXB2D2)*8) + 3;

extern volatile __bit TXB2D24 @ (((unsigned) &TXB2D2)*8) + 4;

extern volatile __bit TXB2D25 @ (((unsigned) &TXB2D2)*8) + 5;

extern volatile __bit TXB2D26 @ (((unsigned) &TXB2D2)*8) + 6;

extern volatile __bit TXB2D27 @ (((unsigned) &TXB2D2)*8) + 7;

extern volatile __bit TXB2D30 @ (((unsigned) &TXB2D3)*8) + 0;

extern volatile __bit TXB2D31 @ (((unsigned) &TXB2D3)*8) + 1;

extern volatile __bit TXB2D32 @ (((unsigned) &TXB2D3)*8) + 2;

extern volatile __bit TXB2D33 @ (((unsigned) &TXB2D3)*8) + 3;

extern volatile __bit TXB2D34 @ (((unsigned) &TXB2D3)*8) + 4;

extern volatile __bit TXB2D35 @ (((unsigned) &TXB2D3)*8) + 5;

extern volatile __bit TXB2D36 @ (((unsigned) &TXB2D3)*8) + 6;

extern volatile __bit TXB2D37 @ (((unsigned) &TXB2D3)*8) + 7;

extern volatile __bit TXB2D40 @ (((unsigned) &TXB2D4)*8) + 0;

extern volatile __bit TXB2D41 @ (((unsigned) &TXB2D4)*8) + 1;

extern volatile __bit TXB2D42 @ (((unsigned) &TXB2D4)*8) + 2;

extern volatile __bit TXB2D43 @ (((unsigned) &TXB2D4)*8) + 3;

extern volatile __bit TXB2D44 @ (((unsigned) &TXB2D4)*8) + 4;

extern volatile __bit TXB2D45 @ (((unsigned) &TXB2D4)*8) + 5;

extern volatile __bit TXB2D46 @ (((unsigned) &TXB2D4)*8) + 6;

extern volatile __bit TXB2D47 @ (((unsigned) &TXB2D4)*8) + 7;

extern volatile __bit TXB2D50 @ (((unsigned) &TXB2D5)*8) + 0;

extern volatile __bit TXB2D51 @ (((unsigned) &TXB2D5)*8) + 1;

extern volatile __bit TXB2D52 @ (((unsigned) &TXB2D5)*8) + 2;

extern volatile __bit TXB2D53 @ (((unsigned) &TXB2D5)*8) + 3;

extern volatile __bit TXB2D54 @ (((unsigned) &TXB2D5)*8) + 4;

extern volatile __bit TXB2D55 @ (((unsigned) &TXB2D5)*8) + 5;

extern volatile __bit TXB2D56 @ (((unsigned) &TXB2D5)*8) + 6;

extern volatile __bit TXB2D57 @ (((unsigned) &TXB2D5)*8) + 7;

extern volatile __bit TXB2D60 @ (((unsigned) &TXB2D6)*8) + 0;

extern volatile __bit TXB2D61 @ (((unsigned) &TXB2D6)*8) + 1;

extern volatile __bit TXB2D62 @ (((unsigned) &TXB2D6)*8) + 2;

extern volatile __bit TXB2D63 @ (((unsigned) &TXB2D6)*8) + 3;

extern volatile __bit TXB2D64 @ (((unsigned) &TXB2D6)*8) + 4;

extern volatile __bit TXB2D65 @ (((unsigned) &TXB2D6)*8) + 5;

extern volatile __bit TXB2D66 @ (((unsigned) &TXB2D6)*8) + 6;

extern volatile __bit TXB2D67 @ (((unsigned) &TXB2D6)*8) + 7;

extern volatile __bit TXB2D70 @ (((unsigned) &TXB2D7)*8) + 0;

extern volatile __bit TXB2D71 @ (((unsigned) &TXB2D7)*8) + 1;

extern volatile __bit TXB2D72 @ (((unsigned) &TXB2D7)*8) + 2;

extern volatile __bit TXB2D73 @ (((unsigned) &TXB2D7)*8) + 3;

extern volatile __bit TXB2D74 @ (((unsigned) &TXB2D7)*8) + 4;

extern volatile __bit TXB2D75 @ (((unsigned) &TXB2D7)*8) + 5;

extern volatile __bit TXB2D76 @ (((unsigned) &TXB2D7)*8) + 6;

extern volatile __bit TXB2D77 @ (((unsigned) &TXB2D7)*8) + 7;

extern volatile __bit TXB2DLC0 @ (((unsigned) &TXB2DLC)*8) + 0;

extern volatile __bit TXB2DLC1 @ (((unsigned) &TXB2DLC)*8) + 1;

extern volatile __bit TXB2DLC2 @ (((unsigned) &TXB2DLC)*8) + 2;

extern volatile __bit TXB2DLC3 @ (((unsigned) &TXB2DLC)*8) + 3;

extern volatile __bit TXB2EID0 @ (((unsigned) &TXB2EIDL)*8) + 0;

extern volatile __bit TXB2EID1 @ (((unsigned) &TXB2EIDL)*8) + 1;

extern volatile __bit TXB2EID10 @ (((unsigned) &TXB2EIDH)*8) + 2;

extern volatile __bit TXB2EID11 @ (((unsigned) &TXB2EIDH)*8) + 3;

extern volatile __bit TXB2EID12 @ (((unsigned) &TXB2EIDH)*8) + 4;

extern volatile __bit TXB2EID13 @ (((unsigned) &TXB2EIDH)*8) + 5;

extern volatile __bit TXB2EID14 @ (((unsigned) &TXB2EIDH)*8) + 6;

extern volatile __bit TXB2EID15 @ (((unsigned) &TXB2EIDH)*8) + 7;

extern volatile __bit TXB2EID16 @ (((unsigned) &TXB2SIDL)*8) + 0;

extern volatile __bit TXB2EID17 @ (((unsigned) &TXB2SIDL)*8) + 1;

extern volatile __bit TXB2EID2 @ (((unsigned) &TXB2EIDL)*8) + 2;

extern volatile __bit TXB2EID3 @ (((unsigned) &TXB2EIDL)*8) + 3;

extern volatile __bit TXB2EID4 @ (((unsigned) &TXB2EIDL)*8) + 4;

extern volatile __bit TXB2EID5 @ (((unsigned) &TXB2EIDL)*8) + 5;

extern volatile __bit TXB2EID6 @ (((unsigned) &TXB2EIDL)*8) + 6;

extern volatile __bit TXB2EID7 @ (((unsigned) &TXB2EIDL)*8) + 7;

extern volatile __bit TXB2EID8 @ (((unsigned) &TXB2EIDH)*8) + 0;

extern volatile __bit TXB2EID9 @ (((unsigned) &TXB2EIDH)*8) + 1;

extern volatile __bit TXB2ERR @ (((unsigned) &TXB2CON)*8) + 4;

extern volatile __bit TXB2EXIDE @ (((unsigned) &TXB2SIDL)*8) + 3;

extern volatile __bit TXB2IE @ (((unsigned) &PIE3)*8) + 4;

extern volatile __bit TXB2IF @ (((unsigned) &PIR3)*8) + 4;

extern volatile __bit TXB2IP @ (((unsigned) &IPR3)*8) + 4;

extern volatile __bit TXB2LARB @ (((unsigned) &TXB2CON)*8) + 5;

extern volatile __bit TXB2PRI0 @ (((unsigned) &TXB2CON)*8) + 0;

extern volatile __bit TXB2PRI1 @ (((unsigned) &TXB2CON)*8) + 1;

extern volatile __bit TXB2REQ @ (((unsigned) &TXB2CON)*8) + 3;

extern volatile __bit TXB2RTR @ (((unsigned) &TXB2DLC)*8) + 6;

extern volatile __bit TXB2SID0 @ (((unsigned) &TXB2SIDL)*8) + 5;

extern volatile __bit TXB2SID1 @ (((unsigned) &TXB2SIDL)*8) + 6;

extern volatile __bit TXB2SID10 @ (((unsigned) &TXB2SIDH)*8) + 7;

extern volatile __bit TXB2SID2 @ (((unsigned) &TXB2SIDL)*8) + 7;

extern volatile __bit TXB2SID3 @ (((unsigned) &TXB2SIDH)*8) + 0;

extern volatile __bit TXB2SID4 @ (((unsigned) &TXB2SIDH)*8) + 1;

extern volatile __bit TXB2SID5 @ (((unsigned) &TXB2SIDH)*8) + 2;

extern volatile __bit TXB2SID6 @ (((unsigned) &TXB2SIDH)*8) + 3;

extern volatile __bit TXB2SID7 @ (((unsigned) &TXB2SIDH)*8) + 4;

extern volatile __bit TXB2SID8 @ (((unsigned) &TXB2SIDH)*8) + 5;

extern volatile __bit TXB2SID9 @ (((unsigned) &TXB2SIDH)*8) + 6;

extern volatile __bit TXBNIE @ (((unsigned) &PIE3)*8) + 4;

extern volatile __bit TXBNIF @ (((unsigned) &PIR3)*8) + 4;

extern volatile __bit TXBNIP @ (((unsigned) &IPR3)*8) + 4;

extern volatile __bit TXBO @ (((unsigned) &COMSTAT)*8) + 5;

extern volatile __bit TXBP @ (((unsigned) &COMSTAT)*8) + 4;

extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;

extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;

extern volatile __bit TXEN1 @ (((unsigned) &TXSTA)*8) + 5;

extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;

extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;

extern volatile __bit TXIP @ (((unsigned) &IPR1)*8) + 4;

extern volatile __bit TXWARN @ (((unsigned) &COMSTAT)*8) + 2;

extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;

extern volatile __bit ULPWUIN @ (((unsigned) &PORTA)*8) + 0;

extern volatile __bit VREFM @ (((unsigned) &PORTA)*8) + 2;

extern volatile __bit VREFP @ (((unsigned) &PORTA)*8) + 3;

extern volatile __bit WAIT0 @ (((unsigned) &PR2)*8) + 4;

extern volatile __bit WAIT1 @ (((unsigned) &PR2)*8) + 5;

extern volatile __bit WAKFIL @ (((unsigned) &BRGCON3)*8) + 6;

extern volatile __bit WAKIE @ (((unsigned) &PIE3)*8) + 6;

extern volatile __bit WAKIF @ (((unsigned) &PIR3)*8) + 6;

extern volatile __bit WAKIP @ (((unsigned) &IPR3)*8) + 6;

extern volatile __bit WCOL @ (((unsigned) &SSPCON1)*8) + 7;

extern volatile __bit WIN0 @ (((unsigned) &CANCON)*8) + 1;

extern volatile __bit WIN1 @ (((unsigned) &CANCON)*8) + 2;

extern volatile __bit WIN2 @ (((unsigned) &CANCON)*8) + 3;

extern volatile __bit WM0 @ (((unsigned) &PR2)*8) + 0;

extern volatile __bit WM1 @ (((unsigned) &PR2)*8) + 1;

extern volatile __bit __attribute__((__deprecated__)) WR @ (((unsigned) &EECON1)*8) + 1;

extern volatile __bit WRE @ (((unsigned) &PORTE)*8) + 1;

extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;

extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;

extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;

extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit nBOR @ (((unsigned) &RCON)*8) + 0;

extern volatile __bit nCS @ (((unsigned) &PORTE)*8) + 2;

extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;

extern volatile __bit nIPEN @ (((unsigned) &RCON)*8) + 7;

extern volatile __bit nPD @ (((unsigned) &RCON)*8) + 2;

extern volatile __bit nPOR @ (((unsigned) &RCON)*8) + 1;

extern volatile __bit nRBPU @ (((unsigned) &INTCON2)*8) + 7;

extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;

extern volatile __bit nRD @ (((unsigned) &PORTE)*8) + 0;

extern volatile __bit nRI @ (((unsigned) &RCON)*8) + 4;

extern volatile __bit nSS @ (((unsigned) &PORTA)*8) + 5;

extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;

extern volatile __bit nT3SYNC @ (((unsigned) &T3CON)*8) + 2;

extern volatile __bit nTO @ (((unsigned) &RCON)*8) + 3;

extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;

extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit nWR @ (((unsigned) &PORTE)*8) + 1;

extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;

# 2008 "/Applications/microchip/xc8/v1.32/include/plib/adc.h"
union ADCResult
{
int lr;
char br[2];
};

char BusyADC (void);

void ConvertADC (void);

void CloseADC(void);

# 2026
int ReadADC(void);

# 2032
void OpenADC ( unsigned char ,
unsigned char );

# 2084
void SetChanADC(unsigned char );

# 2100
void SelChanConvADC( unsigned char );

# 38 "/Applications/microchip/xc8/v1.32/include/plib/ancomp.h"
void Close_ancomp( void );
void Open_ancomp(unsigned char config);

# 584 "/Applications/microchip/xc8/v1.32/include/plib/spi.h"
void OpenSPI( unsigned char sync_mode,
unsigned char bus_mode,
unsigned char smp_phase );

signed char WriteSPI( unsigned char data_out );

void getsSPI( unsigned char *rdptr, unsigned char length );

void putsSPI( unsigned char *wrptr );

unsigned char ReadSPI( void );

# 414 "/Applications/microchip/xc8/v1.32/include/plib/can2510.h"
void CAN2510Initialize(  unsigned int configuration,
 unsigned char brp,
 unsigned char interruptFlags,
 unsigned char SPI_syncMode,
 unsigned char SPI_busMode,
 unsigned char SPI_smpPhase );

signed char CAN2510Init(  unsigned long BufferConfig,
 unsigned long BitTimeConfig,
 unsigned char interruptEnables,
 unsigned char SPI_syncMode,
 unsigned char SPI_busMode,
 unsigned char SPI_smpPhase );

void CAN2510Enable( void );

void CAN2510Disable( void );

void CAN2510Reset( void );

void CAN2510SetMode(  unsigned char mode );

unsigned char CAN2510ReadMode( void );

unsigned char CAN2510ReadStatus( void );

unsigned char CAN2510ErrorState( void );

unsigned char CAN2510InterruptStatus( void );

void CAN2510InterruptEnable( unsigned char interruptFlags );

unsigned char CAN2510ByteRead(  unsigned char addr );

void CAN2510ByteWrite(  unsigned char addr,  unsigned char value );

void CAN2510SequentialRead(  unsigned char *DataArray,
 unsigned char CAN2510addr,
 unsigned char numbytes );

void CAN2510SequentialWrite(  unsigned char *DataArray,
 unsigned char CAN2510addr,
 unsigned char numbytes );

void CAN2510BitModify(  unsigned char address,
 unsigned char mask,
 unsigned char data );

void CAN2510SetSingleMaskStd(  unsigned char maskNum,  unsigned int mask );

void CAN2510SetSingleMaskXtd(  unsigned char maskNum,  unsigned long mask );

void CAN2510SetSingleFilterStd(  unsigned char filterNum,  unsigned int filter );

void CAN2510SetSingleFilterXtd(  unsigned char filterNum,  unsigned long filter );

signed char CAN2510SetMsgFilterStd(  unsigned char bufferNum,
 unsigned int mask,
 unsigned int *filters );

signed char CAN2510SetMsgFilterXtd(  unsigned char bufferNum,
 unsigned long mask,
 unsigned long *filters );

signed char CAN2510WriteStd(  unsigned int msgId,
 unsigned char msgPriority,
 unsigned char numBytes,
 unsigned char *data );

signed char CAN2510WriteXtd(  unsigned long msgId,
 unsigned char msgPriority,
 unsigned char numBytes,
 unsigned char *data );

void CAN2510LoadBufferStd(  unsigned char bufferNum,
 unsigned int msgId,
 unsigned char numBytes,
 unsigned char *data );

void CAN2510LoadBufferXtd(  unsigned char bufferNum,
 unsigned long msgId,
 unsigned char numBytes,
 unsigned char *data );

void CAN2510LoadRTRStd(  unsigned char bufferNum,
 unsigned int msgId,
 unsigned char numBytes );

void CAN2510LoadRTRXtd(  unsigned char bufferNum,
 unsigned long msgId,
 unsigned char numBytes );

void CAN2510SetBufferPriority(  unsigned char bufferNum,
 unsigned char bufferPriority );

void CAN2510SendBuffer(  unsigned char bufferNumber );

signed char CAN2510WriteBuffer(  unsigned char bufferNum );

unsigned char CAN2510DataReady(  unsigned char bufferNum );

unsigned char CAN2510DataRead(  unsigned char bufferNum,
 unsigned long *msgId,
 unsigned char *numBytes,
 unsigned char *data );

# 64 "/Applications/microchip/xc8/v1.32/include/plib/capture.h"
union capstatus
{

# 73
struct
{

# 77
unsigned Cap1OVF:1;

# 107
unsigned ECap1OVF:1;

# 115
};

unsigned :8;

};

extern union capstatus CapStatus;

union CapResult
{
unsigned int lc;
char bc[2];
};

# 474
void OpenCapture1 ( unsigned char config);
unsigned int ReadCapture1 (void);
void CloseCapture1 (void);

# 568
void OpenECapture1 ( unsigned char config);
unsigned int ReadECapture1 (void);
void CloseECapture1 (void);

# 385 "/Applications/microchip/xc8/v1.32/include/plib/compare.h"
void OpenCompare1(unsigned char config,unsigned int period);
void CloseCompare1(void);

# 433
void OpenECompare1(unsigned char config,unsigned int period);
void CloseECompare1(void);

# 36 "/Applications/microchip/xc8/v1.32/include/plib/EEP.h"
void Busy_eep ( void );
unsigned char Read_b_eep( unsigned int badd );
void Write_b_eep( unsigned int badd, unsigned char bdat );

# 2 "/Applications/microchip/xc8/v1.32/include/stddef.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 13
extern int errno;

# 65 "/Applications/microchip/xc8/v1.32/include/GenericTypeDefs.h"
typedef enum _BOOL { FALSE = 0, TRUE } BOOL;


typedef enum _BIT { CLEAR = 0, SET } BIT;

# 75
typedef signed int INT;
typedef signed char INT8;
typedef signed short int INT16;
typedef signed long int INT32;



 typedef signed long long INT64;



typedef unsigned int UINT;
typedef unsigned char UINT8;
typedef unsigned short int UINT16;

# 93
typedef unsigned long int UINT32;


 typedef unsigned long long UINT64;


typedef union
{
UINT8 Val;
struct
{
 UINT8 b0:1;
 UINT8 b1:1;
 UINT8 b2:1;
 UINT8 b3:1;
 UINT8 b4:1;
 UINT8 b5:1;
 UINT8 b6:1;
 UINT8 b7:1;
} bits;
} UINT8_VAL, UINT8_BITS;

typedef union
{
UINT16 Val;
UINT8 v[2] ;
struct 
{
UINT8 LB;
UINT8 HB;
} byte;
struct 
{
 UINT8 b0:1;
 UINT8 b1:1;
 UINT8 b2:1;
 UINT8 b3:1;
 UINT8 b4:1;
 UINT8 b5:1;
 UINT8 b6:1;
 UINT8 b7:1;
 UINT8 b8:1;
 UINT8 b9:1;
 UINT8 b10:1;
 UINT8 b11:1;
 UINT8 b12:1;
 UINT8 b13:1;
 UINT8 b14:1;
 UINT8 b15:1;
} bits;
} UINT16_VAL, UINT16_BITS;

# 187
typedef union
{
UINT32 Val;
UINT16 w[2] ;
UINT8 v[4] ;
struct 
{
UINT16 LW;
UINT16 HW;
} word;
struct 
{
UINT8 LB;
UINT8 HB;
UINT8 UB;
UINT8 MB;
} byte;
struct 
{
UINT16_VAL low;
UINT16_VAL high;
}wordUnion;
struct 
{
 UINT8 b0:1;
 UINT8 b1:1;
 UINT8 b2:1;
 UINT8 b3:1;
 UINT8 b4:1;
 UINT8 b5:1;
 UINT8 b6:1;
 UINT8 b7:1;
 UINT8 b8:1;
 UINT8 b9:1;
 UINT8 b10:1;
 UINT8 b11:1;
 UINT8 b12:1;
 UINT8 b13:1;
 UINT8 b14:1;
 UINT8 b15:1;
 UINT8 b16:1;
 UINT8 b17:1;
 UINT8 b18:1;
 UINT8 b19:1;
 UINT8 b20:1;
 UINT8 b21:1;
 UINT8 b22:1;
 UINT8 b23:1;
 UINT8 b24:1;
 UINT8 b25:1;
 UINT8 b26:1;
 UINT8 b27:1;
 UINT8 b28:1;
 UINT8 b29:1;
 UINT8 b30:1;
 UINT8 b31:1;
} bits;
} UINT32_VAL;



typedef union
{
UINT64 Val;
UINT32 d[2] ;
UINT16 w[4] ;
UINT8 v[8] ;
struct 
{
UINT32 LD;
UINT32 HD;
} dword;
struct 
{
UINT16 LW;
UINT16 HW;
UINT16 UW;
UINT16 MW;
} word;
struct 
{
 UINT8 b0:1;
 UINT8 b1:1;
 UINT8 b2:1;
 UINT8 b3:1;
 UINT8 b4:1;
 UINT8 b5:1;
 UINT8 b6:1;
 UINT8 b7:1;
 UINT8 b8:1;
 UINT8 b9:1;
 UINT8 b10:1;
 UINT8 b11:1;
 UINT8 b12:1;
 UINT8 b13:1;
 UINT8 b14:1;
 UINT8 b15:1;
 UINT8 b16:1;
 UINT8 b17:1;
 UINT8 b18:1;
 UINT8 b19:1;
 UINT8 b20:1;
 UINT8 b21:1;
 UINT8 b22:1;
 UINT8 b23:1;
 UINT8 b24:1;
 UINT8 b25:1;
 UINT8 b26:1;
 UINT8 b27:1;
 UINT8 b28:1;
 UINT8 b29:1;
 UINT8 b30:1;
 UINT8 b31:1;
 UINT8 b32:1;
 UINT8 b33:1;
 UINT8 b34:1;
 UINT8 b35:1;
 UINT8 b36:1;
 UINT8 b37:1;
 UINT8 b38:1;
 UINT8 b39:1;
 UINT8 b40:1;
 UINT8 b41:1;
 UINT8 b42:1;
 UINT8 b43:1;
 UINT8 b44:1;
 UINT8 b45:1;
 UINT8 b46:1;
 UINT8 b47:1;
 UINT8 b48:1;
 UINT8 b49:1;
 UINT8 b50:1;
 UINT8 b51:1;
 UINT8 b52:1;
 UINT8 b53:1;
 UINT8 b54:1;
 UINT8 b55:1;
 UINT8 b56:1;
 UINT8 b57:1;
 UINT8 b58:1;
 UINT8 b59:1;
 UINT8 b60:1;
 UINT8 b61:1;
 UINT8 b62:1;
 UINT8 b63:1;
} bits;
} UINT64_VAL;

# 339
typedef void VOID;

typedef char CHAR8;
typedef unsigned char UCHAR8;

typedef unsigned char BYTE;
typedef unsigned short int WORD;
typedef unsigned long DWORD;


typedef unsigned long long QWORD;
typedef signed char CHAR;
typedef signed short int SHORT;
typedef signed long LONG;


typedef signed long long LONGLONG;
typedef union
{
BYTE Val;
struct 
{
 BYTE b0:1;
 BYTE b1:1;
 BYTE b2:1;
 BYTE b3:1;
 BYTE b4:1;
 BYTE b5:1;
 BYTE b6:1;
 BYTE b7:1;
} bits;
} BYTE_VAL, BYTE_BITS;

typedef union
{
WORD Val;
BYTE v[2] ;
struct 
{
BYTE LB;
BYTE HB;
} byte;
struct 
{
 BYTE b0:1;
 BYTE b1:1;
 BYTE b2:1;
 BYTE b3:1;
 BYTE b4:1;
 BYTE b5:1;
 BYTE b6:1;
 BYTE b7:1;
 BYTE b8:1;
 BYTE b9:1;
 BYTE b10:1;
 BYTE b11:1;
 BYTE b12:1;
 BYTE b13:1;
 BYTE b14:1;
 BYTE b15:1;
} bits;
} WORD_VAL, WORD_BITS;

typedef union
{
DWORD Val;
WORD w[2] ;
BYTE v[4] ;
struct 
{
WORD LW;
WORD HW;
} word;
struct 
{
BYTE LB;
BYTE HB;
BYTE UB;
BYTE MB;
} byte;
struct 
{
WORD_VAL low;
WORD_VAL high;
}wordUnion;
struct 
{
 BYTE b0:1;
 BYTE b1:1;
 BYTE b2:1;
 BYTE b3:1;
 BYTE b4:1;
 BYTE b5:1;
 BYTE b6:1;
 BYTE b7:1;
 BYTE b8:1;
 BYTE b9:1;
 BYTE b10:1;
 BYTE b11:1;
 BYTE b12:1;
 BYTE b13:1;
 BYTE b14:1;
 BYTE b15:1;
 BYTE b16:1;
 BYTE b17:1;
 BYTE b18:1;
 BYTE b19:1;
 BYTE b20:1;
 BYTE b21:1;
 BYTE b22:1;
 BYTE b23:1;
 BYTE b24:1;
 BYTE b25:1;
 BYTE b26:1;
 BYTE b27:1;
 BYTE b28:1;
 BYTE b29:1;
 BYTE b30:1;
 BYTE b31:1;
} bits;
} DWORD_VAL;


typedef union
{
QWORD Val;
DWORD d[2] ;
WORD w[4] ;
BYTE v[8] ;
struct 
{
DWORD LD;
DWORD HD;
} dword;
struct 
{
WORD LW;
WORD HW;
WORD UW;
WORD MW;
} word;
struct 
{
 BYTE b0:1;
 BYTE b1:1;
 BYTE b2:1;
 BYTE b3:1;
 BYTE b4:1;
 BYTE b5:1;
 BYTE b6:1;
 BYTE b7:1;
 BYTE b8:1;
 BYTE b9:1;
 BYTE b10:1;
 BYTE b11:1;
 BYTE b12:1;
 BYTE b13:1;
 BYTE b14:1;
 BYTE b15:1;
 BYTE b16:1;
 BYTE b17:1;
 BYTE b18:1;
 BYTE b19:1;
 BYTE b20:1;
 BYTE b21:1;
 BYTE b22:1;
 BYTE b23:1;
 BYTE b24:1;
 BYTE b25:1;
 BYTE b26:1;
 BYTE b27:1;
 BYTE b28:1;
 BYTE b29:1;
 BYTE b30:1;
 BYTE b31:1;
 BYTE b32:1;
 BYTE b33:1;
 BYTE b34:1;
 BYTE b35:1;
 BYTE b36:1;
 BYTE b37:1;
 BYTE b38:1;
 BYTE b39:1;
 BYTE b40:1;
 BYTE b41:1;
 BYTE b42:1;
 BYTE b43:1;
 BYTE b44:1;
 BYTE b45:1;
 BYTE b46:1;
 BYTE b47:1;
 BYTE b48:1;
 BYTE b49:1;
 BYTE b50:1;
 BYTE b51:1;
 BYTE b52:1;
 BYTE b53:1;
 BYTE b54:1;
 BYTE b55:1;
 BYTE b56:1;
 BYTE b57:1;
 BYTE b58:1;
 BYTE b59:1;
 BYTE b60:1;
 BYTE b61:1;
 BYTE b62:1;
 BYTE b63:1;
} bits;
} QWORD_VAL;

# 113 "/Applications/microchip/xc8/v1.32/include/plib/flash.h"
extern void ReadFlash(unsigned long startaddr, unsigned int num_bytes, unsigned char *flash_array);

# 120
extern void EraseFlash(unsigned long startaddr, unsigned long endaddr);

extern void WriteBlockFlash(unsigned long startaddr, unsigned char num_blocks, unsigned char *flash_array);

extern void WriteBytesFlash(unsigned long startaddr, unsigned int num_bytes, unsigned char *flash_array);

# 775 "/Applications/microchip/xc8/v1.32/include/plib/i2c.h"
void IdleI2C( void );

void OpenI2C( unsigned char sync_mode, unsigned char slew );

signed char WriteI2C( unsigned char data_out );

signed char putsI2C( unsigned char *wrptr );

unsigned char ReadI2C( void );

void CloseI2C( void );

# 899
signed char WriteI2C( unsigned char data_out );

signed char getsI2C( unsigned char *rdptr, unsigned char length );

# 908
signed char EEAckPolling( unsigned char control );

signed char EEByteWrite( unsigned char control,
unsigned char address,
unsigned char data );

signed int EECurrentAddRead( unsigned char control );

signed char EEPageWrite( unsigned char control,
unsigned char address,
unsigned char *wrptr );

signed int EERandomRead( unsigned char control, unsigned char address );

signed char EESequentialRead( unsigned char control,
unsigned char address,
unsigned char *rdptr,
unsigned char length );

# 325 "/Applications/microchip/xc8/v1.32/include/plib/mwire.h"
void OpenMwire( unsigned char sync_mode );

unsigned char ReadMwire( unsigned char high_byte,
unsigned char low_byte );

# 341
signed char WriteMwire( unsigned char data_out );

# 354
void getsMwire( unsigned char *rdptr, unsigned char length );

# 126 "/Applications/microchip/xc8/v1.32/include/plib/portb.h"
void OpenPORTB( unsigned char config);

# 176
void OpenRB0INT( unsigned char config);

# 194
void OpenRB1INT( unsigned char config);

# 211
void OpenRB2INT( unsigned char config);

# 85 "/Applications/microchip/xc8/v1.32/include/plib/pwm.h"
union PWMDC
{
unsigned int lpwm;
char bpwm[2];
};

# 467
void OpenPWM1 ( char period);
void SetDCPWM1 ( unsigned int duty_cycle);

# 474
void SetOutputPWM1 ( unsigned char output_config,
unsigned char pwm_mode);

void ClosePWM1 (void);

# 575
void OpenEPWM1 ( char period);
void SetDCEPWM1 ( unsigned int duty_cycle);
void SetOutputEPWM1 ( unsigned char output_config,
unsigned char pwm_mode);
void CloseEPWM1 (void);

# 16 "/Applications/microchip/xc8/v1.32/include/plib/reset.h"
char isMCLR(void);
void StatusReset(void);
char isPOR(void);
char isWU(void);


char isBOR(void);



char isWDTTO(void);
char isWDTWU(void);



char isLVD(void);

# 687 "/Applications/microchip/xc8/v1.32/include/plib/rtcc.h"
void Open_RTCC(void);
void Close_RTCC(void);
unsigned char update_RTCC(void);

# 97 "/Applications/microchip/xc8/v1.32/include/plib/sw_i2c.h"
void SWStopI2C ( void );
void SWStartI2C ( void );
void SWRestartI2C ( void );
void SWStopI2C ( void );

signed char SWAckI2C( void );
signed char Clock_test( void );
signed int SWReadI2C( void );
signed char SWWriteI2C(  unsigned char data_out );
signed char SWGetsI2C(  unsigned char *rdptr,  unsigned char length );
signed char SWPutsI2C(  unsigned char *wrptr );

# 84 "/Applications/microchip/xc8/v1.32/include/plib/sw_spi.h"
void OpenSWSPI(void);


char WriteSWSPI( char output);


void SetCSSWSPI(void);


void ClearCSSWSPI(void);

# 47 "/Applications/microchip/xc8/v1.32/include/plib/sw_uart.h"
void OpenUART(void);

unsigned char ReadUART(void);

void WriteUART( unsigned char);

void getsUART( char *, unsigned char);

void putsUART( char *);

# 79
extern void DelayRXBitUART (void);
extern void DelayRXHalfBitUART(void);
extern void DelayTXBitUART (void);

# 36 "/Applications/microchip/xc8/v1.32/include/plib/timers.h"
union Timers
{
unsigned int lt;
char bt[2];
};

# 118
void OpenTimer0 ( unsigned char config);
void CloseTimer0 (void);
unsigned int ReadTimer0 (void);
void WriteTimer0 ( unsigned int timer0);

# 236
void OpenTimer1 ( unsigned char config);
void CloseTimer1 (void);
unsigned int ReadTimer1 (void);
void WriteTimer1 ( unsigned int timer1);

# 325
void OpenTimer2 ( unsigned char config);
void CloseTimer2 (void);

# 391
void OpenTimer3 ( unsigned char config);
void CloseTimer3 (void);
unsigned int ReadTimer3 (void);
void WriteTimer3 ( unsigned int timer3);

# 1179
void SetTmrCCPSrc( unsigned char );

# 568 "/Applications/microchip/xc8/v1.32/include/plib/usart.h"
union USART
{
unsigned char val;
struct
{
unsigned RX_NINE:1;
unsigned TX_NINE:1;
unsigned FRAME_ERROR:1;
unsigned OVERRUN_ERROR:1;
unsigned fill:4;
};
};
extern union USART USART_Status;
void OpenUSART ( unsigned char config, unsigned spbrg);

# 596
char ReadUSART (void);
void WriteUSART ( char data);
void getsUSART ( char *buffer, unsigned char len);
void putsUSART ( char *data);
void putrsUSART ( const  char *data);

# 87 "/Applications/microchip/xc8/v1.32/include/plib/xlcd.h"
void OpenXLCD( unsigned char);

# 92
void SetCGRamAddr( unsigned char);

# 97
void SetDDRamAddr( unsigned char);

# 102
unsigned char BusyXLCD(void);

# 107
unsigned char ReadAddrXLCD(void);

# 112
char ReadDataXLCD(void);

# 117
void WriteCmdXLCD( unsigned char);

# 122
void WriteDataXLCD( char);

# 132
void putsXLCD( char *);

# 137
void putrsXLCD(const char *);


extern void DelayFor18TCY(void);
extern void DelayPORXLCD(void);
extern void DelayXLCD(void);

# 13 "/Applications/microchip/xc8/v1.32/include/plib/delays.h"
void Delay1TCYx(unsigned char);

# 19
void Delay10TCYx(unsigned char);

# 25
void Delay100TCYx(unsigned char);

# 31
void Delay1KTCYx(unsigned char);

# 37
void Delay10KTCYx(unsigned char);

# 18 "/Applications/microchip/xc8/v1.32/include/pic18.h"
__attribute__((__unsupported__("The flash_write routine is no longer supported. Please use the peripheral library functions: WriteBytesFlash, WriteBlockFlash or WriteWordFlash"))) void flash_write(const unsigned char *, unsigned int, __far unsigned char *);


# 41
#pragma intrinsic(__nop)
extern void __nop(void);


# 146
#pragma intrinsic(_delay)
extern __nonreentrant void _delay(unsigned long);
#pragma intrinsic(_delaywdt)
extern __nonreentrant void _delaywdt(unsigned long);
#pragma intrinsic(_delay3)
extern __nonreentrant void _delay3(unsigned char);

# 7 "/Applications/microchip/xc8/v1.32/include/stdarg.h"
typedef void * va_list[1];

#pragma intrinsic(__va_start)
extern void * __va_start(void);

#pragma intrinsic(__va_arg)
extern void * __va_arg(void *, ...);

# 23 "/Applications/microchip/xc8/v1.32/include/stdio.h"
extern int errno;

# 54
struct __prbuf
{
char * ptr;
void (* func)(char);
};

# 17 "/Applications/microchip/xc8/v1.32/include/conio.h"
extern int errno;


extern void init_uart(void);

extern char getch(void);
extern char getche(void);
extern void putch(char);
extern void ungetch(char);

extern __bit kbhit(void);

# 31
extern char * cgets(char *);
extern void cputs(const char *);

# 99 "/Applications/microchip/xc8/v1.32/include/stdio.h"
extern int cprintf(char *, ...);
#pragma printf_check(cprintf)



extern int _doprnt(struct __prbuf *, const register char *, register va_list);


# 191
#pragma printf_check(vprintf) const
#pragma printf_check(vsprintf) const

extern char * gets(char *);
extern int puts(const char *);
extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));

#pragma printf_check(printf) const
#pragma printf_check(sprintf) const
extern int sprintf(char *, const char *, ...);
extern int printf(const char *, ...);

# 46 "../I2Cdev.h"
int8_t I2Cdev_readBit(uint8_t devAddr, uint8_t regAddr, uint8_t bitNum, uint8_t *data);
int8_t I2Cdev_readBitW(uint8_t devAddr, uint8_t regAddr, uint8_t bitNum, uint16_t *data);
int8_t I2Cdev_readBits(uint8_t devAddr, uint8_t regAddr, uint8_t bitStart, uint8_t length, uint8_t *data);
int8_t I2Cdev_readBitsW(uint8_t devAddr, uint8_t regAddr, uint8_t bitStart, uint8_t length, uint16_t *data);
int8_t I2Cdev_readByte(uint8_t devAddr, uint8_t regAddr, uint8_t *data);
int8_t I2Cdev_readWord(uint8_t devAddr, uint8_t regAddr, uint16_t *data);
int8_t I2Cdev_readBytes(uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t *data);
int8_t I2Cdev_readWords(uint8_t devAddr, uint8_t regAddr, uint8_t length, uint16_t *data);

bool I2Cdev_writeBit(uint8_t devAddr, uint8_t regAddr, uint8_t bitNum, uint8_t data);
bool I2Cdev_writeBitW(uint8_t devAddr, uint8_t regAddr, uint8_t bitNum, uint16_t data);
bool I2Cdev_writeBits(uint8_t devAddr, uint8_t regAddr, uint8_t bitStart, uint8_t length, uint8_t data);
bool I2Cdev_writeBitsW(uint8_t devAddr, uint8_t regAddr, uint8_t bitStart, uint8_t length, uint16_t data);
bool I2Cdev_writeByte(uint8_t devAddr, uint8_t regAddr, uint8_t data);
bool I2Cdev_writeWord(uint8_t devAddr, uint8_t regAddr, uint16_t data);
bool I2Cdev_writeBytes(uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t *data);
bool I2Cdev_writeWords(uint8_t devAddr, uint8_t regAddr, uint8_t length, uint16_t *data);

# 43 "../I2Cdev.c"
int8_t I2Cdev_readBytes(uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t *data) {
int8_t count = 0;


IdleI2C();
SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);


IdleI2C();
WriteI2C(devAddr << 1 | 0x00);


IdleI2C();
WriteI2C(regAddr);


IdleI2C();
SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);


IdleI2C();
WriteI2C(devAddr << 1 | 0x01);

for (count = 0; count < length; count++) {

IdleI2C();
data[count] = ReadI2C();

if (count == length - 1) {

IdleI2C();
SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
} else {

IdleI2C();
SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
}
}


IdleI2C();
SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);

return count;
}

# 95
int8_t I2Cdev_readByte(uint8_t devAddr, uint8_t regAddr, uint8_t *data) {
return I2Cdev_readBytes(devAddr, regAddr, 1, data);
}

# 106
int8_t I2Cdev_readWords(uint8_t devAddr, uint8_t regAddr, uint8_t length, uint16_t *data) {
int8_t count = 0;


IdleI2C();
SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);


IdleI2C();
WriteI2C(devAddr << 1 | 0x00);


IdleI2C();
WriteI2C(regAddr);


IdleI2C();
SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);


IdleI2C();
WriteI2C(devAddr << 1 | 0x01);

for (count = 0; count < length; count++) {

IdleI2C();
data[count] = ReadI2C() << 8;


IdleI2C();
SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);


IdleI2C();
data[count] |= ReadI2C();

if (count == length - 1) {

IdleI2C();
SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
} else {

IdleI2C();
SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
}
}


IdleI2C();
SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);

return count;
}

# 166
int8_t I2Cdev_readWord(uint8_t devAddr, uint8_t regAddr, uint16_t *data) {
return I2Cdev_readWords(devAddr, regAddr, 1, data);
}

# 177
int8_t I2Cdev_readBit(uint8_t devAddr, uint8_t regAddr, uint8_t bitNum, uint8_t *data) {
uint8_t b;
uint8_t count = I2Cdev_readByte(devAddr, regAddr, &b);
*data = b & (1 << bitNum);
return count;
}

# 191
int8_t I2Cdev_readBitW(uint8_t devAddr, uint8_t regAddr, uint8_t bitNum, uint16_t *data) {
uint16_t b;
uint8_t count = I2Cdev_readWord(devAddr, regAddr, &b);
*data = b & (1 << bitNum);
return count;
}

# 206
int8_t I2Cdev_readBits(uint8_t devAddr, uint8_t regAddr, uint8_t bitStart, uint8_t length, uint8_t *data) {

# 212
uint8_t count, b;
if ((count = I2Cdev_readByte(devAddr, regAddr, &b)) != 0) {
uint8_t mask = ((1 << length) - 1) << (bitStart - length + 1);
b &= mask;
b >>= (bitStart - length + 1);
*data = b;
}
return count;
}

# 230
int8_t I2Cdev_readBitsW(uint8_t devAddr, uint8_t regAddr, uint8_t bitStart, uint8_t length, uint16_t *data) {

# 236
uint8_t count;
uint16_t w;
if ((count = I2Cdev_readWord(devAddr, regAddr, &w)) != 0) {
uint16_t mask = ((1 << length) - 1) << (bitStart - length + 1);
w &= mask;
w >>= (bitStart - length + 1);
*data = w;
}
return count;
}

# 254
bool I2Cdev_writeBytes(uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t* data) {

IdleI2C();
SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);


IdleI2C();
WriteI2C(devAddr << 1 | 0x00);


IdleI2C();
WriteI2C(regAddr);

for (uint8_t i = 0; i < length; i++) {

IdleI2C();
WriteI2C(data[i]);
}


IdleI2C();
SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);

return 1;
}

# 286
bool I2Cdev_writeByte(uint8_t devAddr, uint8_t regAddr, uint8_t data) {
return I2Cdev_writeBytes(devAddr, regAddr, 1, &data);
}

# 297
bool I2Cdev_writeWords(uint8_t devAddr, uint8_t regAddr, uint8_t length, uint16_t* data) {

IdleI2C();
SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);


IdleI2C();
WriteI2C(devAddr << 1 | 0x00);


IdleI2C();
WriteI2C(regAddr);

for (uint8_t i = 0; i < length; i++) {

IdleI2C();
WriteI2C(data[i] >> 8);


IdleI2C();
WriteI2C(data[i] & 0xFF);
}


IdleI2C();
SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);

return 1;
}

# 333
bool I2Cdev_writeWord(uint8_t devAddr, uint8_t regAddr, uint16_t data) {
return I2Cdev_writeWords(devAddr, regAddr, 1, &data);
}

# 344
bool I2Cdev_writeBit(uint8_t devAddr, uint8_t regAddr, uint8_t bitNum, uint8_t data) {
uint8_t b;
I2Cdev_readByte(devAddr, regAddr, &b);
b = (data != 0) ? (b | (1 << bitNum)) : (b & ~(1 << bitNum));
return I2Cdev_writeByte(devAddr, regAddr, b);
}

# 358
bool I2Cdev_writeBitW(uint8_t devAddr, uint8_t regAddr, uint8_t bitNum, uint16_t data) {
uint16_t w;
I2Cdev_readWord(devAddr, regAddr, &w);
w = (data != 0) ? (w | (1 << bitNum)) : (w & ~(1 << bitNum));
return I2Cdev_writeWord(devAddr, regAddr, w);
}

# 373
bool I2Cdev_writeBits(uint8_t devAddr, uint8_t regAddr, uint8_t bitStart, uint8_t length, uint8_t data) {

# 381
uint8_t b;
if (I2Cdev_readByte(devAddr, regAddr, &b) != 0) {
uint8_t mask = ((1 << length) - 1) << (bitStart - length + 1);
data <<= (bitStart - length + 1);
data &= mask;
b &= ~(mask);
b |= data;
return I2Cdev_writeByte(devAddr, regAddr, b);
} else {
return 0;
}
}

# 402
bool I2Cdev_writeBitsW(uint8_t devAddr, uint8_t regAddr, uint8_t bitStart, uint8_t length, uint16_t data) {

# 410
uint16_t w;
if (I2Cdev_readWord(devAddr, regAddr, &w) != 0) {
uint16_t mask = ((1 << length) - 1) << (bitStart - length + 1);
data <<= (bitStart - length + 1);
data &= mask;
w &= ~(mask);
w |= data;
return I2Cdev_writeWord(devAddr, regAddr, w);
} else {
return 0;
}
}

# 406 "../MPU6050.h"
typedef struct MPU6050_t {
uint8_t devAddr;
uint8_t buffer[14];
} MPU6050_t;

void MPU6050(uint8_t address);

void MPU6050_initialize();
bool MPU6050_testConnection();


uint8_t MPU6050_getAuxVDDIOLevel();
void MPU6050_setAuxVDDIOLevel(uint8_t level);


uint8_t MPU6050_getRate();
void MPU6050_setRate(uint8_t rate);


uint8_t MPU6050_getExternalFrameSync();
void MPU6050_setExternalFrameSync(uint8_t sync);
uint8_t MPU6050_getDLPFMode();
void MPU6050_setDLPFMode(uint8_t bandwidth);


uint8_t MPU6050_getFullScaleGyroRange();
void MPU6050_setFullScaleGyroRange(uint8_t range);


bool MPU6050_getAccelXSelfTest();
void MPU6050_setAccelXSelfTest(bool enabled);
bool MPU6050_getAccelYSelfTest();
void MPU6050_setAccelYSelfTest(bool enabled);
bool MPU6050_getAccelZSelfTest();
void MPU6050_setAccelZSelfTest(bool enabled);
uint8_t MPU6050_getFullScaleAccelRange();
void MPU6050_setFullScaleAccelRange(uint8_t range);
uint8_t MPU6050_getDHPFMode();
void MPU6050_setDHPFMode(uint8_t mode);


uint8_t MPU6050_getFreefallDetectionThreshold();
void MPU6050_setFreefallDetectionThreshold(uint8_t threshold);


uint8_t MPU6050_getFreefallDetectionDuration();
void MPU6050_setFreefallDetectionDuration(uint8_t duration);


uint8_t MPU6050_getMotionDetectionThreshold();
void MPU6050_setMotionDetectionThreshold(uint8_t threshold);


uint8_t MPU6050_getMotionDetectionDuration();
void MPU6050_setMotionDetectionDuration(uint8_t duration);


uint8_t MPU6050_getZeroMotionDetectionThreshold();
void MPU6050_setZeroMotionDetectionThreshold(uint8_t threshold);


uint8_t MPU6050_getZeroMotionDetectionDuration();
void MPU6050_setZeroMotionDetectionDuration(uint8_t duration);


bool MPU6050_getTempFIFOEnabled();
void MPU6050_setTempFIFOEnabled(bool enabled);
bool MPU6050_getXGyroFIFOEnabled();
void MPU6050_setXGyroFIFOEnabled(bool enabled);
bool MPU6050_getYGyroFIFOEnabled();
void MPU6050_setYGyroFIFOEnabled(bool enabled);
bool MPU6050_getZGyroFIFOEnabled();
void MPU6050_setZGyroFIFOEnabled(bool enabled);
bool MPU6050_getAccelFIFOEnabled();
void MPU6050_setAccelFIFOEnabled(bool enabled);
bool MPU6050_getSlave2FIFOEnabled();
void MPU6050_setSlave2FIFOEnabled(bool enabled);
bool MPU6050_getSlave1FIFOEnabled();
void MPU6050_setSlave1FIFOEnabled(bool enabled);
bool MPU6050_getSlave0FIFOEnabled();
void MPU6050_setSlave0FIFOEnabled(bool enabled);


bool MPU6050_getMultiMasterEnabled();
void MPU6050_setMultiMasterEnabled(bool enabled);
bool MPU6050_getWaitForExternalSensorEnabled();
void MPU6050_setWaitForExternalSensorEnabled(bool enabled);
bool MPU6050_getSlave3FIFOEnabled();
void MPU6050_setSlave3FIFOEnabled(bool enabled);
bool MPU6050_getSlaveReadWriteTransitionEnabled();
void MPU6050_setSlaveReadWriteTransitionEnabled(bool enabled);
uint8_t MPU6050_getMasterClockSpeed();
void MPU6050_setMasterClockSpeed(uint8_t speed);


uint8_t MPU6050_getSlaveAddress(uint8_t num);
void MPU6050_setSlaveAddress(uint8_t num, uint8_t address);
uint8_t MPU6050_getSlaveRegister(uint8_t num);
void MPU6050_setSlaveRegister(uint8_t num, uint8_t reg);
bool MPU6050_getSlaveEnabled(uint8_t num);
void MPU6050_setSlaveEnabled(uint8_t num, bool enabled);
bool MPU6050_getSlaveWordByteSwap(uint8_t num);
void MPU6050_setSlaveWordByteSwap(uint8_t num, bool enabled);
bool MPU6050_getSlaveWriteMode(uint8_t num);
void MPU6050_setSlaveWriteMode(uint8_t num, bool mode);
bool MPU6050_getSlaveWordGroupOffset(uint8_t num);
void MPU6050_setSlaveWordGroupOffset(uint8_t num, bool enabled);
uint8_t MPU6050_getSlaveDataLength(uint8_t num);
void MPU6050_setSlaveDataLength(uint8_t num, uint8_t length);


uint8_t MPU6050_getSlave4Address();
void MPU6050_setSlave4Address(uint8_t address);
uint8_t MPU6050_getSlave4Register();
void MPU6050_setSlave4Register(uint8_t reg);
void MPU6050_setSlave4OutputByte(uint8_t data);
bool MPU6050_getSlave4Enabled();
void MPU6050_setSlave4Enabled(bool enabled);
bool MPU6050_getSlave4InterruptEnabled();
void MPU6050_setSlave4InterruptEnabled(bool enabled);
bool MPU6050_getSlave4WriteMode();
void MPU6050_setSlave4WriteMode(bool mode);
uint8_t MPU6050_getSlave4MasterDelay();
void MPU6050_setSlave4MasterDelay(uint8_t delay);
uint8_t MPU6050_getSlate4InputByte();


bool MPU6050_getPassthroughStatus();
bool MPU6050_getSlave4IsDone();
bool MPU6050_getLostArbitration();
bool MPU6050_getSlave4Nack();
bool MPU6050_getSlave3Nack();
bool MPU6050_getSlave2Nack();
bool MPU6050_getSlave1Nack();
bool MPU6050_getSlave0Nack();


bool MPU6050_getInterruptMode();
void MPU6050_setInterruptMode(bool mode);
bool MPU6050_getInterruptDrive();
void MPU6050_setInterruptDrive(bool drive);
bool MPU6050_getInterruptLatch();
void MPU6050_setInterruptLatch(bool latch);
bool MPU6050_getInterruptLatchClear();
void MPU6050_setInterruptLatchClear(bool clear);
bool MPU6050_getFSyncInterruptLevel();
void MPU6050_setFSyncInterruptLevel(bool level);
bool MPU6050_getFSyncInterruptEnabled();
void MPU6050_setFSyncInterruptEnabled(bool enabled);
bool MPU6050_getI2CBypassEnabled();
void MPU6050_setI2CBypassEnabled(bool enabled);
bool MPU6050_getClockOutputEnabled();
void MPU6050_setClockOutputEnabled(bool enabled);


uint8_t MPU6050_getIntEnabled();
void MPU6050_setIntEnabled(uint8_t enabled);
bool MPU6050_getIntFreefallEnabled();
void MPU6050_setIntFreefallEnabled(bool enabled);
bool MPU6050_getIntMotionEnabled();
void MPU6050_setIntMotionEnabled(bool enabled);
bool MPU6050_getIntZeroMotionEnabled();
void MPU6050_setIntZeroMotionEnabled(bool enabled);
bool MPU6050_getIntFIFOBufferOverflowEnabled();
void MPU6050_setIntFIFOBufferOverflowEnabled(bool enabled);
bool MPU6050_getIntI2CMasterEnabled();
void MPU6050_setIntI2CMasterEnabled(bool enabled);
bool MPU6050_getIntDataReadyEnabled();
void MPU6050_setIntDataReadyEnabled(bool enabled);


uint8_t MPU6050_getIntStatus();
bool MPU6050_getIntFreefallStatus();
bool MPU6050_getIntMotionStatus();
bool MPU6050_getIntZeroMotionStatus();
bool MPU6050_getIntFIFOBufferOverflowStatus();
bool MPU6050_getIntI2CMasterStatus();
bool MPU6050_getIntDataReadyStatus();


void MPU6050_getMotion9(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz, int16_t* mx, int16_t* my, int16_t* mz);
void MPU6050_getMotion6(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz);
void MPU6050_getAcceleration(int16_t* x, int16_t* y, int16_t* z);
int16_t MPU6050_getAccelerationX();
int16_t MPU6050_getAccelerationY();
int16_t MPU6050_getAccelerationZ();


int16_t MPU6050_getTemperature();


void MPU6050_getRotation(int16_t* x, int16_t* y, int16_t* z);
int16_t MPU6050_getRotationX();
int16_t MPU6050_getRotationY();
int16_t MPU6050_getRotationZ();


uint8_t MPU6050_getExternalSensorByte(int position);
uint16_t MPU6050_getExternalSensorWord(int position);
uint32_t getExternalSensorDWord(int position);


bool MPU6050_getXNegMotionDetected();
bool MPU6050_getXPosMotionDetected();
bool MPU6050_getYNegMotionDetected();
bool MPU6050_getYPosMotionDetected();
bool MPU6050_getZNegMotionDetected();
bool MPU6050_getZPosMotionDetected();
bool MPU6050_getZeroMotionDetected();


void MPU6050_setSlaveOutputByte(uint8_t num, uint8_t data);


bool MPU6050_getExternalShadowDelayEnabled();
void MPU6050_setExternalShadowDelayEnabled(bool enabled);
bool MPU6050_getSlaveDelayEnabled(uint8_t num);
void MPU6050_setSlaveDelayEnabled(uint8_t num, bool enabled);


void MPU6050_resetGyroscopePath();
void MPU6050_resetAccelerometerPath();
void MPU6050_resetTemperaturePath();


uint8_t MPU6050_getAccelerometerPowerOnDelay();
void MPU6050_setAccelerometerPowerOnDelay(uint8_t delay);
uint8_t MPU6050_getFreefallDetectionCounterDecrement();
void MPU6050_setFreefallDetectionCounterDecrement(uint8_t decrement);
uint8_t MPU6050_getMotionDetectionCounterDecrement();
void MPU6050_setMotionDetectionCounterDecrement(uint8_t decrement);


bool MPU6050_getFIFOEnabled();
void MPU6050_setFIFOEnabled(bool enabled);
bool MPU6050_getI2CMasterModeEnabled();
void MPU6050_setI2CMasterModeEnabled(bool enabled);
void MPU6050_switchSPIEnabled(bool enabled);
void MPU6050_resetFIFO();
void MPU6050_resetI2CMaster();
void MPU6050_resetSensors();


void MPU6050_reset();
bool MPU6050_getSleepEnabled();
void MPU6050_setSleepEnabled(bool enabled);
bool MPU6050_getWakeCycleEnabled();
void MPU6050_setWakeCycleEnabled(bool enabled);
bool MPU6050_getTempSensorEnabled();
void MPU6050_setTempSensorEnabled(bool enabled);
uint8_t MPU6050_getClockSource();
void MPU6050_setClockSource(uint8_t source);


uint8_t MPU6050_getWakeFrequency();
void MPU6050_setWakeFrequency(uint8_t frequency);
bool MPU6050_getStandbyXAccelEnabled();
void MPU6050_setStandbyXAccelEnabled(bool enabled);
bool MPU6050_getStandbyYAccelEnabled();
void MPU6050_setStandbyYAccelEnabled(bool enabled);
bool MPU6050_getStandbyZAccelEnabled();
void MPU6050_setStandbyZAccelEnabled(bool enabled);
bool MPU6050_getStandbyXGyroEnabled();
void MPU6050_setStandbyXGyroEnabled(bool enabled);
bool MPU6050_getStandbyYGyroEnabled();
void MPU6050_setStandbyYGyroEnabled(bool enabled);
bool MPU6050_getStandbyZGyroEnabled();
void MPU6050_setStandbyZGyroEnabled(bool enabled);


uint16_t MPU6050_getFIFOCount();


uint8_t MPU6050_getFIFOByte();
void MPU6050_setFIFOByte(uint8_t data);
void MPU6050_getFIFOBytes(uint8_t *data, uint8_t length);


uint8_t MPU6050_getDeviceID();
void MPU6050_setDeviceID(uint8_t id);




uint8_t MPU6050_getOTPBankValid();
void MPU6050_setOTPBankValid(bool enabled);
int8_t getXGyroOffsetTC();
void MPU6050_setXGyroOffsetTC(int8_t offset);


int8_t getYGyroOffsetTC();
void MPU6050_setYGyroOffsetTC(int8_t offset);


int8_t getZGyroOffsetTC();
void MPU6050_setZGyroOffsetTC(int8_t offset);


int8_t getXFineGain();
void MPU6050_setXFineGain(int8_t gain);


int8_t getYFineGain();
void MPU6050_setYFineGain(int8_t gain);


int8_t getZFineGain();
void MPU6050_setZFineGain(int8_t gain);


int16_t MPU6050_getXAccelOffset();
void MPU6050_setXAccelOffset(int16_t offset);


int16_t MPU6050_getYAccelOffset();
void MPU6050_setYAccelOffset(int16_t offset);


int16_t MPU6050_getZAccelOffset();
void MPU6050_setZAccelOffset(int16_t offset);


int16_t MPU6050_getXGyroOffset();
void MPU6050_setXGyroOffset(int16_t offset);


int16_t MPU6050_getYGyroOffset();
void MPU6050_setYGyroOffset(int16_t offset);


int16_t MPU6050_getZGyroOffset();
void MPU6050_setZGyroOffset(int16_t offset);


bool MPU6050_getIntPLLReadyEnabled();
void MPU6050_setIntPLLReadyEnabled(bool enabled);
bool MPU6050_getIntDMPEnabled();
void MPU6050_setIntDMPEnabled(bool enabled);


bool MPU6050_getDMPInt5Status();
bool MPU6050_getDMPInt4Status();
bool MPU6050_getDMPInt3Status();
bool MPU6050_getDMPInt2Status();
bool MPU6050_getDMPInt1Status();
bool MPU6050_getDMPInt0Status();


bool MPU6050_getIntPLLReadyStatus();
bool MPU6050_getIntDMPStatus();


bool MPU6050_getDMPEnabled();
void MPU6050_setDMPEnabled(bool enabled);
void MPU6050_resetDMP();


void MPU6050_setMemoryBank(uint8_t bank, bool prefetchEnabled, bool userBank);


void MPU6050_setMemoryStartAddress(uint8_t address);


uint8_t MPU6050_readMemoryByte();
void MPU6050_writeMemoryByte(uint8_t data);
void MPU6050_readMemoryBlock(uint8_t *data, uint16_t dataSize, uint8_t bank, uint8_t address);

# 779
uint8_t MPU6050_getDMPConfig1();
void MPU6050_setDMPConfig1(uint8_t config);


uint8_t MPU6050_getDMPConfig2();
void MPU6050_setDMPConfig2(uint8_t config);

# 43 "../MPU6050.c"
MPU6050_t mpu6050;

# 51
void MPU6050(uint8_t address) {
mpu6050.devAddr = address;
}

# 62
void MPU6050_initialize() {
MPU6050_setClockSource(0x01);
MPU6050_setFullScaleGyroRange(0x00);
MPU6050_setFullScaleAccelRange(0x00);
MPU6050_setSleepEnabled(0);
}

# 73
bool MPU6050_testConnection() {
return MPU6050_getDeviceID() == 0x34;
}

# 85
uint8_t MPU6050_getAuxVDDIOLevel() {
I2Cdev_readBit(mpu6050.devAddr, 0x01, 7, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 95
void MPU6050_setAuxVDDIOLevel(uint8_t level) {
I2Cdev_writeBit(mpu6050.devAddr, 0x01, 7, level);
}

# 122
uint8_t MPU6050_getRate() {
I2Cdev_readByte(mpu6050.devAddr, 0x19, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 131
void MPU6050_setRate(uint8_t rate) {
I2Cdev_writeByte(mpu6050.devAddr, 0x19, rate);
}

# 164
uint8_t MPU6050_getExternalFrameSync() {
I2Cdev_readBits(mpu6050.devAddr, 0x1A, 5, 3, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 173
void MPU6050_setExternalFrameSync(uint8_t sync) {
I2Cdev_writeBits(mpu6050.devAddr, 0x1A, 5, 3, sync);
}

# 204
uint8_t MPU6050_getDLPFMode() {
I2Cdev_readBits(mpu6050.devAddr, 0x1A, 2, 3, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 216
void MPU6050_setDLPFMode(uint8_t mode) {
I2Cdev_writeBits(mpu6050.devAddr, 0x1A, 2, 3, mode);
}

# 239
uint8_t MPU6050_getFullScaleGyroRange() {
I2Cdev_readBits(mpu6050.devAddr, 0x1B, 4, 2, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 251
void MPU6050_setFullScaleGyroRange(uint8_t range) {
I2Cdev_writeBits(mpu6050.devAddr, 0x1B, 4, 2, range);
}

# 261
bool MPU6050_getAccelXSelfTest() {
I2Cdev_readBit(mpu6050.devAddr, 0x1C, 7, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 269
void MPU6050_setAccelXSelfTest(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x1C, 7, enabled);
}

# 276
bool MPU6050_getAccelYSelfTest() {
I2Cdev_readBit(mpu6050.devAddr, 0x1C, 6, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 284
void MPU6050_setAccelYSelfTest(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x1C, 6, enabled);
}

# 291
bool MPU6050_getAccelZSelfTest() {
I2Cdev_readBit(mpu6050.devAddr, 0x1C, 5, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 299
void MPU6050_setAccelZSelfTest(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x1C, 5, enabled);
}

# 319
uint8_t MPU6050_getFullScaleAccelRange() {
I2Cdev_readBits(mpu6050.devAddr, 0x1C, 4, 2, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 327
void MPU6050_setFullScaleAccelRange(uint8_t range) {
I2Cdev_writeBits(mpu6050.devAddr, 0x1C, 4, 2, range);
}

# 365
uint8_t MPU6050_getDHPFMode() {
I2Cdev_readBits(mpu6050.devAddr, 0x1C, 2, 3, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 375
void MPU6050_setDHPFMode(uint8_t bandwidth) {
I2Cdev_writeBits(mpu6050.devAddr, 0x1C, 2, 3, bandwidth);
}

# 396
uint8_t MPU6050_getFreefallDetectionThreshold() {
I2Cdev_readByte(mpu6050.devAddr, 0x1D, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 405
void MPU6050_setFreefallDetectionThreshold(uint8_t threshold) {
I2Cdev_writeByte(mpu6050.devAddr, 0x1D, threshold);
}

# 428
uint8_t MPU6050_getFreefallDetectionDuration() {
I2Cdev_readByte(mpu6050.devAddr, 0x1E, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 437
void MPU6050_setFreefallDetectionDuration(uint8_t duration) {
I2Cdev_writeByte(mpu6050.devAddr, 0x1E, duration);
}

# 462
uint8_t MPU6050_getMotionDetectionThreshold() {
I2Cdev_readByte(mpu6050.devAddr, 0x1F, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 471
void MPU6050_setMotionDetectionThreshold(uint8_t threshold) {
I2Cdev_writeByte(mpu6050.devAddr, 0x1F, threshold);
}

# 492
uint8_t MPU6050_getMotionDetectionDuration() {
I2Cdev_readByte(mpu6050.devAddr, 0x20, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 501
void MPU6050_setMotionDetectionDuration(uint8_t duration) {
I2Cdev_writeByte(mpu6050.devAddr, 0x20, duration);
}

# 532
uint8_t MPU6050_getZeroMotionDetectionThreshold() {
I2Cdev_readByte(mpu6050.devAddr, 0x21, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 541
void MPU6050_setZeroMotionDetectionThreshold(uint8_t threshold) {
I2Cdev_writeByte(mpu6050.devAddr, 0x21, threshold);
}

# 563
uint8_t MPU6050_getZeroMotionDetectionDuration() {
I2Cdev_readByte(mpu6050.devAddr, 0x22, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 572
void MPU6050_setZeroMotionDetectionDuration(uint8_t duration) {
I2Cdev_writeByte(mpu6050.devAddr, 0x22, duration);
}

# 584
bool MPU6050_getTempFIFOEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x23, 7, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 593
void MPU6050_setTempFIFOEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x23, 7, enabled);
}

# 602
bool MPU6050_getXGyroFIFOEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x23, 6, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 611
void MPU6050_setXGyroFIFOEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x23, 6, enabled);
}

# 620
bool MPU6050_getYGyroFIFOEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x23, 5, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 629
void MPU6050_setYGyroFIFOEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x23, 5, enabled);
}

# 638
bool MPU6050_getZGyroFIFOEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x23, 4, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 647
void MPU6050_setZGyroFIFOEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x23, 4, enabled);
}

# 657
bool MPU6050_getAccelFIFOEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x23, 3, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 666
void MPU6050_setAccelFIFOEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x23, 3, enabled);
}

# 675
bool MPU6050_getSlave2FIFOEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x23, 2, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 684
void MPU6050_setSlave2FIFOEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x23, 2, enabled);
}

# 693
bool MPU6050_getSlave1FIFOEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x23, 1, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 702
void MPU6050_setSlave1FIFOEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x23, 1, enabled);
}

# 711
bool MPU6050_getSlave0FIFOEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x23, 0, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 720
void MPU6050_setSlave0FIFOEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x23, 0, enabled);
}

# 741
bool MPU6050_getMultiMasterEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x24, 7, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 750
void MPU6050_setMultiMasterEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x24, 7, enabled);
}

# 764
bool MPU6050_getWaitForExternalSensorEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x24, 6, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 773
void MPU6050_setWaitForExternalSensorEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x24, 6, enabled);
}

# 782
bool MPU6050_getSlave3FIFOEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x24, 5, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 791
void MPU6050_setSlave3FIFOEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x24, 5, enabled);
}

# 804
bool MPU6050_getSlaveReadWriteTransitionEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x24, 4, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 813
void MPU6050_setSlaveReadWriteTransitionEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x24, 4, enabled);
}

# 845
uint8_t MPU6050_getMasterClockSpeed() {
I2Cdev_readBits(mpu6050.devAddr, 0x24, 3, 4, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 853
void MPU6050_setMasterClockSpeed(uint8_t speed) {
I2Cdev_writeBits(mpu6050.devAddr, 0x24, 3, 4, speed);
}

# 900
uint8_t MPU6050_getSlaveAddress(uint8_t num) {
if (num > 3) return 0;
I2Cdev_readByte(mpu6050.devAddr, 0x25 + num*3, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 911
void MPU6050_setSlaveAddress(uint8_t num, uint8_t address) {
if (num > 3) return;
I2Cdev_writeByte(mpu6050.devAddr, 0x25 + num*3, address);
}

# 926
uint8_t MPU6050_getSlaveRegister(uint8_t num) {
if (num > 3) return 0;
I2Cdev_readByte(mpu6050.devAddr, 0x26 + num*3, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 937
void MPU6050_setSlaveRegister(uint8_t num, uint8_t reg) {
if (num > 3) return;
I2Cdev_writeByte(mpu6050.devAddr, 0x26 + num*3, reg);
}

# 948
bool MPU6050_getSlaveEnabled(uint8_t num) {
if (num > 3) return 0;
I2Cdev_readBit(mpu6050.devAddr, 0x27 + num*3, 7, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 959
void MPU6050_setSlaveEnabled(uint8_t num, bool enabled) {
if (num > 3) return;
I2Cdev_writeBit(mpu6050.devAddr, 0x27 + num*3, 7, enabled);
}

# 974
bool MPU6050_getSlaveWordByteSwap(uint8_t num) {
if (num > 3) return 0;
I2Cdev_readBit(mpu6050.devAddr, 0x27 + num*3, 6, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 985
void MPU6050_setSlaveWordByteSwap(uint8_t num, bool enabled) {
if (num > 3) return;
I2Cdev_writeBit(mpu6050.devAddr, 0x27 + num*3, 6, enabled);
}

# 999
bool MPU6050_getSlaveWriteMode(uint8_t num) {
if (num > 3) return 0;
I2Cdev_readBit(mpu6050.devAddr, 0x27 + num*3, 5, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1010
void MPU6050_setSlaveWriteMode(uint8_t num, bool mode) {
if (num > 3) return;
I2Cdev_writeBit(mpu6050.devAddr, 0x27 + num*3, 5, mode);
}

# 1025
bool MPU6050_getSlaveWordGroupOffset(uint8_t num) {
if (num > 3) return 0;
I2Cdev_readBit(mpu6050.devAddr, 0x27 + num*3, 4, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1036
void MPU6050_setSlaveWordGroupOffset(uint8_t num, bool enabled) {
if (num > 3) return;
I2Cdev_writeBit(mpu6050.devAddr, 0x27 + num*3, 4, enabled);
}

# 1047
uint8_t MPU6050_getSlaveDataLength(uint8_t num) {
if (num > 3) return 0;
I2Cdev_readBits(mpu6050.devAddr, 0x27 + num*3, 3, 4, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1058
void MPU6050_setSlaveDataLength(uint8_t num, uint8_t length) {
if (num > 3) return;
I2Cdev_writeBits(mpu6050.devAddr, 0x27 + num*3, 3, 4, length);
}

# 1074
uint8_t MPU6050_getSlave4Address() {
I2Cdev_readByte(mpu6050.devAddr, 0x31, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1083
void MPU6050_setSlave4Address(uint8_t address) {
I2Cdev_writeByte(mpu6050.devAddr, 0x31, address);
}

# 1093
uint8_t MPU6050_getSlave4Register() {
I2Cdev_readByte(mpu6050.devAddr, 0x32, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1102
void MPU6050_setSlave4Register(uint8_t reg) {
I2Cdev_writeByte(mpu6050.devAddr, 0x32, reg);
}

# 1111
void MPU6050_setSlave4OutputByte(uint8_t data) {
I2Cdev_writeByte(mpu6050.devAddr, 0x33, data);
}

# 1120
bool MPU6050_getSlave4Enabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x34, 7, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1129
void MPU6050_setSlave4Enabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x34, 7, enabled);
}

# 1141
bool MPU6050_getSlave4InterruptEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x34, 6, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1150
void MPU6050_setSlave4InterruptEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x34, 6, enabled);
}

# 1162
bool MPU6050_getSlave4WriteMode() {
I2Cdev_readBit(mpu6050.devAddr, 0x34, 5, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1171
void MPU6050_setSlave4WriteMode(bool mode) {
I2Cdev_writeBit(mpu6050.devAddr, 0x34, 5, mode);
}

# 1189
uint8_t MPU6050_getSlave4MasterDelay() {
I2Cdev_readBits(mpu6050.devAddr, 0x34, 4, 5, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1198
void MPU6050_setSlave4MasterDelay(uint8_t delay) {
I2Cdev_writeBits(mpu6050.devAddr, 0x34, 4, 5, delay);
}

# 1207
uint8_t MPU6050_getSlate4InputByte() {
I2Cdev_readByte(mpu6050.devAddr, 0x35, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1223
bool MPU6050_getPassthroughStatus() {
I2Cdev_readBit(mpu6050.devAddr, 0x36, 7, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1235
bool MPU6050_getSlave4IsDone() {
I2Cdev_readBit(mpu6050.devAddr, 0x36, 6, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1246
bool MPU6050_getLostArbitration() {
I2Cdev_readBit(mpu6050.devAddr, 0x36, 5, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1257
bool MPU6050_getSlave4Nack() {
I2Cdev_readBit(mpu6050.devAddr, 0x36, 4, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1268
bool MPU6050_getSlave3Nack() {
I2Cdev_readBit(mpu6050.devAddr, 0x36, 3, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1279
bool MPU6050_getSlave2Nack() {
I2Cdev_readBit(mpu6050.devAddr, 0x36, 2, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1290
bool MPU6050_getSlave1Nack() {
I2Cdev_readBit(mpu6050.devAddr, 0x36, 1, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1301
bool MPU6050_getSlave0Nack() {
I2Cdev_readBit(mpu6050.devAddr, 0x36, 0, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1314
bool MPU6050_getInterruptMode() {
I2Cdev_readBit(mpu6050.devAddr, 0x37, 7, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1324
void MPU6050_setInterruptMode(bool mode) {
I2Cdev_writeBit(mpu6050.devAddr, 0x37, 7, mode);
}

# 1333
bool MPU6050_getInterruptDrive() {
I2Cdev_readBit(mpu6050.devAddr, 0x37, 6, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1343
void MPU6050_setInterruptDrive(bool drive) {
I2Cdev_writeBit(mpu6050.devAddr, 0x37, 6, drive);
}

# 1352
bool MPU6050_getInterruptLatch() {
I2Cdev_readBit(mpu6050.devAddr, 0x37, 5, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1362
void MPU6050_setInterruptLatch(bool latch) {
I2Cdev_writeBit(mpu6050.devAddr, 0x37, 5, latch);
}

# 1371
bool MPU6050_getInterruptLatchClear() {
I2Cdev_readBit(mpu6050.devAddr, 0x37, 4, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1381
void MPU6050_setInterruptLatchClear(bool clear) {
I2Cdev_writeBit(mpu6050.devAddr, 0x37, 4, clear);
}

# 1390
bool MPU6050_getFSyncInterruptLevel() {
I2Cdev_readBit(mpu6050.devAddr, 0x37, 3, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1400
void MPU6050_setFSyncInterruptLevel(bool level) {
I2Cdev_writeBit(mpu6050.devAddr, 0x37, 3, level);
}

# 1409
bool MPU6050_getFSyncInterruptEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x37, 2, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1419
void MPU6050_setFSyncInterruptEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x37, 2, enabled);
}

# 1433
bool MPU6050_getI2CBypassEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x37, 1, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1448
void MPU6050_setI2CBypassEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x37, 1, enabled);
}

# 1460
bool MPU6050_getClockOutputEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x37, 0, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1473
void MPU6050_setClockOutputEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x37, 0, enabled);
}

# 1486
uint8_t MPU6050_getIntEnabled() {
I2Cdev_readByte(mpu6050.devAddr, 0x38, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1498
void MPU6050_setIntEnabled(uint8_t enabled) {
I2Cdev_writeByte(mpu6050.devAddr, 0x38, enabled);
}

# 1507
bool MPU6050_getIntFreefallEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x38, 7, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1517
void MPU6050_setIntFreefallEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x38, 7, enabled);
}

# 1526
bool MPU6050_getIntMotionEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x38, 6, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1536
void MPU6050_setIntMotionEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x38, 6, enabled);
}

# 1545
bool MPU6050_getIntZeroMotionEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x38, 5, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1555
void MPU6050_setIntZeroMotionEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x38, 5, enabled);
}

# 1564
bool MPU6050_getIntFIFOBufferOverflowEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x38, 4, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1574
void MPU6050_setIntFIFOBufferOverflowEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x38, 4, enabled);
}

# 1584
bool MPU6050_getIntI2CMasterEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x38, 3, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1594
void MPU6050_setIntI2CMasterEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x38, 3, enabled);
}

# 1604
bool MPU6050_getIntDataReadyEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x38, 0, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1614
void MPU6050_setIntDataReadyEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x38, 0, enabled);
}

# 1627
uint8_t MPU6050_getIntStatus() {
I2Cdev_readByte(mpu6050.devAddr, 0x3A, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1638
bool MPU6050_getIntFreefallStatus() {
I2Cdev_readBit(mpu6050.devAddr, 0x3A, 7, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1649
bool MPU6050_getIntMotionStatus() {
I2Cdev_readBit(mpu6050.devAddr, 0x3A, 6, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1660
bool MPU6050_getIntZeroMotionStatus() {
I2Cdev_readBit(mpu6050.devAddr, 0x3A, 5, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1671
bool MPU6050_getIntFIFOBufferOverflowStatus() {
I2Cdev_readBit(mpu6050.devAddr, 0x3A, 4, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1683
bool MPU6050_getIntI2CMasterStatus() {
I2Cdev_readBit(mpu6050.devAddr, 0x3A, 3, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1694
bool MPU6050_getIntDataReadyStatus() {
I2Cdev_readBit(mpu6050.devAddr, 0x3A, 0, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1717
void MPU6050_getMotion9(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz, int16_t* mx, int16_t* my, int16_t* mz) {
MPU6050_getMotion6(ax, ay, az, gx, gy, gz);

}

# 1733
void MPU6050_getMotion6(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
I2Cdev_readBytes(mpu6050.devAddr, 0x3B, 14, mpu6050.buffer);
*ax = (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
*ay = (((int16_t)mpu6050.buffer[2]) << 8) | mpu6050.buffer[3];
*az = (((int16_t)mpu6050.buffer[4]) << 8) | mpu6050.buffer[5];
*gx = (((int16_t)mpu6050.buffer[8]) << 8) | mpu6050.buffer[9];
*gy = (((int16_t)mpu6050.buffer[10]) << 8) | mpu6050.buffer[11];
*gz = (((int16_t)mpu6050.buffer[12]) << 8) | mpu6050.buffer[13];
}

# 1778
void MPU6050_getAcceleration(int16_t* x, int16_t* y, int16_t* z) {
I2Cdev_readBytes(mpu6050.devAddr, 0x3B, 6, mpu6050.buffer);
*x = (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
*y = (((int16_t)mpu6050.buffer[2]) << 8) | mpu6050.buffer[3];
*z = (((int16_t)mpu6050.buffer[4]) << 8) | mpu6050.buffer[5];
}

# 1789
int16_t MPU6050_getAccelerationX() {
I2Cdev_readBytes(mpu6050.devAddr, 0x3B, 2, mpu6050.buffer);
return (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
}

# 1798
int16_t MPU6050_getAccelerationY() {
I2Cdev_readBytes(mpu6050.devAddr, 0x3D, 2, mpu6050.buffer);
return (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
}

# 1807
int16_t MPU6050_getAccelerationZ() {
I2Cdev_readBytes(mpu6050.devAddr, 0x3F, 2, mpu6050.buffer);
return (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
}

# 1818
int16_t MPU6050_getTemperature() {
I2Cdev_readBytes(mpu6050.devAddr, 0x41, 2, mpu6050.buffer);
return (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
}

# 1857
void MPU6050_getRotation(int16_t* x, int16_t* y, int16_t* z) {
I2Cdev_readBytes(mpu6050.devAddr, 0x43, 6, mpu6050.buffer);
*x = (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
*y = (((int16_t)mpu6050.buffer[2]) << 8) | mpu6050.buffer[3];
*z = (((int16_t)mpu6050.buffer[4]) << 8) | mpu6050.buffer[5];
}

# 1868
int16_t MPU6050_getRotationX() {
I2Cdev_readBytes(mpu6050.devAddr, 0x43, 2, mpu6050.buffer);
return (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
}

# 1877
int16_t MPU6050_getRotationY() {
I2Cdev_readBytes(mpu6050.devAddr, 0x45, 2, mpu6050.buffer);
return (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
}

# 1886
int16_t MPU6050_getRotationZ() {
I2Cdev_readBytes(mpu6050.devAddr, 0x47, 2, mpu6050.buffer);
return (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
}

# 1967
uint8_t MPU6050_getExternalSensorByte(int position) {
I2Cdev_readByte(mpu6050.devAddr, 0x49 + position, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 1976
uint16_t MPU6050_getExternalSensorWord(int position) {
I2Cdev_readBytes(mpu6050.devAddr, 0x49 + position, 2, mpu6050.buffer);
return (((uint16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
}

# 1985
uint32_t MPU6050_getExternalSensorDWord(int position) {
I2Cdev_readBytes(mpu6050.devAddr, 0x49 + position, 4, mpu6050.buffer);
return (((uint32_t)mpu6050.buffer[0]) << 24) | (((uint32_t)mpu6050.buffer[1]) << 16) | (((uint16_t)mpu6050.buffer[2]) << 8) | mpu6050.buffer[3];
}

# 1997
bool MPU6050_getXNegMotionDetected() {
I2Cdev_readBit(mpu6050.devAddr, 0x61, 7, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2006
bool MPU6050_getXPosMotionDetected() {
I2Cdev_readBit(mpu6050.devAddr, 0x61, 6, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2015
bool MPU6050_getYNegMotionDetected() {
I2Cdev_readBit(mpu6050.devAddr, 0x61, 5, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2024
bool MPU6050_getYPosMotionDetected() {
I2Cdev_readBit(mpu6050.devAddr, 0x61, 4, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2033
bool MPU6050_getZNegMotionDetected() {
I2Cdev_readBit(mpu6050.devAddr, 0x61, 3, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2042
bool MPU6050_getZPosMotionDetected() {
I2Cdev_readBit(mpu6050.devAddr, 0x61, 2, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2051
bool MPU6050_getZeroMotionDetected() {
I2Cdev_readBit(mpu6050.devAddr, 0x61, 0, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2066
void MPU6050_setSlaveOutputByte(uint8_t num, uint8_t data) {
if (num > 3) return;
I2Cdev_writeByte(mpu6050.devAddr, 0x63 + num, data);
}

# 2081
bool MPU6050_getExternalShadowDelayEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x67, 7, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2091
void MPU6050_setExternalShadowDelayEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x67, 7, enabled);
}

# 2112
bool MPU6050_getSlaveDelayEnabled(uint8_t num) {

if (num > 4) return 0;
I2Cdev_readBit(mpu6050.devAddr, 0x67, num, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2124
void MPU6050_setSlaveDelayEnabled(uint8_t num, bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x67, num, enabled);
}

# 2136
void MPU6050_resetGyroscopePath() {
I2Cdev_writeBit(mpu6050.devAddr, 0x68, 2, 1);
}

# 2145
void MPU6050_resetAccelerometerPath() {
I2Cdev_writeBit(mpu6050.devAddr, 0x68, 1, 1);
}

# 2154
void MPU6050_resetTemperaturePath() {
I2Cdev_writeBit(mpu6050.devAddr, 0x68, 0, 1);
}

# 2174
uint8_t MPU6050_getAccelerometerPowerOnDelay() {
I2Cdev_readBits(mpu6050.devAddr, 0x69, 5, 2, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2184
void MPU6050_setAccelerometerPowerOnDelay(uint8_t delay) {
I2Cdev_writeBits(mpu6050.devAddr, 0x69, 5, 2, delay);
}

# 2213
uint8_t MPU6050_getFreefallDetectionCounterDecrement() {
I2Cdev_readBits(mpu6050.devAddr, 0x69, 3, 2, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2223
void MPU6050_setFreefallDetectionCounterDecrement(uint8_t decrement) {
I2Cdev_writeBits(mpu6050.devAddr, 0x69, 3, 2, decrement);
}

# 2249
uint8_t MPU6050_getMotionDetectionCounterDecrement() {
I2Cdev_readBits(mpu6050.devAddr, 0x69, 1, 2, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2259
void MPU6050_setMotionDetectionCounterDecrement(uint8_t decrement) {
I2Cdev_writeBits(mpu6050.devAddr, 0x69, 1, 2, decrement);
}

# 2273
bool MPU6050_getFIFOEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x6A, 6, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2283
void MPU6050_setFIFOEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x6A, 6, enabled);
}

# 2297
bool MPU6050_getI2CMasterModeEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x6A, 5, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2307
void MPU6050_setI2CMasterModeEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x6A, 5, enabled);
}

# 2314
void MPU6050_switchSPIEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x6A, 4, enabled);
}

# 2323
void MPU6050_resetFIFO() {
I2Cdev_writeBit(mpu6050.devAddr, 0x6A, 2, 1);
}

# 2332
void MPU6050_resetI2CMaster() {
I2Cdev_writeBit(mpu6050.devAddr, 0x6A, 1, 1);
}

# 2347
void MPU6050_resetSensors() {
I2Cdev_writeBit(mpu6050.devAddr, 0x6A, 0, 1);
}

# 2358
void MPU6050_reset() {
I2Cdev_writeBit(mpu6050.devAddr, 0x6B, 7, 1);
}

# 2372
bool MPU6050_getSleepEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x6B, 6, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2382
void MPU6050_setSleepEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x6B, 6, enabled);
}

# 2393
bool MPU6050_getWakeCycleEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x6B, 5, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2403
void MPU6050_setWakeCycleEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x6B, 5, enabled);
}

# 2417
bool MPU6050_getTempSensorEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x6B, 3, mpu6050.buffer);
return mpu6050.buffer[0] == 0;
}

# 2431
void MPU6050_setTempSensorEnabled(bool enabled) {

I2Cdev_writeBit(mpu6050.devAddr, 0x6B, 3, !enabled);
}

# 2441
uint8_t MPU6050_getClockSource() {
I2Cdev_readBits(mpu6050.devAddr, 0x6B, 2, 3, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2475
void MPU6050_setClockSource(uint8_t source) {
I2Cdev_writeBits(mpu6050.devAddr, 0x6B, 2, 3, source);
}

# 2504
uint8_t MPU6050_getWakeFrequency() {
I2Cdev_readBits(mpu6050.devAddr, 0x6C, 7, 2, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2512
void MPU6050_setWakeFrequency(uint8_t frequency) {
I2Cdev_writeBits(mpu6050.devAddr, 0x6C, 7, 2, frequency);
}

# 2522
bool MPU6050_getStandbyXAccelEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x6C, 5, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2532
void MPU6050_setStandbyXAccelEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x6C, 5, enabled);
}

# 2541
bool MPU6050_getStandbyYAccelEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x6C, 4, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2551
void MPU6050_setStandbyYAccelEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x6C, 4, enabled);
}

# 2560
bool MPU6050_getStandbyZAccelEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x6C, 3, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2570
void MPU6050_setStandbyZAccelEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x6C, 3, enabled);
}

# 2579
bool MPU6050_getStandbyXGyroEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x6C, 2, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2589
void MPU6050_setStandbyXGyroEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x6C, 2, enabled);
}

# 2598
bool MPU6050_getStandbyYGyroEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x6C, 1, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2608
void MPU6050_setStandbyYGyroEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x6C, 1, enabled);
}

# 2617
bool MPU6050_getStandbyZGyroEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x6C, 0, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2627
void MPU6050_setStandbyZGyroEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x6C, 0, enabled);
}

# 2640
uint16_t MPU6050_getFIFOCount() {
I2Cdev_readBytes(mpu6050.devAddr, 0x72, 2, mpu6050.buffer);
return (((uint16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
}

# 2672
uint8_t MPU6050_getFIFOByte() {
I2Cdev_readByte(mpu6050.devAddr, 0x74, mpu6050.buffer);
return mpu6050.buffer[0];
}
void MPU6050_getFIFOBytes(uint8_t *data, uint8_t length) {
I2Cdev_readBytes(mpu6050.devAddr, 0x74, length, data);
}

# 2683
void MPU6050_setFIFOByte(uint8_t data) {
I2Cdev_writeByte(mpu6050.devAddr, 0x74, data);
}

# 2696
uint8_t MPU6050_getDeviceID() {
I2Cdev_readBits(mpu6050.devAddr, 0x75, 6, 6, mpu6050.buffer);
return mpu6050.buffer[0];
}

# 2709
void MPU6050_setDeviceID(uint8_t id) {
I2Cdev_writeBits(mpu6050.devAddr, 0x75, 6, 6, id);
}

# 2717
uint8_t MPU6050_getOTPBankValid() {
I2Cdev_readBit(mpu6050.devAddr, 0x00, 0, mpu6050.buffer);
return mpu6050.buffer[0];
}
void MPU6050_setOTPBankValid(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x00, 0, enabled);
}
int8_t MPU6050_getXGyroOffsetTC() {
I2Cdev_readBits(mpu6050.devAddr, 0x00, 6, 6, mpu6050.buffer);
return mpu6050.buffer[0];
}
void MPU6050_setXGyroOffsetTC(int8_t offset) {
I2Cdev_writeBits(mpu6050.devAddr, 0x00, 6, 6, offset);
}



int8_t MPU6050_getYGyroOffsetTC() {
I2Cdev_readBits(mpu6050.devAddr, 0x01, 6, 6, mpu6050.buffer);
return mpu6050.buffer[0];
}
void MPU6050_setYGyroOffsetTC(int8_t offset) {
I2Cdev_writeBits(mpu6050.devAddr, 0x01, 6, 6, offset);
}



int8_t MPU6050_getZGyroOffsetTC() {
I2Cdev_readBits(mpu6050.devAddr, 0x02, 6, 6, mpu6050.buffer);
return mpu6050.buffer[0];
}
void MPU6050_setZGyroOffsetTC(int8_t offset) {
I2Cdev_writeBits(mpu6050.devAddr, 0x02, 6, 6, offset);
}



int8_t MPU6050_getXFineGain() {
I2Cdev_readByte(mpu6050.devAddr, 0x03, mpu6050.buffer);
return mpu6050.buffer[0];
}
void MPU6050_setXFineGain(int8_t gain) {
I2Cdev_writeByte(mpu6050.devAddr, 0x03, gain);
}



int8_t MPU6050_getYFineGain() {
I2Cdev_readByte(mpu6050.devAddr, 0x04, mpu6050.buffer);
return mpu6050.buffer[0];
}
void MPU6050_setYFineGain(int8_t gain) {
I2Cdev_writeByte(mpu6050.devAddr, 0x04, gain);
}



int8_t MPU6050_getZFineGain() {
I2Cdev_readByte(mpu6050.devAddr, 0x05, mpu6050.buffer);
return mpu6050.buffer[0];
}
void MPU6050_setZFineGain(int8_t gain) {
I2Cdev_writeByte(mpu6050.devAddr, 0x05, gain);
}



int16_t MPU6050_getXAccelOffset() {
I2Cdev_readBytes(mpu6050.devAddr, 0x06, 2, mpu6050.buffer);
return (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
}
void MPU6050_setXAccelOffset(int16_t offset) {
I2Cdev_writeWord(mpu6050.devAddr, 0x06, offset);
}



int16_t MPU6050_getYAccelOffset() {
I2Cdev_readBytes(mpu6050.devAddr, 0x08, 2, mpu6050.buffer);
return (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
}
void MPU6050_setYAccelOffset(int16_t offset) {
I2Cdev_writeWord(mpu6050.devAddr, 0x08, offset);
}



int16_t MPU6050_getZAccelOffset() {
I2Cdev_readBytes(mpu6050.devAddr, 0x0A, 2, mpu6050.buffer);
return (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
}
void MPU6050_setZAccelOffset(int16_t offset) {
I2Cdev_writeWord(mpu6050.devAddr, 0x0A, offset);
}



int16_t MPU6050_getXGyroOffset() {
I2Cdev_readBytes(mpu6050.devAddr, 0x13, 2, mpu6050.buffer);
return (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
}
void MPU6050_setXGyroOffset(int16_t offset) {
I2Cdev_writeWord(mpu6050.devAddr, 0x13, offset);
}



int16_t MPU6050_getYGyroOffset() {
I2Cdev_readBytes(mpu6050.devAddr, 0x15, 2, mpu6050.buffer);
return (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
}
void MPU6050_setYGyroOffset(int16_t offset) {
I2Cdev_writeWord(mpu6050.devAddr, 0x15, offset);
}



int16_t MPU6050_getZGyroOffset() {
I2Cdev_readBytes(mpu6050.devAddr, 0x17, 2, mpu6050.buffer);
return (((int16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
}
void MPU6050_setZGyroOffset(int16_t offset) {
I2Cdev_writeWord(mpu6050.devAddr, 0x17, offset);
}



bool MPU6050_getIntPLLReadyEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x38, 2, mpu6050.buffer);
return mpu6050.buffer[0];
}
void MPU6050_setIntPLLReadyEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x38, 2, enabled);
}
bool MPU6050_getIntDMPEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x38, 1, mpu6050.buffer);
return mpu6050.buffer[0];
}
void MPU6050_setIntDMPEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x38, 1, enabled);
}



bool MPU6050_getDMPInt5Status() {
I2Cdev_readBit(mpu6050.devAddr, 0x39, 5, mpu6050.buffer);
return mpu6050.buffer[0];
}
bool MPU6050_getDMPInt4Status() {
I2Cdev_readBit(mpu6050.devAddr, 0x39, 4, mpu6050.buffer);
return mpu6050.buffer[0];
}
bool MPU6050_getDMPInt3Status() {
I2Cdev_readBit(mpu6050.devAddr, 0x39, 3, mpu6050.buffer);
return mpu6050.buffer[0];
}
bool MPU6050_getDMPInt2Status() {
I2Cdev_readBit(mpu6050.devAddr, 0x39, 2, mpu6050.buffer);
return mpu6050.buffer[0];
}
bool MPU6050_getDMPInt1Status() {
I2Cdev_readBit(mpu6050.devAddr, 0x39, 1, mpu6050.buffer);
return mpu6050.buffer[0];
}
bool MPU6050_getDMPInt0Status() {
I2Cdev_readBit(mpu6050.devAddr, 0x39, 0, mpu6050.buffer);
return mpu6050.buffer[0];
}



bool MPU6050_getIntPLLReadyStatus() {
I2Cdev_readBit(mpu6050.devAddr, 0x3A, 2, mpu6050.buffer);
return mpu6050.buffer[0];
}
bool MPU6050_getIntDMPStatus() {
I2Cdev_readBit(mpu6050.devAddr, 0x3A, 1, mpu6050.buffer);
return mpu6050.buffer[0];
}



bool MPU6050_getDMPEnabled() {
I2Cdev_readBit(mpu6050.devAddr, 0x6A, 7, mpu6050.buffer);
return mpu6050.buffer[0];
}
void MPU6050_setDMPEnabled(bool enabled) {
I2Cdev_writeBit(mpu6050.devAddr, 0x6A, 7, enabled);
}
void MPU6050_resetDMP() {
I2Cdev_writeBit(mpu6050.devAddr, 0x6A, 3, 1);
}



void MPU6050_setMemoryBank(uint8_t bank, bool prefetchEnabled, bool userBank) {
bank &= 0x1F;
if (userBank) bank |= 0x20;
if (prefetchEnabled) bank |= 0x40;
I2Cdev_writeByte(mpu6050.devAddr, 0x6D, bank);
}



void MPU6050_setMemoryStartAddress(uint8_t address) {
I2Cdev_writeByte(mpu6050.devAddr, 0x6E, address);
}



uint8_t MPU6050_readMemoryByte() {
I2Cdev_readByte(mpu6050.devAddr, 0x6F, mpu6050.buffer);
return mpu6050.buffer[0];
}
void MPU6050_writeMemoryByte(uint8_t data) {
I2Cdev_writeByte(mpu6050.devAddr, 0x6F, data);
}
void MPU6050_readMemoryBlock(uint8_t *data, uint16_t dataSize, uint8_t bank, uint8_t address) {
MPU6050_setMemoryBank(bank, 0, 0);
MPU6050_setMemoryStartAddress(address);
uint8_t chunkSize;
for (uint16_t i = 0; i < dataSize;) {

chunkSize = 16;


if (i + chunkSize > dataSize) chunkSize = dataSize - i;


if (chunkSize > 256 - address) chunkSize = 256 - address;


I2Cdev_readBytes(mpu6050.devAddr, 0x6F, chunkSize, data + i);


i += chunkSize;


address += chunkSize;


if (i < dataSize) {
if (address == 0) bank++;
MPU6050_setMemoryBank(bank, 0, 0);
MPU6050_setMemoryStartAddress(address);
}
}
}

# 3125
uint8_t MPU6050_getDMPConfig1() {
I2Cdev_readByte(mpu6050.devAddr, 0x70, mpu6050.buffer);
return mpu6050.buffer[0];
}
void MPU6050_setDMPConfig1(uint8_t config) {
I2Cdev_writeByte(mpu6050.devAddr, 0x70, config);
}



uint8_t MPU6050_getDMPConfig2() {
I2Cdev_readByte(mpu6050.devAddr, 0x71, mpu6050.buffer);
return mpu6050.buffer[0];
}
void MPU6050_setDMPConfig2(uint8_t config) {
I2Cdev_writeByte(mpu6050.devAddr, 0x71, config);
}

# 2 "../MS5803-01BA.h"
void MS_5803_setResolution(uint16_t res);

void MS_5803_resetSensor(void);

unsigned char MS_5803_CRC(unsigned int n_prom[]);

unsigned long MS_5803_ADC(char commandADC);

BOOL MS_5803_init(BOOL Verbose);

void MS_5803_readSensor(void);

float temperature(void);

float pressure(void);

unsigned long D1val(void);

unsigned long D2val(void);

# 22 "../MS5803-01BA.c"
typedef signed long long int64_t;


static float mbar;
static float tempC;

# 32
static int32_t mbarInt;


static unsigned int sensorCoeffs[8];

static uint32_t D1 = 0;
static uint32_t D2 = 0;



static int32_t dT = 0;
static int32_t TEMP = 0;


static int64_t Offset = 0;
static int64_t Sensitivity = 0;
static int64_t T2 = 0;
static int64_t OFF2 = 0;
static int64_t Sens2 = 0;

static BYTE HighByte;
static BYTE MidByte;
static BYTE LowByte;

static BYTE I2C_Bytes[3];

static uint16_t Resolution;

float temperature(void) {return tempC;}

float pressure(void) {return mbar;}

# 74
unsigned long D1val(void) {return D1;}
unsigned long D2val(void) {return D2;}



void MS_5803_setResolution(uint16_t res) {


Resolution = res;
}



void MS_5803_resetSensor(void) {
I2Cdev_writeBytes(0x76, 0x1E, 0 ,0);
Delay100TCYx(10);
}

unsigned char MS_5803_CRC(unsigned int n_prom[]) {
int cnt;
unsigned int n_rem;
unsigned int crc_read;
unsigned char n_bit;
n_rem = 0x00;
crc_read = sensorCoeffs[7];
sensorCoeffs[7] = (0xFF00 & (sensorCoeffs[7]));
for (cnt = 0; cnt < 16; cnt++)
{
if (cnt%2 == 1) {
n_rem ^= (unsigned short)((sensorCoeffs[cnt>>1]) & 0x00FF);
}
else {
n_rem ^= (unsigned short)(sensorCoeffs[cnt>>1] >> 8);
}
for (n_bit = 8; n_bit > 0; n_bit--)
{
if (n_rem & (0x8000))
{
n_rem = (n_rem << 1) ^ 0x3000;
}
else {
n_rem = (n_rem << 1);
}
}
}
n_rem = (0x000F & (n_rem >> 12));
sensorCoeffs[7] = crc_read;

return (n_rem ^ 0x00);
}



unsigned long MS_5803_ADC(char commandADC) {


long result = 0;

I2Cdev_writeBytes(0x76, 0x40 + commandADC, 0 ,0);



switch (commandADC & 0x0F)
{
case 0x00 :
Delay100TCYx(1);
break;
case 0x02 :
Delay100TCYx(3);
break;
case 0x04:
Delay100TCYx(4);
break;
case 0x06:
Delay100TCYx(6);
break;
case 0x08:
Delay100TCYx(10);
break;
}

I2Cdev_readBytes(0x76, 0x00, 3, I2C_Bytes);


result = ((long)I2C_Bytes[0] << 16) + ((long)I2C_Bytes[1] << 8) + (long)I2C_Bytes[2];
return result;
}


BOOL MS_5803_init(BOOL Verbose) {
MS_5803_resetSensor();

if (Verbose) {

if (Resolution == 256 | Resolution == 512 | Resolution == 1024 | Resolution == 2048 | Resolution == 4096){

# 171
} else {

# 176
}

}

for (int i = 0; i < 8; i++ ){

I2Cdev_readBytes(0x76, 0xA0 + (i * 2), 2, I2C_Bytes);
sensorCoeffs[i] = (((unsigned int)I2C_Bytes[0] << 8) + I2C_Bytes[1]);
if (Verbose){

# 191
}
}

unsigned char p_crc = sensorCoeffs[7];

unsigned char n_crc = MS_5803_CRC(sensorCoeffs);

if (Verbose) {

# 203
}


if (p_crc != n_crc) {
return 0;
}

return 1;
}


void MS_5803_readSensor(void) {



if (Resolution == 256){
D1 = MS_5803_ADC(0x00 + 0x00);
D2 = MS_5803_ADC(0x10 + 0x00);
} else if (Resolution == 512) {
D1 = MS_5803_ADC(0x00 + 0x02);
D2 = MS_5803_ADC(0x10 + 0x02);
} else if (Resolution == 1024) {
D1 = MS_5803_ADC(0x00 + 0x04);
D2 = MS_5803_ADC(0x10 + 0x04);
} else if (Resolution == 2048) {
D1 = MS_5803_ADC(0x00 + 0x06);
D2 = MS_5803_ADC(0x10 + 0x06);
} else if (Resolution == 4096) {
D1 = MS_5803_ADC(0x00 + 0x08);
D2 = MS_5803_ADC(0x10 + 0x08);
}




dT = (int32_t)D2 - ( (int32_t)sensorCoeffs[5] * 256 );



TEMP = 2000 + ((int64_t)dT * sensorCoeffs[6]) / 8388608LL;

TEMP = (int32_t)TEMP;

# 254
if (TEMP < 2000) {

T2 = ((int64_t)dT * dT) / 2147483648ULL ;
T2 = (int32_t)T2;
OFF2 = 3 * ((TEMP-2000) * (TEMP-2000));
Sens2 = 7 * ((TEMP-2000)*(TEMP-2000)) / 8 ;
} else {

T2 = 0;
OFF2 = 0;
Sens2 = 0;
if (TEMP > 4500) {

Sens2 = Sens2 - ((TEMP-4500)*(TEMP-4500)) / 8;
}
}


if (TEMP < -1500) {


Sens2 = Sens2 + 2 * ((TEMP+1500)*(TEMP+1500));
}

# 284
Offset = (int64_t)sensorCoeffs[2] * 65536 + (sensorCoeffs[4] * (int64_t)dT) / 128;
Sensitivity = (int64_t)sensorCoeffs[1] * 32768 + (sensorCoeffs[3] * (int64_t)dT) / 256;



TEMP = TEMP - T2;
Offset = Offset - OFF2;
Sensitivity = Sensitivity - Sens2;

# 298
mbarInt = ((D1 * Sensitivity) / 2097152 - Offset) / 32768;
mbar = (float)mbarInt / 100;


tempC = (float)TEMP / 100;

# 315
}


# 22 "../pic18f458_badgerloop.c"
#pragma config OSC = HS
#pragma config OSCS = OFF


#pragma config PWRT = ON
#pragma config BOR = ON
#pragma config BORV = 25


#pragma config WDT = OFF
#pragma config WDTPS = 128


#pragma config STVR = OFF
#pragma config LVP = OFF


#pragma config CP0 = OFF
#pragma config CP1 = OFF
#pragma config CP2 = OFF
#pragma config CP3 = OFF


#pragma config CPB = OFF
#pragma config CPD = OFF


#pragma config WRT0 = OFF
#pragma config WRT1 = OFF
#pragma config WRT2 = OFF
#pragma config WRT3 = OFF


#pragma config WRTC = OFF
#pragma config WRTB = OFF
#pragma config WRTD = OFF


#pragma config EBTR0 = OFF
#pragma config EBTR1 = OFF
#pragma config EBTR2 = OFF
#pragma config EBTR3 = OFF


#pragma config EBTRB = OFF

# 126
void delayzz(void) {
int i, j;
for(i=0;i<5000;i++)
{
for(j=0;j<2;j++)
{

}
}
}

uint16_t convertFrom8To16(uint8_t dataFirst, uint8_t dataSecond) {
uint16_t dataBoth = 0x0000;

dataBoth = dataFirst;
dataBoth = dataBoth << 8;
dataBoth |= dataSecond;
return dataBoth;
}

uint8_t *convertFrom16To8(uint16_t dataAll) {
static uint8_t arrayData[2] = { 0x00, 0x00 };

*(arrayData) = (dataAll >> 8) & 0x00FF;
arrayData[1] = dataAll & 0x00FF;
return arrayData;
}

void CAN_SetMode(uint8_t canMode)
{

CANCON = canMode;


while((CANSTAT & 0xE0) != canMode);
}

void CAN_Init(void)
{
TRISB = (1<<3);


CAN_SetMode((0x80));

# 177
BRGCON1 = 0x00;
BRGCON2 = 0xBA;
BRGCON3 = 0x07;


RXM0SIDH = 0; RXM0SIDL = 0;
RXM1SIDH = 0; RXM1SIDL = 0;
RXF0SIDL = 0;
RXF1SIDL = 0;
RXF2SIDL = 0;
RXF3SIDL = 0;
RXF4SIDL = 0;
RXF5SIDL = 0;

RXB0CON = 0;
RXB1CON = 0;

# 200
CAN_SetMode((0x00));
}

void setupCANTxRx(void) {


TRISBbits.TRISB2 = 0;

TRISBbits.TRISB3 = 1;


CAN_Init();


Delay10KTCYx(50);
}

# 222
void initI2C_USART(void) {

TRISCbits.RC6 = 0;
TRISCbits.RC7 = 1;

# 231
OpenUSART (0b01111111 &
0b10111111 &
0b11111110 &
0b11111101 &
0b11111111 &
0b11111111, 129);


OpenI2C(0b00001000, 0b10000000);
SSPADD = ( ( 20000000 / ( 4 * 400000 ) ) - 1 );


Delay10KTCYx(50);
}

void initMPU6050(void) {

MPU6050(0x68);

MPU6050_initialize();


Delay10KTCYx(50);
}

# 13 "main.c"
volatile uint8_t receivedData[] = { 0, 0, 0, 0, 0, 0, 0, 0 };

volatile uint8_t sendData[] = { 0, 0, 0, 0, 0, 0, 0, 0 };


void CAN_Transmit(void)
{
uint16_t canId = (1);
canId = (canId<<5);


while(TXB0CON & (1<<3));

TXB0SIDL = (uint8_t)(canId & 0x00E0);
TXB0SIDH = (uint8_t)((canId>>8)& 0x00FF);



TXB0DLC = 0x08;


TXB0D0 = sendData[0];
TXB0D1 = sendData[1];
TXB0D2 = sendData[2];
TXB0D3 = sendData[3];
TXB0D4 = sendData[4];
TXB0D5 = sendData[5];
TXB0D6 = sendData[6];
TXB0D7 = sendData[7];


TXB0CON = (1<<3);

}

uint16_t CAN_Receive(void)
{


uint8_t canIdH=0;
uint8_t canIdL=0;
uint16_t canId=0;


while(!(RXB0CON & (1<<7)));


canIdL = RXB0SIDL;
canIdH = RXB0SIDH;


receivedData[0] = RXB0D0;
receivedData[1] = RXB0D1;
receivedData[2] = RXB0D2;
receivedData[3] = RXB0D3;
receivedData[4] = RXB0D4;
receivedData[5] = RXB0D5;
receivedData[6] = RXB0D6;
receivedData[7] = RXB0D7;


RXB0CON &= ~(1<<7);

canId = canIdH<<3;
canId |= canIdL>>5;

return canId;
}



void flashLED(void) {
int count;
count = 10;
while(1) {
LATBbits.LATB0 = 1;
delayzz();
LATBbits.LATB0 = 0;
delayzz();
count--;
if (count == 0)
{
break;
}
}
}

void main(void) {
int16_t ax, ay, az, gx, gy, gz;
uint8_t a_unsigned_array[2];
initI2C_USART();
initMPU6050();
setupCANTxRx();


TRISBbits.TRISB0 = 0;
flashLED();
while(1)
{

MPU6050_getMotion6(&ax, &ay, &az, &gx, &gy, &gz);
uint8_t AFS_SEL = MPU6050_getFullScaleAccelRange();

# 132
sendData[0] = 1;
sendData[1] = AFS_SEL;


a_unsigned_array[0] = convertFrom16To8( (uint16_t) ax )[0];
a_unsigned_array[1] = convertFrom16To8( (uint16_t) ax )[1];
sendData[2] = a_unsigned_array[0];
sendData[3] = a_unsigned_array[1];

a_unsigned_array[0] = convertFrom16To8( (uint16_t) ay )[0];
a_unsigned_array[1] = convertFrom16To8( (uint16_t) ay )[1];
sendData[4] = a_unsigned_array[0];
sendData[5] = a_unsigned_array[1];


a_unsigned_array[0] = convertFrom16To8( (uint16_t) az )[0];
a_unsigned_array[1] = convertFrom16To8( (uint16_t) az )[1];
sendData[6] = a_unsigned_array[0];
sendData[7] = a_unsigned_array[1];

CAN_Transmit();

if (ay > 10)
{
LATBbits.LATB0 ^= 1;
}

_delay((unsigned long)((25)*(20000000/4000.0)));
}
}
